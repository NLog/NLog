<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Data.DataSetExtensions">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data">
      <topicdata group="api" />
      <apidata name="System.Data" group="namespace" />
      <elements>
        <element api="T:System.Data.AcceptRejectRule" />
        <element api="T:System.Data.InternalDataCollectionBase" />
        <element api="T:System.Data.TypedDataSetGenerator" />
        <element api="T:System.Data.StrongTypingException" />
        <element api="T:System.Data.TypedDataSetGeneratorException" />
        <element api="T:System.Data.CommandBehavior" />
        <element api="T:System.Data.CommandType" />
        <element api="T:System.Data.KeyRestrictionBehavior" />
        <element api="T:System.Data.ConflictOption" />
        <element api="T:System.Data.ConnectionState" />
        <element api="T:System.Data.Constraint" />
        <element api="T:System.Data.ConstraintCollection" />
        <element api="T:System.Data.DataColumn" />
        <element api="T:System.Data.DataColumnChangeEventArgs" />
        <element api="T:System.Data.DataColumnChangeEventHandler" />
        <element api="T:System.Data.DataColumnCollection" />
        <element api="T:System.Data.DataException" />
        <element api="T:System.Data.ConstraintException" />
        <element api="T:System.Data.DeletedRowInaccessibleException" />
        <element api="T:System.Data.DuplicateNameException" />
        <element api="T:System.Data.InRowChangingEventException" />
        <element api="T:System.Data.InvalidConstraintException" />
        <element api="T:System.Data.MissingPrimaryKeyException" />
        <element api="T:System.Data.NoNullAllowedException" />
        <element api="T:System.Data.ReadOnlyException" />
        <element api="T:System.Data.RowNotInTableException" />
        <element api="T:System.Data.VersionNotFoundException" />
        <element api="T:System.Data.DataRelation" />
        <element api="T:System.Data.DataRelationCollection" />
        <element api="T:System.Data.DataRow" />
        <element api="T:System.Data.DataRowBuilder" />
        <element api="T:System.Data.DataRowAction" />
        <element api="T:System.Data.DataRowChangeEventArgs" />
        <element api="T:System.Data.DataRowChangeEventHandler" />
        <element api="T:System.Data.DataRowCollection" />
        <element api="T:System.Data.DataRowState" />
        <element api="T:System.Data.DataRowVersion" />
        <element api="T:System.Data.DataRowView" />
        <element api="T:System.Data.SerializationFormat" />
        <element api="T:System.Data.DataSet" />
        <element api="T:System.Data.DataSetSchemaImporterExtension" />
        <element api="T:System.Data.DataSetDateTime" />
        <element api="T:System.Data.DataSysDescriptionAttribute" />
        <element api="T:System.Data.DataTable" />
        <element api="T:System.Data.DataTableClearEventArgs" />
        <element api="T:System.Data.DataTableClearEventHandler" />
        <element api="T:System.Data.DataTableCollection" />
        <element api="T:System.Data.DataTableNewRowEventArgs" />
        <element api="T:System.Data.DataTableNewRowEventHandler" />
        <element api="T:System.Data.DataTableReader" />
        <element api="T:System.Data.DataView" />
        <element api="T:System.Data.DataViewManager" />
        <element api="T:System.Data.DataViewRowState" />
        <element api="T:System.Data.DataViewSetting" />
        <element api="T:System.Data.DataViewSettingCollection" />
        <element api="T:System.Data.DBConcurrencyException" />
        <element api="T:System.Data.DbType" />
        <element api="T:System.Data.FillErrorEventArgs" />
        <element api="T:System.Data.FillErrorEventHandler" />
        <element api="T:System.Data.InvalidExpressionException" />
        <element api="T:System.Data.EvaluateException" />
        <element api="T:System.Data.SyntaxErrorException" />
        <element api="T:System.Data.ForeignKeyConstraint" />
        <element api="T:System.Data.IColumnMapping" />
        <element api="T:System.Data.IColumnMappingCollection" />
        <element api="T:System.Data.IDataAdapter" />
        <element api="T:System.Data.IDataParameter" />
        <element api="T:System.Data.IDataParameterCollection" />
        <element api="T:System.Data.IDataReader" />
        <element api="T:System.Data.IDataRecord" />
        <element api="T:System.Data.IDbCommand" />
        <element api="T:System.Data.IDbConnection" />
        <element api="T:System.Data.IDbDataAdapter" />
        <element api="T:System.Data.IDbDataParameter" />
        <element api="T:System.Data.IDbTransaction" />
        <element api="T:System.Data.IsolationLevel" />
        <element api="T:System.Data.ITableMapping" />
        <element api="T:System.Data.ITableMappingCollection" />
        <element api="T:System.Data.LoadOption" />
        <element api="T:System.Data.MappingType" />
        <element api="T:System.Data.MergeFailedEventArgs" />
        <element api="T:System.Data.MergeFailedEventHandler" />
        <element api="T:System.Data.MissingMappingAction" />
        <element api="T:System.Data.MissingSchemaAction" />
        <element api="T:System.Data.PropertyAttributes" />
        <element api="T:System.Data.OperationAbortedException" />
        <element api="T:System.Data.ParameterDirection" />
        <element api="T:System.Data.PropertyCollection" />
        <element api="T:System.Data.StatementCompletedEventArgs" />
        <element api="T:System.Data.StatementCompletedEventHandler" />
        <element api="T:System.Data.Rule" />
        <element api="T:System.Data.SchemaSerializationMode" />
        <element api="T:System.Data.SchemaType" />
        <element api="T:System.Data.SqlDbType" />
        <element api="T:System.Data.StateChangeEventArgs" />
        <element api="T:System.Data.StateChangeEventHandler" />
        <element api="T:System.Data.StatementType" />
        <element api="T:System.Data.UniqueConstraint" />
        <element api="T:System.Data.UpdateRowSource" />
        <element api="T:System.Data.UpdateStatus" />
        <element api="T:System.Data.XmlReadMode" />
        <element api="T:System.Data.XmlWriteMode" />
        <element api="T:System.Data.DataRowComparer" />
        <element api="T:System.Data.DataRowComparer`1" />
        <element api="T:System.Data.DataTableExtensions" />
        <element api="T:System.Data.EnumerableRowCollection" />
        <element api="T:System.Data.EnumerableRowCollection`1" />
        <element api="T:System.Data.OrderedEnumerableRowCollection`1" />
        <element api="T:System.Data.EnumerableRowCollectionExtensions" />
        <element api="T:System.Data.DataRowExtensions" />
        <element api="T:System.Data.TypedTableBase`1" />
        <element api="T:System.Data.TypedTableBaseExtensions" />
        <element api="T:System.Data.PropertyConstraintException" />
        <element api="T:System.Data.EntityCommandCompilationException" />
        <element api="T:System.Data.EntityCommandExecutionException" />
        <element api="T:System.Data.EntityException" />
        <element api="T:System.Data.EntitySqlException" />
        <element api="T:System.Data.OptimisticConcurrencyException" />
        <element api="T:System.Data.ProviderIncompatibleException" />
        <element api="T:System.Data.MappingException" />
        <element api="T:System.Data.MetadataException" />
        <element api="T:System.Data.UpdateException" />
        <element api="T:System.Data.ObjectNotFoundException" />
        <element api="T:System.Data.InvalidCommandTreeException" />
        <element api="T:System.Data.EntityKey" />
        <element api="T:System.Data.EntityKeyMember" />
        <element api="T:System.Data.EntityState" />
        <element api="T:System.Data.IExtendedDataRecord" />
      </elements>
      <file name="03ab2fb0-c3f0-6037-a195-d971e69674f0" />
    </api>
    <api id="T:System.Data.AcceptRejectRule">
      <topicdata group="api" />
      <apidata name="AcceptRejectRule" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.AcceptRejectRule.None" />
        <element api="F:System.Data.AcceptRejectRule.Cascade" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="5147eadb-bc19-9d88-9a45-b703c3b314ee" />
    </api>
    <api id="F:System.Data.AcceptRejectRule.Cascade">
      <topicdata group="api" notopic="" />
      <apidata name="Cascade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </containers>
      <file name="9d703e38-9967-7716-999e-8e5fd1cf3686" />
    </api>
    <api id="F:System.Data.AcceptRejectRule.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </containers>
      <file name="497beca5-8e78-af03-e460-bb06a9e76166" />
    </api>
    <api id="T:System.Data.CommandBehavior">
      <topicdata group="api" />
      <apidata name="CommandBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.CommandBehavior.Default" />
        <element api="F:System.Data.CommandBehavior.SingleResult" />
        <element api="F:System.Data.CommandBehavior.SchemaOnly" />
        <element api="F:System.Data.CommandBehavior.KeyInfo" />
        <element api="F:System.Data.CommandBehavior.SingleRow" />
        <element api="F:System.Data.CommandBehavior.SequentialAccess" />
        <element api="F:System.Data.CommandBehavior.CloseConnection" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="da116b77-8153-0911-60bf-a3b68bbb10f0" />
    </api>
    <api id="F:System.Data.CommandBehavior.CloseConnection">
      <topicdata group="api" notopic="" />
      <apidata name="CloseConnection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="33fc514d-ba43-7962-49ab-0c2ea46fca90" />
    </api>
    <api id="F:System.Data.CommandBehavior.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="ee14fe38-03f5-dfb5-c1b3-85acebd54a1f" />
    </api>
    <api id="F:System.Data.CommandBehavior.KeyInfo">
      <topicdata group="api" notopic="" />
      <apidata name="KeyInfo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="134a15e1-6fa6-9902-dd68-1a0f370b6603" />
    </api>
    <api id="F:System.Data.CommandBehavior.SchemaOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="22a28608-0396-31db-71ab-f0921563818a" />
    </api>
    <api id="F:System.Data.CommandBehavior.SequentialAccess">
      <topicdata group="api" notopic="" />
      <apidata name="SequentialAccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="8e9fce59-ea62-7c3c-e43d-2b07fb49a242" />
    </api>
    <api id="F:System.Data.CommandBehavior.SingleResult">
      <topicdata group="api" notopic="" />
      <apidata name="SingleResult" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="7bc5c456-7077-03c5-1fcf-5a0621892007" />
    </api>
    <api id="F:System.Data.CommandBehavior.SingleRow">
      <topicdata group="api" notopic="" />
      <apidata name="SingleRow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
      <file name="676f12c2-fae4-f2dd-305d-6015ddd1ba3f" />
    </api>
    <api id="T:System.Data.CommandType">
      <topicdata group="api" />
      <apidata name="CommandType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.CommandType.Text" />
        <element api="F:System.Data.CommandType.StoredProcedure" />
        <element api="F:System.Data.CommandType.TableDirect" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="c967762a-2d62-0f58-6ffb-eadb3a8926f2" />
    </api>
    <api id="F:System.Data.CommandType.StoredProcedure">
      <topicdata group="api" notopic="" />
      <apidata name="StoredProcedure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
      <file name="0a545247-0baf-7a8e-ed58-d0dbc973d4cb" />
    </api>
    <api id="F:System.Data.CommandType.TableDirect">
      <topicdata group="api" notopic="" />
      <apidata name="TableDirect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
      <file name="3d3c61e5-70c0-a091-a266-b3254c54854b" />
    </api>
    <api id="F:System.Data.CommandType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
      <file name="7934c651-8647-478b-1182-1c34b08b1945" />
    </api>
    <api id="T:System.Data.ConflictOption">
      <topicdata group="api" />
      <apidata name="ConflictOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ConflictOption.CompareAllSearchableValues" />
        <element api="F:System.Data.ConflictOption.CompareRowVersion" />
        <element api="F:System.Data.ConflictOption.OverwriteChanges" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b5f0ea21-d5a3-7e34-0078-02b873f4d65c" />
    </api>
    <api id="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <topicdata group="api" notopic="" />
      <apidata name="CompareAllSearchableValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
      <file name="54c955f8-cbc8-0cb9-990a-84fa68c69b9c" />
    </api>
    <api id="F:System.Data.ConflictOption.CompareRowVersion">
      <topicdata group="api" notopic="" />
      <apidata name="CompareRowVersion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
      <file name="75dfd554-cb0c-2e70-5a7e-e64620875127" />
    </api>
    <api id="F:System.Data.ConflictOption.OverwriteChanges">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
      <file name="8cdece37-4659-03d1-7985-cef1c2a6cd45" />
    </api>
    <api id="T:System.Data.ConnectionState">
      <topicdata group="api" />
      <apidata name="ConnectionState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ConnectionState.Closed" />
        <element api="F:System.Data.ConnectionState.Open" />
        <element api="F:System.Data.ConnectionState.Connecting" />
        <element api="F:System.Data.ConnectionState.Executing" />
        <element api="F:System.Data.ConnectionState.Fetching" />
        <element api="F:System.Data.ConnectionState.Broken" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e167ae1d-572c-5228-7783-58231f54a0d6" />
    </api>
    <api id="F:System.Data.ConnectionState.Broken">
      <topicdata group="api" notopic="" />
      <apidata name="Broken" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="14623ff0-4327-67cf-0e2c-e7741a70cc7e" />
    </api>
    <api id="F:System.Data.ConnectionState.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="8d4082d4-82f0-dcbf-f53a-6147a9bf1a93" />
    </api>
    <api id="F:System.Data.ConnectionState.Connecting">
      <topicdata group="api" notopic="" />
      <apidata name="Connecting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="ac651266-8961-dc68-436d-9d1faec65c9c" />
    </api>
    <api id="F:System.Data.ConnectionState.Executing">
      <topicdata group="api" notopic="" />
      <apidata name="Executing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="fc5a7af9-afa9-35dd-5e35-6e2d5afbfccf" />
    </api>
    <api id="F:System.Data.ConnectionState.Fetching">
      <topicdata group="api" notopic="" />
      <apidata name="Fetching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="f69b961f-ba23-f4eb-6405-db2cacf52d58" />
    </api>
    <api id="F:System.Data.ConnectionState.Open">
      <topicdata group="api" notopic="" />
      <apidata name="Open" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
      <file name="a61c292b-250b-6413-1c44-66bd95503d55" />
    </api>
    <api id="T:System.Data.Constraint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
          <type api="T:System.Data.UniqueConstraint" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5aa46327-2d9b-3654-1851-d9def05c8351" />
    </api>
    <api id="AllMembers.T:System.Data.Constraint">
      <topicdata name="Constraint" group="list" subgroup="members" typeTopicId="T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.Constraint.#ctor" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="P:System.Data.Constraint.Table" />
        <element api="M:System.Data.Constraint.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" />
      </containers>
      <file name="2ae2c407-8fd2-1bfa-b835-1a5824b2c57e" />
    </api>
    <api id="Methods.T:System.Data.Constraint">
      <topicdata name="Constraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" />
      </containers>
      <file name="097040e4-9f58-92ea-ef3c-8225ae31c028" />
    </api>
    <api id="Properties.T:System.Data.Constraint">
      <topicdata name="Constraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.Constraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" />
      </containers>
      <file name="8fac932e-3378-85ae-3e31-9ee40ec5789a" />
    </api>
    <api id="M:System.Data.Constraint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <file name="a5aaccb4-20d4-5f5b-1847-6f867dc45b5c" />
    </api>
    <api id="P:System.Data.Constraint._DataSet">
      <topicdata group="api" />
      <apidata name="_DataSet" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get__DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cb9ba6de-9ebd-fba3-f813-23e4f508d8cf" />
    </api>
    <api id="M:System.Data.Constraint.CheckStateForProperty">
      <topicdata group="api" />
      <apidata name="CheckStateForProperty" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <file name="f91d8957-8c65-c975-f5ba-0f314180790a" />
    </api>
    <api id="P:System.Data.Constraint.ConstraintName">
      <topicdata group="api" />
      <apidata name="ConstraintName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConstraintName" />
      <setter name="set_ConstraintName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="fc327bed-7c01-234c-f2cc-cf2f9587b92d" />
    </api>
    <api id="P:System.Data.Constraint.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d0b99597-458e-7188-68e5-4edeea3f2eba" />
    </api>
    <api id="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="SetDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <file name="f644558c-b3de-cadf-81e1-c35fb0cf85a9" />
    </api>
    <api id="P:System.Data.Constraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <file name="7b35325d-7854-a50d-e681-c90a83e43126" />
    </api>
    <api id="M:System.Data.Constraint.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <file name="fa814574-1366-3964-92a2-363c1acf6bc7" />
    </api>
    <api id="T:System.Data.ConstraintCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8acc67fd-4a7b-dc66-98f6-00deb2feb733" />
    </api>
    <api id="AllMembers.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="members" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.ConstraintCollection.Add">
          <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        </element>
        <element api="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
        <element api="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Clear" />
        <element api="E:System.Data.ConstraintCollection.CollectionChanged" />
        <element api="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <element api="Overload:System.Data.ConstraintCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.IndexOf">
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.Item">
          <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
          <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.Remove">
          <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
      <file name="5f791da7-13c2-2b97-6d51-15d145016cea" />
    </api>
    <api id="Methods.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.ConstraintCollection.Add">
          <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        </element>
        <element api="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
        <element api="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Clear" />
        <element api="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <element api="Overload:System.Data.ConstraintCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.IndexOf">
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.Remove">
          <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
      <file name="aa866147-c417-64f0-237f-1a3960f9ef88" />
    </api>
    <api id="Properties.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.ConstraintCollection.Item">
          <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
          <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
      <file name="439469b8-0a22-a1e2-e719-5d4930288944" />
    </api>
    <api id="Events.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.ConstraintCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
      <file name="3124aa68-0767-06ae-0f8e-e985a1f46e12" />
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="e0674ced-09bc-b5bd-8403-7365e6f4acb2" />
    </api>
    <api id="Overload:System.Data.ConstraintCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="27526c19-7d67-3c59-efd9-7c2fd0009545" />
    </api>
    <api id="Overload:System.Data.ConstraintCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="9ab71491-f97e-a272-4ed7-6a99061e1b67" />
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
        <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="a94ac458-2fd1-752c-05b8-b2fe6d8ade9e" />
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintCollection" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="864bfd0d-8b0d-8008-68ee-1e514f695e4f" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="016c15ee-737a-8f39-e356-e7cf0b61af22" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="609b0a43-b6b8-1c26-4293-7d0f0dbb875d" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primaryKeyColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="foreignKeyColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="86b45184-c295-7ecf-b00a-3284d0239834" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="6daf7eae-d542-ffff-3aa7-6fe427b9e57f" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primaryKeyColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="foreignKeyColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="256d2b94-a7aa-ef7c-de9b-deebeb395560" />
    </api>
    <api id="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraints">
          <arrayOf rank="1">
            <type api="T:System.Data.Constraint" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="adba6f90-6a97-bae2-8d84-6345476e57ec" />
    </api>
    <api id="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="02161295-95c2-cd56-1a1c-408cd426d2f3" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="379d6898-3a7c-00aa-b88e-6faabe2270ba" />
    </api>
    <api id="E:System.Data.ConstraintCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="2ddab971-da6c-42a0-06e6-ffc56fd9db2f" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="9e3db73d-c24c-d668-d1c5-b86b975b82d0" />
    </api>
    <api id="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.Constraint" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="e2d7530b-bc63-a83a-b75b-8cd086b5acdc" />
    </api>
    <api id="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="287981cf-07d4-4f93-67d8-e5464e0f24b2" />
    </api>
    <api id="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="a944f87d-28a9-2e27-9f86-32d1b8010358" />
    </api>
    <api id="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="022a8cf6-6834-481f-521e-00c8642d5a87" />
    </api>
    <api id="P:System.Data.ConstraintCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="cf74921b-76a1-3bdf-76d3-70d1a35aa7b3" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="87f67491-c0fc-728a-30b0-0072bc65147f" />
    </api>
    <api id="M:System.Data.ConstraintCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="58030aa3-575f-623c-27e3-d8916d701119" />
    </api>
    <api id="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
      <file name="82a9fab6-b2c7-efae-638e-0142d8cc4288" />
    </api>
    <api id="T:System.Data.ConstraintException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.PropertyConstraintException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="f773904d-554d-4a35-c5d1-6d03956e2dfc" />
    </api>
    <api id="AllMembers.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="members" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.ConstraintException.#ctor">
          <element api="M:System.Data.ConstraintException.#ctor" />
          <element api="M:System.Data.ConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
      <file name="5a47d217-a944-62c1-4496-28b0e4e081bc" />
    </api>
    <api id="Methods.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
      <file name="af88e661-44a1-19aa-d648-6c2aaf943074" />
    </api>
    <api id="Properties.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
      <file name="35304f1f-a5c6-70ec-20d4-f303f38942e0" />
    </api>
    <api id="Events.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Events" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
      <file name="22a93182-2c98-bd54-e9e9-3818ff12a5fc" />
    </api>
    <api id="Overload:System.Data.ConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ConstraintException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ConstraintException.#ctor" />
        <element api="M:System.Data.ConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
      <file name="5ef10ce7-e32a-3809-fb5a-5a3c64a9471a" />
    </api>
    <api id="M:System.Data.ConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
      <file name="7c0494c0-7e54-5a22-3d7c-95a815a709e5" />
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
      <file name="c3506b28-3c26-59ce-e098-8af3fe4aeafe" />
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
      <file name="f96d30c0-2bd0-b2dd-0769-0dbb53be552f" />
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
      <file name="5aa8984d-ee8b-8278-ffe2-82e99be52000" />
    </api>
    <api id="T:System.Data.DataColumn">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ColumnName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e59afc49-4972-84e4-cb3e-d58ed7954071" />
    </api>
    <api id="AllMembers.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="members" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.DataColumn.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="Overload:System.Data.DataColumn.#ctor">
          <element api="M:System.Data.DataColumn.#ctor" />
          <element api="M:System.Data.DataColumn.#ctor(System.String)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
        </element>
        <element api="P:System.Data.DataColumn.AllowDBNull" />
        <element api="P:System.Data.DataColumn.AutoIncrement" />
        <element api="P:System.Data.DataColumn.AutoIncrementSeed" />
        <element api="P:System.Data.DataColumn.AutoIncrementStep" />
        <element api="P:System.Data.DataColumn.Caption" />
        <element api="M:System.Data.DataColumn.CheckNotAllowNull" />
        <element api="M:System.Data.DataColumn.CheckUnique" />
        <element api="P:System.Data.DataColumn.ColumnMapping" />
        <element api="P:System.Data.DataColumn.ColumnName" />
        <element api="P:System.Data.DataColumn.DataType" />
        <element api="P:System.Data.DataColumn.DateTimeMode" />
        <element api="P:System.Data.DataColumn.DefaultValue" />
        <element api="P:System.Data.DataColumn.Expression" />
        <element api="P:System.Data.DataColumn.ExtendedProperties" />
        <element api="P:System.Data.DataColumn.MaxLength" />
        <element api="P:System.Data.DataColumn.Namespace" />
        <element api="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="P:System.Data.DataColumn.Ordinal" />
        <element api="P:System.Data.DataColumn.Prefix" />
        <element api="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
        <element api="P:System.Data.DataColumn.ReadOnly" />
        <element api="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
        <element api="P:System.Data.DataColumn.Table" />
        <element api="M:System.Data.DataColumn.ToString" />
        <element api="P:System.Data.DataColumn.Unique" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
      <file name="27e48066-6f35-7cae-fd7b-5ff50bd28aeb" />
    </api>
    <api id="Methods.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataColumn.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataColumn.CheckNotAllowNull" />
        <element api="M:System.Data.DataColumn.CheckUnique" />
        <element api="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
        <element api="M:System.Data.DataColumn.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
      <file name="428b0be3-745d-9f2f-12e3-13d663403942" />
    </api>
    <api id="Properties.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataColumn.AllowDBNull" />
        <element api="P:System.Data.DataColumn.AutoIncrement" />
        <element api="P:System.Data.DataColumn.AutoIncrementSeed" />
        <element api="P:System.Data.DataColumn.AutoIncrementStep" />
        <element api="P:System.Data.DataColumn.Caption" />
        <element api="P:System.Data.DataColumn.ColumnMapping" />
        <element api="P:System.Data.DataColumn.ColumnName" />
        <element api="P:System.Data.DataColumn.DataType" />
        <element api="P:System.Data.DataColumn.DateTimeMode" />
        <element api="P:System.Data.DataColumn.DefaultValue" />
        <element api="P:System.Data.DataColumn.Expression" />
        <element api="P:System.Data.DataColumn.ExtendedProperties" />
        <element api="P:System.Data.DataColumn.MaxLength" />
        <element api="P:System.Data.DataColumn.Namespace" />
        <element api="P:System.Data.DataColumn.Ordinal" />
        <element api="P:System.Data.DataColumn.Prefix" />
        <element api="P:System.Data.DataColumn.ReadOnly" />
        <element api="P:System.Data.DataColumn.Table" />
        <element api="P:System.Data.DataColumn.Unique" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
      <file name="9f9ba838-da5c-8bf9-37b8-e67e4467f375" />
    </api>
    <api id="Events.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Events" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
      <file name="a60882ad-e262-d015-76aa-c01dc31b1436" />
    </api>
    <api id="Overload:System.Data.DataColumn.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumn" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataColumn.#ctor" />
        <element api="M:System.Data.DataColumn.#ctor(System.String)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="f8f5231e-7f3e-0511-a139-43a5a79e68c2" />
    </api>
    <api id="M:System.Data.DataColumn.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="1316c535-16fb-f9e3-0423-02fa8e1d54e9" />
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="bfdbfb7e-15b3-98d9-c328-b5442fa31a2b" />
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="ab34e823-253a-4de8-785d-12d2ca39c566" />
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expr">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="b73da073-165d-c04f-9fbf-b4ebe71322b2" />
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expr">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.MappingType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="d2b6b016-350d-b479-a18a-ca0c3191a2af" />
    </api>
    <api id="P:System.Data.DataColumn.AllowDBNull">
      <topicdata group="api" />
      <apidata name="AllowDBNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDBNull" />
      <setter name="set_AllowDBNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4e912e98-d209-8152-09c0-e687e763f8ce" />
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrement">
      <topicdata group="api" />
      <apidata name="AutoIncrement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrement" />
      <setter name="set_AutoIncrement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8ccdccc0-fbd9-28bb-7a0a-5cbce4fb376c" />
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrementSeed">
      <topicdata group="api" />
      <apidata name="AutoIncrementSeed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrementSeed" />
      <setter name="set_AutoIncrementSeed" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eec2177f-9610-7ca7-1708-02b789356a45" />
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrementStep">
      <topicdata group="api" />
      <apidata name="AutoIncrementStep" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrementStep" />
      <setter name="set_AutoIncrementStep" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2d4095ce-5c6e-2894-1c69-52795cba5eb8" />
    </api>
    <api id="P:System.Data.DataColumn.Caption">
      <topicdata group="api" />
      <apidata name="Caption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Caption" />
      <setter name="set_Caption" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="c0a3b149-8b5f-307d-fb2a-af7a2dd3a0f2" />
    </api>
    <api id="M:System.Data.DataColumn.CheckNotAllowNull">
      <topicdata group="api" />
      <apidata name="CheckNotAllowNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="37750373-3991-b226-5f76-e742ce0a822a" />
    </api>
    <api id="M:System.Data.DataColumn.CheckUnique">
      <topicdata group="api" />
      <apidata name="CheckUnique" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="d2770398-9859-ff6c-884c-de6582c67334" />
    </api>
    <api id="P:System.Data.DataColumn.ColumnMapping">
      <topicdata group="api" />
      <apidata name="ColumnMapping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ColumnMapping" />
      <setter name="set_ColumnMapping" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.MappingType" ref="false" />
            <enumValue>
              <field name="Element" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="42e37d92-c8bb-9213-e0f5-d5bc86600a23" />
    </api>
    <api id="P:System.Data.DataColumn.ColumnName">
      <topicdata group="api" />
      <apidata name="ColumnName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ColumnName" />
      <setter name="set_ColumnName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="3bac5723-0b21-80a4-16f6-2d2e3bbeb76d" />
    </api>
    <api id="P:System.Data.DataColumn.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.String" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="9353dda3-def5-c9b6-121d-4dff0d6a275c" />
    </api>
    <api id="P:System.Data.DataColumn.DateTimeMode">
      <topicdata group="api" />
      <apidata name="DateTimeMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DateTimeMode" />
      <setter name="set_DateTimeMode" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.DataSetDateTime" ref="false" />
            <enumValue>
              <field name="UnspecifiedLocal" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="9d1f2f42-8738-8533-3ba7-a85258895423" />
    </api>
    <api id="P:System.Data.DataColumn.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="efa5b500-b34a-2466-7086-d0fd97e11eea" />
    </api>
    <api id="P:System.Data.DataColumn.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="31e320b8-7c49-1917-7e41-452b15ec6a97" />
    </api>
    <api id="P:System.Data.DataColumn.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="878b0ef5-ccb2-429b-7984-33cedb61696b" />
    </api>
    <api id="P:System.Data.DataColumn.MaxLength">
      <topicdata group="api" />
      <apidata name="MaxLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxLength" />
      <setter name="set_MaxLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bd3c257d-43e5-5e61-0f52-3ff0bd2f126f" />
    </api>
    <api id="P:System.Data.DataColumn.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="325caae3-de71-2291-35e5-4f28f1fb497a" />
    </api>
    <api id="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="9257c51f-67e5-fecf-a14d-227ff5225339" />
    </api>
    <api id="P:System.Data.DataColumn.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4f940417-2b8a-a7e5-759c-30d295b58f3a" />
    </api>
    <api id="P:System.Data.DataColumn.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="52e3e115-0e66-48b6-2f90-0d7462026f74" />
    </api>
    <api id="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="95061326-731c-da06-8d62-8115ed55d48b" />
    </api>
    <api id="P:System.Data.DataColumn.ReadOnly">
      <topicdata group="api" />
      <apidata name="ReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadOnly" />
      <setter name="set_ReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="13717538-eff3-cb41-849b-17afe7bf17c4" />
    </api>
    <api id="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <topicdata group="api" />
      <apidata name="SetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="4e052ff9-3e38-aa63-5b50-3c3b9834e009" />
    </api>
    <api id="P:System.Data.DataColumn.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="edceafc2-7c35-9bc3-1bc9-8fe87550927c" />
    </api>
    <api id="M:System.Data.DataColumn.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <file name="3b724225-5d85-01ea-647e-926009978228" />
    </api>
    <api id="P:System.Data.DataColumn.Unique">
      <topicdata group="api" />
      <apidata name="Unique" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Unique" />
      <setter name="set_Unique" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a281b668-2a90-e7c7-8cbb-0ce257937739" />
    </api>
    <api id="T:System.Data.DataColumnChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="cf3111c4-9fbc-6401-49e2-3ae5139790c9" />
    </api>
    <api id="AllMembers.T:System.Data.DataColumnChangeEventArgs">
      <topicdata name="DataColumnChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Column" />
        <element api="P:System.Data.DataColumnChangeEventArgs.ProposedValue" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" />
      </containers>
      <file name="ecfa0cd0-15c8-135f-8f11-651cd1bcba0d" />
    </api>
    <api id="Methods.T:System.Data.DataColumnChangeEventArgs">
      <topicdata name="DataColumnChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" />
      </containers>
      <file name="fc90cb5f-c57c-eb4c-e6a8-39b41aa9b7a2" />
    </api>
    <api id="Properties.T:System.Data.DataColumnChangeEventArgs">
      <topicdata name="DataColumnChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataColumnChangeEventArgs.Column" />
        <element api="P:System.Data.DataColumnChangeEventArgs.ProposedValue" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" />
      </containers>
      <file name="48bf5377-33b6-dec3-cd1f-64ebd42aa5dc" />
    </api>
    <api id="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
      <file name="04c9ceb0-a52f-1748-2812-48121d0dc786" />
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.Column">
      <topicdata group="api" />
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
      <file name="15af8878-d681-af38-6b04-bec289e03760" />
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <topicdata group="api" />
      <apidata name="ProposedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProposedValue" />
      <setter name="set_ProposedValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
      <file name="9ea57871-fad2-ac46-b26e-7410ee18e30c" />
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
      <file name="fef57903-687f-4b1b-30b1-aa8d5eccdcfc" />
    </api>
    <api id="T:System.Data.DataColumnChangeEventHandler">
      <topicdata group="api" />
      <apidata name="DataColumnChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b7057c04-a5c4-1e7d-977d-9a8562b990e8" />
    </api>
    <api id="T:System.Data.DataColumnCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b604bdae-5297-09dd-6c0a-d8c3fb8fc907" />
    </api>
    <api id="AllMembers.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="members" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataColumnCollection.Add">
          <element api="M:System.Data.DataColumnCollection.Add" />
          <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
        <element api="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Clear" />
        <element api="E:System.Data.DataColumnCollection.CollectionChanged" />
        <element api="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataColumnCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.IndexOf">
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.Item">
          <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.Remove">
          <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
      <file name="d24ae2b8-9afe-ace7-a7dc-e16176d7d2fb" />
    </api>
    <api id="Methods.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataColumnCollection.Add">
          <element api="M:System.Data.DataColumnCollection.Add" />
          <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
        <element api="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Clear" />
        <element api="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataColumnCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.IndexOf">
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.Remove">
          <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
      <file name="2654a65d-3685-677e-7136-dd71501c2a2f" />
    </api>
    <api id="Properties.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataColumnCollection.Item">
          <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
      <file name="cf0a916b-1e7c-82d8-237f-38f619f6a749" />
    </api>
    <api id="Events.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataColumnCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
      <file name="9d273e58-2e87-fc90-12e0-9fb03666e455" />
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.Add" />
        <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="f9d98e58-fb3a-6c6f-fea2-6f36011767eb" />
    </api>
    <api id="Overload:System.Data.DataColumnCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="cda15e23-1f99-ab9f-e15d-70f961950093" />
    </api>
    <api id="Overload:System.Data.DataColumnCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="d7052bb2-4cfd-0aab-ae41-d71ef46ca68c" />
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="57baf809-3469-5190-c6db-22b95867817a" />
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataColumnCollection" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="b4c0ee90-bcf8-097f-15f9-dfed0eabcc44" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="e31ecceb-a680-4d2d-8a3e-82f28c9027b7" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="8d1e9068-3ced-cc67-3833-6671d4d365ce" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="71462ae4-d1de-8a76-b31a-6879f53c3a09" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="31c2bf0b-48ff-fbf6-6061-5f01d4b81744" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="080cc8f0-4606-b689-9ec8-bc0791833420" />
    </api>
    <api id="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="5d8ea9df-dcdd-598e-9e58-d233f281c547" />
    </api>
    <api id="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="e6040c42-8404-dd4b-2419-85112fbe4e7f" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="79fafeae-ff48-5c33-e6de-b962b50a9334" />
    </api>
    <api id="E:System.Data.DataColumnCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="b8dfe03c-10d9-fd7c-e362-7cbabf3217f8" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="20636758-fcc8-ca82-ef38-991b108e59b7" />
    </api>
    <api id="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="f83de57f-02bb-7de4-23ef-32c8905e4ff9" />
    </api>
    <api id="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="055d4fbd-592a-fb9c-56eb-0e66e4bc3133" />
    </api>
    <api id="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="ed7d16fa-2278-289f-3df2-39c7e1458112" />
    </api>
    <api id="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="2cbf97f6-d554-d6e1-f3cd-edc3f858fe09" />
    </api>
    <api id="P:System.Data.DataColumnCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="0f88c5fa-8993-8347-ded7-8382fbba8423" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="0bbf2fcc-faf4-5f2f-178a-65dd9d3e5764" />
    </api>
    <api id="M:System.Data.DataColumnCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="3aed2a33-f0c5-b0a4-f681-f41d6d715279" />
    </api>
    <api id="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
      <file name="dcbad6f4-2df3-a4ec-f178-d4541d3b9908" />
    </api>
    <api id="T:System.Data.DataException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.StrongTypingException" ref="true" />
          <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
          <type api="T:System.Data.ConstraintException" ref="true" />
          <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
          <type api="T:System.Data.DuplicateNameException" ref="true" />
          <type api="T:System.Data.InRowChangingEventException" ref="true" />
          <type api="T:System.Data.InvalidConstraintException" ref="true" />
          <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
          <type api="T:System.Data.NoNullAllowedException" ref="true" />
          <type api="T:System.Data.ReadOnlyException" ref="true" />
          <type api="T:System.Data.RowNotInTableException" ref="true" />
          <type api="T:System.Data.VersionNotFoundException" ref="true" />
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.UpdateException" ref="true" />
          <type api="T:System.Data.ObjectNotFoundException" ref="true" />
          <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
          <type api="T:System.Data.Design.TypedDataSetGeneratorException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="0248eb34-60fe-3b1c-0143-e26e4bab8247" />
    </api>
    <api id="AllMembers.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="members" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataException.#ctor">
          <element api="M:System.Data.DataException.#ctor" />
          <element api="M:System.Data.DataException.#ctor(System.String)" />
          <element api="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
      <file name="0b077c04-4c9d-452d-5962-c2ff05e60f84" />
    </api>
    <api id="Methods.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
      <file name="5a2596f3-7e50-b5df-c88c-bcac783cd494" />
    </api>
    <api id="Properties.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
      <file name="59559995-5bfb-2aa5-5c07-becb2eb4a749" />
    </api>
    <api id="Events.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Events" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
      <file name="bb8450a7-65e8-3432-ea5c-a7554bce89e3" />
    </api>
    <api id="Overload:System.Data.DataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataException.#ctor" />
        <element api="M:System.Data.DataException.#ctor(System.String)" />
        <element api="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
      <file name="624d5db5-26b3-1033-5570-602597ef1293" />
    </api>
    <api id="M:System.Data.DataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
      <file name="98fae20d-2485-1a93-9c04-4bb815a2769e" />
    </api>
    <api id="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
      <file name="ae7ab40b-2433-200f-ff63-4e731397ba73" />
    </api>
    <api id="M:System.Data.DataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
      <file name="34fe6680-7036-83ea-2881-73c0915d00e9" />
    </api>
    <api id="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
      <file name="85830dca-4acf-b55e-a986-88701de9052f" />
    </api>
    <api id="T:System.Data.DataRelation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RelationName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="adcdd95a-5faa-ed66-c9fa-5bf972bfe233" />
    </api>
    <api id="AllMembers.T:System.Data.DataRelation">
      <topicdata name="DataRelation" group="list" subgroup="members" typeTopicId="T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataRelation.#ctor">
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelation.CheckStateForProperty" />
        <element api="P:System.Data.DataRelation.ChildColumns" />
        <element api="P:System.Data.DataRelation.ChildKeyConstraint" />
        <element api="P:System.Data.DataRelation.ChildTable" />
        <element api="P:System.Data.DataRelation.DataSet" />
        <element api="P:System.Data.DataRelation.ExtendedProperties" />
        <element api="P:System.Data.DataRelation.Nested" />
        <element api="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="P:System.Data.DataRelation.ParentColumns" />
        <element api="P:System.Data.DataRelation.ParentKeyConstraint" />
        <element api="P:System.Data.DataRelation.ParentTable" />
        <element api="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
        <element api="P:System.Data.DataRelation.RelationName" />
        <element api="M:System.Data.DataRelation.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" />
      </containers>
      <file name="24d9db04-0d02-d50c-e9fd-072eddce5094" />
    </api>
    <api id="Methods.T:System.Data.DataRelation">
      <topicdata name="DataRelation" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.DataRelation.CheckStateForProperty" />
        <element api="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataRelation.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" />
      </containers>
      <file name="f2820ecc-83e8-0e50-bc80-e0bb1a7b450a" />
    </api>
    <api id="Properties.T:System.Data.DataRelation">
      <topicdata name="DataRelation" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRelation.ChildColumns" />
        <element api="P:System.Data.DataRelation.ChildKeyConstraint" />
        <element api="P:System.Data.DataRelation.ChildTable" />
        <element api="P:System.Data.DataRelation.DataSet" />
        <element api="P:System.Data.DataRelation.ExtendedProperties" />
        <element api="P:System.Data.DataRelation.Nested" />
        <element api="P:System.Data.DataRelation.ParentColumns" />
        <element api="P:System.Data.DataRelation.ParentKeyConstraint" />
        <element api="P:System.Data.DataRelation.ParentTable" />
        <element api="P:System.Data.DataRelation.RelationName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" />
      </containers>
      <file name="5bf93838-8818-ea9d-73ea-10539a3cc476" />
    </api>
    <api id="Overload:System.Data.DataRelation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelation" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="b2823e0f-4b4c-7924-ae16-2d4013e31b2a" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="9ead5d1a-58b7-64d6-3846-ef4709a8ac81" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="6c52e53d-40f1-f1d9-eeaf-5a8d49d7c96f" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="0c9c704c-688d-79ff-fcc6-b46f51183e4b" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="0cd718db-01db-6c31-3d38-8e61e53e3fa8" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="nested">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e39fdc0-a378-7c19-df73-13b0fb20bfd2" />
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="nested">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8d029e05-f69d-3479-3001-1bf5496ffa93" />
    </api>
    <api id="M:System.Data.DataRelation.CheckStateForProperty">
      <topicdata group="api" />
      <apidata name="CheckStateForProperty" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="ed11eef1-2e87-a3f9-7efb-304f627fe84c" />
    </api>
    <api id="P:System.Data.DataRelation.ChildColumns">
      <topicdata group="api" />
      <apidata name="ChildColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="faa448f9-6e03-8067-4817-bc15deb143ee" />
    </api>
    <api id="P:System.Data.DataRelation.ChildKeyConstraint">
      <topicdata group="api" />
      <apidata name="ChildKeyConstraint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildKeyConstraint" />
      <returns>
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="be17169c-5d23-19e4-f20d-dcac040f3b46" />
    </api>
    <api id="P:System.Data.DataRelation.ChildTable">
      <topicdata group="api" />
      <apidata name="ChildTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="e6b7004a-9469-a0c8-d1dc-e0ddd6107c8c" />
    </api>
    <api id="P:System.Data.DataRelation.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fa71eea0-ea4f-36fb-6516-742e90316a4c" />
    </api>
    <api id="P:System.Data.DataRelation.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f948ad4b-73a3-5f40-4332-1c0b60c2c163" />
    </api>
    <api id="P:System.Data.DataRelation.Nested">
      <topicdata group="api" />
      <apidata name="Nested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Nested" />
      <setter name="set_Nested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1737e93c-c003-abd9-8811-d129d1c47dab" />
    </api>
    <api id="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="28bb6d1a-6061-19ef-a98d-947acc8b18b5" />
    </api>
    <api id="P:System.Data.DataRelation.ParentColumns">
      <topicdata group="api" />
      <apidata name="ParentColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="82c1e16e-3c04-f5d4-bc88-b532accf4a76" />
    </api>
    <api id="P:System.Data.DataRelation.ParentKeyConstraint">
      <topicdata group="api" />
      <apidata name="ParentKeyConstraint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentKeyConstraint" />
      <returns>
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="11ffe9eb-d343-88e1-05f8-ea88b72277a0" />
    </api>
    <api id="P:System.Data.DataRelation.ParentTable">
      <topicdata group="api" />
      <apidata name="ParentTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="9b3b599a-258c-5497-33ca-a922f9887bb2" />
    </api>
    <api id="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="251c7f9f-cea3-f9b8-b45a-6233629e9c5a" />
    </api>
    <api id="P:System.Data.DataRelation.RelationName">
      <topicdata group="api" />
      <apidata name="RelationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RelationName" />
      <setter name="set_RelationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="39362d8a-eab7-19c2-3938-57d1704b5311" />
    </api>
    <api id="M:System.Data.DataRelation.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <file name="8a49c8e1-9f0a-1dc1-a765-1a261a94b033" />
    </api>
    <api id="T:System.Data.DataRelationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Table</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6d8ff0e2-b400-454a-1342-910e9612a3bd" />
    </api>
    <api id="AllMembers.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="members" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRelationCollection.#ctor" />
        <element api="Overload:System.Data.DataRelationCollection.Add">
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />
        <element api="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Clear" />
        <element api="E:System.Data.DataRelationCollection.CollectionChanged" />
        <element api="M:System.Data.DataRelationCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataRelationCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.GetDataSet" />
        <element api="Overload:System.Data.DataRelationCollection.IndexOf">
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.DataRelationCollection.Item">
          <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="Overload:System.Data.DataRelationCollection.Remove">
          <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
      <file name="8f50cb89-03d8-47f0-08d0-4d0ec56ddac1" />
    </api>
    <api id="Methods.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataRelationCollection.Add">
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />
        <element api="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Clear" />
        <element api="M:System.Data.DataRelationCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataRelationCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.GetDataSet" />
        <element api="Overload:System.Data.DataRelationCollection.IndexOf">
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="Overload:System.Data.DataRelationCollection.Remove">
          <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
      <file name="b2b67a4d-16b1-7394-5d85-aa812afbb446" />
    </api>
    <api id="Properties.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRelationCollection.Item">
          <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
      <file name="5c7588a1-4b61-4ec8-6304-a9aafa9f5d8b" />
    </api>
    <api id="Events.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataRelationCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
      <file name="93a4aa6f-c5bb-2232-92bd-b369aa61e0da" />
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="ab8d5702-af77-d7e8-c143-a7c19ff6ae69" />
    </api>
    <api id="Overload:System.Data.DataRelationCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="be05b5f7-5559-a543-fc7f-8e94d5428108" />
    </api>
    <api id="Overload:System.Data.DataRelationCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="6c0efa5d-97dc-ab85-e08c-53a2e731c50e" />
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="14ba76e8-eca2-bd10-a0e4-c3a88e911a36" />
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRelationCollection" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="cfaba156-c4a7-8f00-6888-cb8eba03a4f2" />
    </api>
    <api id="M:System.Data.DataRelationCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="592edf8d-fafd-c2ff-0ead-4416d640581b" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="11eb8749-d727-e75f-cfa0-29eb8473ca10" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="0e378e81-c3d1-8a6c-35d7-b124d76ab6ed" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="5cfc94fd-c547-1da2-d200-4339ee44a02f" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="32ba804e-0a33-4e14-8c08-d9a536b56cdf" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="f3a0b4dd-e585-24dd-48f7-d812a4f0b1b7" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="89c47ff6-156d-017a-1f33-e23a593ac39d" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="7e4781df-5359-dd90-7d1d-96e47f815ed5" />
    </api>
    <api id="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="AddCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="7bb5cef0-fd24-5edc-332b-a66104fb0d3f" />
    </api>
    <api id="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relations">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRelation" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="e53a3ca3-a774-2068-1faf-f3573cd81714" />
    </api>
    <api id="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="ba10e6ea-0e61-4c27-a02c-673d5d966211" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="2f4cc86b-2ff6-6ce1-dfd2-447bf75fab58" />
    </api>
    <api id="E:System.Data.DataRelationCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="7f057196-cafa-1b41-6f6b-452f9ea5ca95" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="0bb64784-e90a-707a-6850-6c41382d161d" />
    </api>
    <api id="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRelation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="dc985f3f-13be-44ef-67c7-2262dd6716a0" />
    </api>
    <api id="M:System.Data.DataRelationCollection.GetDataSet">
      <topicdata group="api" />
      <apidata name="GetDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="f43bfea1-109e-3945-8b7e-a9f81f63ca98" />
    </api>
    <api id="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.IndexOf" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="d2c8f9a4-de9c-a553-7c03-bda0c5a3f52d" />
    </api>
    <api id="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.IndexOf" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="d31d334e-9311-3215-aba4-de1d10f50b20" />
    </api>
    <api id="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="7fbee99e-f1b9-13dd-a922-1f10f8daa98d" />
    </api>
    <api id="P:System.Data.DataRelationCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="f1d1f90a-7f5e-376a-65b7-06d564e3b091" />
    </api>
    <api id="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ccevent">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="96768cb2-1818-fd34-9ef7-3f3156e543fa" />
    </api>
    <api id="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ccevent">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="78ff82f3-810a-8e16-5cc3-8d003259b1ed" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="fd98719f-696a-eb4f-9bb4-5583bcb73d1b" />
    </api>
    <api id="M:System.Data.DataRelationCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="a7958bbc-7420-2185-ec4a-43a51484ec38" />
    </api>
    <api id="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="c296ff97-a172-7757-8ca2-eec74e790b18" />
    </api>
    <api id="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="RemoveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
      <file name="61ab8e42-bc38-d560-5d7d-bb524c22d81c" />
    </api>
    <api id="T:System.Data.DataRow">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="1a75122b-5578-2d83-4e5f-4c0868dbacf1" />
    </api>
    <api id="AllMembers.T:System.Data.DataRow">
      <topicdata name="DataRow" group="list" subgroup="members" typeTopicId="T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataRow.AcceptChanges" />
        <element api="M:System.Data.DataRow.BeginEdit" />
        <element api="M:System.Data.DataRow.CancelEdit" />
        <element api="M:System.Data.DataRow.ClearErrors" />
        <element api="M:System.Data.DataRow.Delete" />
        <element api="M:System.Data.DataRow.EndEdit" />
        <element api="Overload:System.Data.DataRow.GetChildRows">
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetColumnError">
          <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
        </element>
        <element api="M:System.Data.DataRow.GetColumnsInError" />
        <element api="Overload:System.Data.DataRow.GetParentRow">
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetParentRows">
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="P:System.Data.DataRow.HasErrors" />
        <element api="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <element api="Overload:System.Data.DataRow.IsNull">
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
          <element api="M:System.Data.DataRow.IsNull(System.String)" />
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.Item">
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
          <element api="P:System.Data.DataRow.Item(System.Int32)" />
          <element api="P:System.Data.DataRow.Item(System.String)" />
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="P:System.Data.DataRow.ItemArray" />
        <element api="M:System.Data.DataRow.RejectChanges" />
        <element api="P:System.Data.DataRow.RowError" />
        <element api="P:System.Data.DataRow.RowState" />
        <element api="M:System.Data.DataRow.SetAdded" />
        <element api="Overload:System.Data.DataRow.SetColumnError">
          <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataRow.SetModified" />
        <element api="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
        <element api="Overload:System.Data.DataRow.SetParentRow">
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
        </element>
        <element api="P:System.Data.DataRow.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" />
      </containers>
      <file name="675006d9-2309-addf-b2e7-2016163e10bd" />
    </api>
    <api id="Methods.T:System.Data.DataRow">
      <topicdata name="DataRow" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRow.AcceptChanges" />
        <element api="M:System.Data.DataRow.BeginEdit" />
        <element api="M:System.Data.DataRow.CancelEdit" />
        <element api="M:System.Data.DataRow.ClearErrors" />
        <element api="M:System.Data.DataRow.Delete" />
        <element api="M:System.Data.DataRow.EndEdit" />
        <element api="Overload:System.Data.DataRow.GetChildRows">
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetColumnError">
          <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
        </element>
        <element api="M:System.Data.DataRow.GetColumnsInError" />
        <element api="Overload:System.Data.DataRow.GetParentRow">
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetParentRows">
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <element api="Overload:System.Data.DataRow.IsNull">
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
          <element api="M:System.Data.DataRow.IsNull(System.String)" />
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.RejectChanges" />
        <element api="M:System.Data.DataRow.SetAdded" />
        <element api="Overload:System.Data.DataRow.SetColumnError">
          <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataRow.SetModified" />
        <element api="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
        <element api="Overload:System.Data.DataRow.SetParentRow">
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" />
      </containers>
      <file name="32cfb161-aa5d-cd84-b882-ed2a56336878" />
    </api>
    <api id="Properties.T:System.Data.DataRow">
      <topicdata name="DataRow" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRow.HasErrors" />
        <element api="Overload:System.Data.DataRow.Item">
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
          <element api="P:System.Data.DataRow.Item(System.Int32)" />
          <element api="P:System.Data.DataRow.Item(System.String)" />
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="P:System.Data.DataRow.ItemArray" />
        <element api="P:System.Data.DataRow.RowError" />
        <element api="P:System.Data.DataRow.RowState" />
        <element api="P:System.Data.DataRow.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" />
      </containers>
      <file name="0df4e5f5-a299-1461-61f3-872085eca281" />
    </api>
    <api id="Overload:System.Data.DataRow.GetChildRows">
      <topicdata name="GetChildRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="c39cb6d2-e8e8-63a9-d99b-50f1efc673c8" />
    </api>
    <api id="Overload:System.Data.DataRow.GetColumnError">
      <topicdata name="GetColumnError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
        <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="e1a316d9-7020-3710-be5a-44dfe0a452ec" />
    </api>
    <api id="Overload:System.Data.DataRow.GetParentRow">
      <topicdata name="GetParentRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="1d147084-9d77-f131-2c7e-cacfa23aeb69" />
    </api>
    <api id="Overload:System.Data.DataRow.GetParentRows">
      <topicdata name="GetParentRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="09f69805-a1f5-ce41-8818-75849a41fe45" />
    </api>
    <api id="Overload:System.Data.DataRow.IsNull">
      <topicdata name="IsNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
        <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
        <element api="M:System.Data.DataRow.IsNull(System.String)" />
        <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="c10d7e2f-845c-761f-de5c-42dd1d80ba4a" />
    </api>
    <api id="Overload:System.Data.DataRow.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
        <element api="P:System.Data.DataRow.Item(System.Int32)" />
        <element api="P:System.Data.DataRow.Item(System.String)" />
        <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
        <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
        <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="336f200b-2d19-d0ae-3d1d-54c99edf6ab4" />
    </api>
    <api id="Overload:System.Data.DataRow.SetColumnError">
      <topicdata name="SetColumnError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
        <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="7ee88648-abe8-2507-b8c0-0ea18573fb64" />
    </api>
    <api id="Overload:System.Data.DataRow.SetParentRow">
      <topicdata name="SetParentRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRow" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
        <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="5739808c-e0bc-cbef-1e5f-c64b3d8af0bf" />
    </api>
    <api id="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Data.DataRowBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="735d8e5f-fcb4-c18d-8f4d-c3918971fdbc" />
    </api>
    <api id="M:System.Data.DataRow.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="c83756f0-70c2-4a21-cecf-fd2351e3f319" />
    </api>
    <api id="M:System.Data.DataRow.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3927ec7f-dac3-e442-85c4-a9d62aff2d80" />
    </api>
    <api id="M:System.Data.DataRow.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6c103310-507e-21ae-511f-02cb0bd1cebd" />
    </api>
    <api id="M:System.Data.DataRow.ClearErrors">
      <topicdata group="api" />
      <apidata name="ClearErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="cee5427e-681a-0ace-ef0f-dd916a42b5b2" />
    </api>
    <api id="M:System.Data.DataRow.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="b4885fe5-52c6-d9b9-0c1d-b35ec1ee7e7a" />
    </api>
    <api id="M:System.Data.DataRow.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ba9c2acb-7325-d02f-9e2f-5ed1dcaf7f6f" />
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="ccee7ec2-38db-72cf-f4af-18248b5c5239" />
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="5221d914-9508-1445-3acd-4634d477a4b3" />
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.String)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="4934e44a-d3fa-6c73-3754-7052c2659d8d" />
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="3d4e5a3e-9968-7fb8-83be-e9e06b11eba4" />
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="74e8d708-d403-f3ed-ee4c-07770e4a7286" />
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="7495920f-3ef9-8d99-07c5-2b4dd86d2781" />
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.String)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="065bc950-fe08-6a5a-c368-bb273d1509eb" />
    </api>
    <api id="M:System.Data.DataRow.GetColumnsInError">
      <topicdata group="api" />
      <apidata name="GetColumnsInError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="d37a6c3c-c80c-a978-f41d-5bf888499dd8" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="23aeb6d2-25e4-10b9-0b87-246073237e53" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="922017a6-e01c-0fb2-49a4-ed0e1d5855fd" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="5a0b04c9-1f2d-aedd-b423-085fc6469cab" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="84461da5-3db9-c55f-8037-1f0ec3ffeb08" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="5a288c88-35b2-d0ee-9d34-a504ff7b5fbe" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="7f57167c-32fc-1de0-8b6a-d1553b920490" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="6a363c63-130e-5975-da30-73798d254087" />
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="884b7bf7-7e00-1c40-7e76-4c22ab15e28e" />
    </api>
    <api id="P:System.Data.DataRow.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="9ed2a8bc-ae39-d56f-4c2b-d27f25bb7131" />
    </api>
    <api id="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="HasVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="a654136e-916e-ae35-a2ba-b1004f878412" />
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="d5734862-9129-ab44-3160-b91c7fd4bf60" />
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="fe528d46-fe87-a5ec-f78c-b20ae95096eb" />
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="2814e16e-dddc-6baf-6448-a196a67ba3ea" />
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.String)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="1bc4ebe4-3327-2ac1-f9dc-90b063e33e06" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="96f16ce4-5d95-d722-9974-08b66ed4f9dd" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="e594307d-4565-cf3f-dca0-d2a95f2f2764" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="26012b5a-5126-1d21-41b1-74a3390e0f19" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="4ae6f4f3-df3b-b70d-3ed6-097f27c23d69" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="db9e399b-535e-56cb-7233-81b2921ef7aa" />
    </api>
    <api id="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="6d33b564-abf2-eba1-e42f-38d1c9184f99" />
    </api>
    <api id="P:System.Data.DataRow.ItemArray">
      <topicdata group="api" />
      <apidata name="ItemArray" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ItemArray" />
      <setter name="set_ItemArray" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="6f339bc4-c859-08f8-9e60-5e7bfbf4a0cd" />
    </api>
    <api id="M:System.Data.DataRow.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="b7bfb7fb-2cff-a4c8-b88c-c02acefcf5de" />
    </api>
    <api id="P:System.Data.DataRow.RowError">
      <topicdata group="api" />
      <apidata name="RowError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowError" />
      <setter name="set_RowError" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="52d2e685-3fb1-9779-5cf7-bd2bcde3a630" />
    </api>
    <api id="P:System.Data.DataRow.RowState">
      <topicdata group="api" />
      <apidata name="RowState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowState" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="aa58095e-13ff-43bc-9594-fd679adfbecb" />
    </api>
    <api id="M:System.Data.DataRow.SetAdded">
      <topicdata group="api" />
      <apidata name="SetAdded" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="5ea4a82c-ef0f-0fc7-6b88-abc24325ba0e" />
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="044a0f35-e720-b47d-a353-5e6369bab52c" />
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="f0e75e95-6c23-007e-2c85-77282be81dc3" />
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="86bbd237-a36a-7043-bb0d-ddb2346ed4ef" />
    </api>
    <api id="M:System.Data.DataRow.SetModified">
      <topicdata group="api" />
      <apidata name="SetModified" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="ff47b0a3-4ec6-febe-ce8c-288f5b047e77" />
    </api>
    <api id="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="SetNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="e81b1959-aca6-9e52-8646-5a64d680715c" />
    </api>
    <api id="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="808f64a5-af07-e89c-be5a-9cd378c9acf9" />
    </api>
    <api id="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="b3b5e571-745f-e067-d582-287ca3f35ed4" />
    </api>
    <api id="P:System.Data.DataRow.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <file name="95e7cd34-8b02-fdcf-2155-c00404b97aaa" />
    </api>
    <api id="T:System.Data.DataRowAction">
      <topicdata group="api" />
      <apidata name="DataRowAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowAction.Nothing" />
        <element api="F:System.Data.DataRowAction.Delete" />
        <element api="F:System.Data.DataRowAction.Change" />
        <element api="F:System.Data.DataRowAction.Rollback" />
        <element api="F:System.Data.DataRowAction.Commit" />
        <element api="F:System.Data.DataRowAction.Add" />
        <element api="F:System.Data.DataRowAction.ChangeOriginal" />
        <element api="F:System.Data.DataRowAction.ChangeCurrentAndOriginal" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a649f56-0949-0f0e-2ad6-d9d4ea31f29a" />
    </api>
    <api id="F:System.Data.DataRowAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="3e41fd41-1507-fa27-41ac-909244991750" />
    </api>
    <api id="F:System.Data.DataRowAction.Change">
      <topicdata group="api" notopic="" />
      <apidata name="Change" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="b77ad5f4-290c-74db-b5ad-ccd2f63a929b" />
    </api>
    <api id="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ChangeCurrentAndOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="ab531731-099c-649a-5e2b-950f6f8463b4" />
    </api>
    <api id="F:System.Data.DataRowAction.ChangeOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ChangeOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="2012e3c9-2fe8-e370-5e36-f78d9ab4adb6" />
    </api>
    <api id="F:System.Data.DataRowAction.Commit">
      <topicdata group="api" notopic="" />
      <apidata name="Commit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="6f98c684-5c54-21b6-9060-9ceee1e9ff50" />
    </api>
    <api id="F:System.Data.DataRowAction.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="f24c4897-e945-8b8f-9bec-a54ef1078bb9" />
    </api>
    <api id="F:System.Data.DataRowAction.Nothing">
      <topicdata group="api" notopic="" />
      <apidata name="Nothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="0286eea8-b875-ce3d-ba48-e7c0d5c0c90e" />
    </api>
    <api id="F:System.Data.DataRowAction.Rollback">
      <topicdata group="api" notopic="" />
      <apidata name="Rollback" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
      <file name="6365ffab-019e-18f6-ba38-c47ac1b31eb6" />
    </api>
    <api id="T:System.Data.DataRowBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowBuilder" />
      <apidata name="DataRowBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b02f9fa6-534d-e010-2888-7e2d6f7b4023" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowBuilder">
      <topicdata name="DataRowBuilder" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowBuilder" />
      <apidata name="DataRowBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowBuilder" />
      </containers>
      <file name="fb005886-c80d-1465-b50b-3ab9a8ec5fc5" />
    </api>
    <api id="Methods.T:System.Data.DataRowBuilder">
      <topicdata name="DataRowBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowBuilder" />
      <apidata name="DataRowBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowBuilder" />
      </containers>
      <file name="bdf05719-fa31-e8d8-a4c7-17277f0650a1" />
    </api>
    <api id="T:System.Data.DataRowChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b245451c-7742-cd33-456a-24443fb307f8" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowChangeEventArgs">
      <topicdata name="DataRowChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)" />
        <element api="P:System.Data.DataRowChangeEventArgs.Action" />
        <element api="P:System.Data.DataRowChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" />
      </containers>
      <file name="27761625-30ed-7958-6b89-6dba51f6030e" />
    </api>
    <api id="Methods.T:System.Data.DataRowChangeEventArgs">
      <topicdata name="DataRowChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" />
      </containers>
      <file name="dc5b500d-e42e-b731-b572-49ebb8282510" />
    </api>
    <api id="Properties.T:System.Data.DataRowChangeEventArgs">
      <topicdata name="DataRowChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowChangeEventArgs.Action" />
        <element api="P:System.Data.DataRowChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" />
      </containers>
      <file name="7bf57ecd-3d91-0057-4e06-c32e930cab47" />
    </api>
    <api id="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Data.DataRowAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
      <file name="d77ebe8a-416c-5a36-54a3-8894231825fe" />
    </api>
    <api id="P:System.Data.DataRowChangeEventArgs.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
      <file name="f494432d-8be5-a737-6244-463c52b0c184" />
    </api>
    <api id="P:System.Data.DataRowChangeEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
      <file name="ec10c183-cf21-33ff-a36b-4ef20c20349b" />
    </api>
    <api id="T:System.Data.DataRowChangeEventHandler">
      <topicdata group="api" />
      <apidata name="DataRowChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="fd807a4c-17c8-ed83-9122-7117c3c53fb7" />
    </api>
    <api id="T:System.Data.DataRowCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="3424b7fa-ba88-1a2b-40b5-3d8302bfc18b" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowCollection">
      <topicdata name="DataRowCollection" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataRowCollection.Add">
          <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
          <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.Clear" />
        <element api="Overload:System.Data.DataRowCollection.Contains">
          <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.CopyTo">
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="P:System.Data.DataRowCollection.Count" />
        <element api="Overload:System.Data.DataRowCollection.Find">
          <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.GetEnumerator" />
        <element api="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
        <element api="P:System.Data.DataRowCollection.Item(System.Int32)" />
        <element api="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" />
      </containers>
      <file name="f8caf50c-e90a-20ed-6506-2e3f39219cc1" />
    </api>
    <api id="Methods.T:System.Data.DataRowCollection">
      <topicdata name="DataRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataRowCollection.Add">
          <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
          <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.Clear" />
        <element api="Overload:System.Data.DataRowCollection.Contains">
          <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.CopyTo">
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.Find">
          <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.GetEnumerator" />
        <element api="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
        <element api="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" />
      </containers>
      <file name="357eec22-bdf7-11b4-223d-79e46fd1f3a9" />
    </api>
    <api id="Properties.T:System.Data.DataRowCollection">
      <topicdata name="DataRowCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowCollection.Count" />
        <element api="P:System.Data.DataRowCollection.Item(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" />
      </containers>
      <file name="ded47896-24f5-af46-f831-d6fe26fff724" />
    </api>
    <api id="Overload:System.Data.DataRowCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="3c976660-a5b8-a98d-2155-277cf7fc755d" />
    </api>
    <api id="Overload:System.Data.DataRowCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowCollection" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
        <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="d55d09c5-a890-6ab3-a3e5-83020c36b860" />
    </api>
    <api id="Overload:System.Data.DataRowCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="6919af86-0f01-13b0-b04c-72cd293b36b1" />
    </api>
    <api id="Overload:System.Data.DataRowCollection.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowCollection" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
        <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="a90c5a76-a264-6ada-7f19-2cdc0f9628dc" />
    </api>
    <api id="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="d09347fc-f96c-dd14-96ce-ce43b57be6ae" />
    </api>
    <api id="M:System.Data.DataRowCollection.Add(System.Object[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="deeea917-1e59-f8fa-3e2b-080e381529dd" />
    </api>
    <api id="M:System.Data.DataRowCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="fa0544fa-a161-8458-28ea-6be63f1a467a" />
    </api>
    <api id="M:System.Data.DataRowCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="5df0ba4d-0830-18cb-f667-d75d3e6ee7ec" />
    </api>
    <api id="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keys">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="c77cb887-19e9-f184-8131-ffb1f19cd24c" />
    </api>
    <api id="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.CopyTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="e809f14e-85a8-dc6b-77e9-fe94816ac213" />
    </api>
    <api id="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="28e15207-6b06-382e-3c3b-0efe6c0e36c5" />
    </api>
    <api id="P:System.Data.DataRowCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.InternalDataCollectionBase.Count">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="062a55ad-9639-5324-ae42-1f5629649458" />
    </api>
    <api id="M:System.Data.DataRowCollection.Find(System.Object)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="eaac2236-6d57-5058-513c-585359cb6685" />
    </api>
    <api id="M:System.Data.DataRowCollection.Find(System.Object[])">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keys">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="75fe271f-061f-aa7f-826e-b326083b2509" />
    </api>
    <api id="M:System.Data.DataRowCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.InternalDataCollectionBase.GetEnumerator">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="1eecba4f-1b5e-e371-f9e5-077d805713e5" />
    </api>
    <api id="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="9bae9b07-a961-d4f3-39e6-218a71f40a7b" />
    </api>
    <api id="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="5e945273-dde3-df3e-3824-6c5c7740e709" />
    </api>
    <api id="P:System.Data.DataRowCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="eb55f864-d0bd-88da-ee08-21a15e72bea7" />
    </api>
    <api id="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="5230ca3c-cee5-074c-5b0a-05f2a81a43be" />
    </api>
    <api id="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
      <file name="1a04f8a1-c119-77ca-444a-d4bcea74a408" />
    </api>
    <api id="T:System.Data.DataRowComparer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowComparer" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="2a5b6a9b-0f61-ef35-35eb-407992a9ca99" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowComparer">
      <topicdata name="DataRowComparer" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowComparer" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowComparer.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer" />
      </containers>
      <file name="7298e20c-69de-43df-7e68-c8c4e1c5be11" />
    </api>
    <api id="Properties.T:System.Data.DataRowComparer">
      <topicdata name="DataRowComparer" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowComparer" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowComparer.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer" />
      </containers>
      <file name="0fb5d695-cce7-1d1a-18cd-da371cb80f11" />
    </api>
    <api id="P:System.Data.DataRowComparer.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Data.DataRowComparer`1" ref="true">
          <specialization>
            <type api="T:System.Data.DataRow" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer" ref="true" />
      </containers>
      <file name="e5652746-a15c-975d-19c1-5dd42b60304c" />
    </api>
    <api id="T:System.Data.DataRowComparer`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="9071d430-8c6c-5217-160e-b08827e9b6a2" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowComparer`1">
      <topicdata name="DataRowComparer" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:System.Data.DataRowComparer`1.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
        </element>
        <element api="Overload:System.Data.DataRowComparer`1.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRowComparer`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" />
      </containers>
      <file name="89b2293c-b132-5c65-6400-2940d19c5b60" />
    </api>
    <api id="Methods.T:System.Data.DataRowComparer`1">
      <topicdata name="DataRowComparer" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:System.Data.DataRowComparer`1.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
        </element>
        <element api="Overload:System.Data.DataRowComparer`1.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" />
      </containers>
      <file name="e5e9c79c-2803-ac8d-180a-a0dd2eed257f" />
    </api>
    <api id="Properties.T:System.Data.DataRowComparer`1">
      <topicdata name="DataRowComparer" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Data.DataRowComparer`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" />
      </containers>
      <file name="b82fba5a-53f9-8693-df6b-fecbc12dca18" />
    </api>
    <api id="Overload:System.Data.DataRowComparer`1.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowComparer`1" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
      <file name="0baf2faf-6561-efc4-a578-d4f6077dedbb" />
    </api>
    <api id="Overload:System.Data.DataRowComparer`1.GetHashCode">
      <topicdata name="GetHashCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowComparer`1" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
      <file name="de05a1d4-1c63-097e-0f17-b73d4bf4b4ee" />
    </api>
    <api id="P:System.Data.DataRowComparer`1.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Data.DataRowComparer`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
      <file name="09b0065d-a46c-7607-7c16-06f5348989a2" />
    </api>
    <api id="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowComparer`1.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftRow">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
        <parameter name="rightRow">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
      <file name="bec16e7e-de06-461a-133f-bfa13f729e5d" />
    </api>
    <api id="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowComparer`1.GetHashCode" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
      <file name="ec0bfe3e-6b5d-865f-c88e-9dfa6fb49421" />
    </api>
    <api id="T:System.Data.DataRowExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowExtensions" />
      <apidata name="DataRowExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fe0ebc05-7953-9598-0c16-e27c01461eb4" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowExtensions">
      <topicdata name="DataRowExtensions" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowExtensions" />
      <apidata name="DataRowExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRowExtensions.Field">
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRowExtensions.SetField">
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" />
      </containers>
      <file name="be7d0265-b3fb-8505-1144-65d3a69bf2d6" />
    </api>
    <api id="Methods.T:System.Data.DataRowExtensions">
      <topicdata name="DataRowExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowExtensions" />
      <apidata name="DataRowExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRowExtensions.Field">
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRowExtensions.SetField">
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" />
      </containers>
      <file name="e8072dda-542a-64c8-1807-9b00cfce3152" />
    </api>
    <api id="Overload:System.Data.DataRowExtensions.Field">
      <topicdata name="Field" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowExtensions" />
      <apidata name="Field" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <file name="08cb986a-1652-1011-7b91-a54414414ae5" />
    </api>
    <api id="Overload:System.Data.DataRowExtensions.SetField">
      <topicdata name="SetField" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowExtensions" />
      <apidata name="SetField" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <file name="212e516f-e50d-6b3c-0371-fc57f8b42dd4" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c2ba33ee-cfab-6eb0-a6b8-d55b65959de3" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e51a50d7-5d1c-b8f2-38b8-c7f88a6be34f" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="abe7b993-7fc1-aef3-134b-34e4a825a213" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1e299142-c586-0ca3-0279-723645f0caf1" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f8713e98-a149-c2f6-2ea1-2c212734ccaf" />
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="08854a4e-50a5-8f39-e2ad-ab9c9d91f56b" />
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="178b7f39-a511-6ec4-642e-3dc650c9a4a9" />
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="efe120a8-3dcc-3be6-7b7b-26bcbc745967" />
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="51f6be60-732c-7bdd-720f-ec40e1d820f7" />
    </api>
    <api id="T:System.Data.DataRowState">
      <topicdata group="api" />
      <apidata name="DataRowState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowState.Detached" />
        <element api="F:System.Data.DataRowState.Unchanged" />
        <element api="F:System.Data.DataRowState.Added" />
        <element api="F:System.Data.DataRowState.Deleted" />
        <element api="F:System.Data.DataRowState.Modified" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c651619f-b7a2-312b-3b07-e6f602f9779f" />
    </api>
    <api id="F:System.Data.DataRowState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
      <file name="44ee7ff1-8321-e7fa-16f2-5bd38cca6e11" />
    </api>
    <api id="F:System.Data.DataRowState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
      <file name="8e22b819-f90f-7b83-e71f-cea528fc5266" />
    </api>
    <api id="F:System.Data.DataRowState.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
      <file name="167f5fd5-b44d-88af-8e01-7e72dea44ade" />
    </api>
    <api id="F:System.Data.DataRowState.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
      <file name="7d9d3259-b406-365d-48ec-0bb9491b4a3a" />
    </api>
    <api id="F:System.Data.DataRowState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
      <file name="76aa0ecb-116d-be22-3019-f617f306bbad" />
    </api>
    <api id="T:System.Data.DataRowVersion">
      <topicdata group="api" />
      <apidata name="DataRowVersion" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowVersion.Original" />
        <element api="F:System.Data.DataRowVersion.Current" />
        <element api="F:System.Data.DataRowVersion.Proposed" />
        <element api="F:System.Data.DataRowVersion.Default" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="fe861c59-7750-9792-474f-4d1099286a5e" />
    </api>
    <api id="F:System.Data.DataRowVersion.Current">
      <topicdata group="api" notopic="" />
      <apidata name="Current" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
      <file name="47b9f1ce-f2d5-107b-1cec-1d75c34d7c8f" />
    </api>
    <api id="F:System.Data.DataRowVersion.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>1536</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
      <file name="c2f1e099-8d56-1d02-1bab-185c6ef29f24" />
    </api>
    <api id="F:System.Data.DataRowVersion.Original">
      <topicdata group="api" notopic="" />
      <apidata name="Original" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
      <file name="5f1bb829-bee1-cca7-0ef9-6ad4d51a116d" />
    </api>
    <api id="F:System.Data.DataRowVersion.Proposed">
      <topicdata group="api" notopic="" />
      <apidata name="Proposed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
      <file name="3e0fb631-6696-1925-aec5-3baa9322be37" />
    </api>
    <api id="T:System.Data.DataRowView">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="eadc446d-7d28-23e0-b0ce-11544fd4faf3" />
    </api>
    <api id="AllMembers.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="members" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRowView.BeginEdit" />
        <element api="M:System.Data.DataRowView.CancelEdit" />
        <element api="Overload:System.Data.DataRowView.CreateChildView">
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
        </element>
        <element api="P:System.Data.DataRowView.DataView" />
        <element api="M:System.Data.DataRowView.Delete" />
        <element api="M:System.Data.DataRowView.EndEdit" />
        <element api="M:System.Data.DataRowView.Equals(System.Object)" />
        <element api="M:System.Data.DataRowView.GetHashCode" />
        <element api="P:System.Data.DataRowView.IsEdit" />
        <element api="P:System.Data.DataRowView.IsNew" />
        <element api="Overload:System.Data.DataRowView.Item">
          <element api="P:System.Data.DataRowView.Item(System.Int32)" />
          <element api="P:System.Data.DataRowView.Item(System.String)" />
        </element>
        <element api="E:System.Data.DataRowView.PropertyChanged" />
        <element api="P:System.Data.DataRowView.Row" />
        <element api="P:System.Data.DataRowView.RowVersion" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
      <file name="43483773-1471-405a-0e7b-e66ec85591ba" />
    </api>
    <api id="Methods.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataRowView.BeginEdit" />
        <element api="M:System.Data.DataRowView.CancelEdit" />
        <element api="Overload:System.Data.DataRowView.CreateChildView">
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRowView.Delete" />
        <element api="M:System.Data.DataRowView.EndEdit" />
        <element api="M:System.Data.DataRowView.Equals(System.Object)" />
        <element api="M:System.Data.DataRowView.GetHashCode" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
      <file name="a3297aae-3489-a460-605b-cb610e95ba48" />
    </api>
    <api id="Properties.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowView.DataView" />
        <element api="P:System.Data.DataRowView.IsEdit" />
        <element api="P:System.Data.DataRowView.IsNew" />
        <element api="Overload:System.Data.DataRowView.Item">
          <element api="P:System.Data.DataRowView.Item(System.Int32)" />
          <element api="P:System.Data.DataRowView.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataRowView.Row" />
        <element api="P:System.Data.DataRowView.RowVersion" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
      <file name="561da3ae-2b3a-e609-595a-153e2767649e" />
    </api>
    <api id="Events.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Events" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Data.DataRowView.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
      <file name="7dc2f1bd-9b8b-7c07-6b6c-ab6b3afd189f" />
    </api>
    <api id="Overload:System.Data.DataRowView.CreateChildView">
      <topicdata name="CreateChildView" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowView" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="0dcc983d-e826-8081-9b85-e5d541569f56" />
    </api>
    <api id="Overload:System.Data.DataRowView.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowView" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRowView.Item(System.Int32)" />
        <element api="P:System.Data.DataRowView.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="a5edaf3b-82c1-69b2-4f3b-64721455502d" />
    </api>
    <api id="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowView" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="f6e26235-2f08-ee54-ac88-8d7d599ec1d7" />
    </api>
    <api id="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataRowView" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="0f0199ba-fb43-65c3-c85d-df6571718163" />
    </api>
    <api id="M:System.Data.DataRowView.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.BeginEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="d263638d-3242-1417-fe6a-7eab7262b9c0" />
    </api>
    <api id="M:System.Data.DataRowView.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.CancelEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="079a1965-175d-848f-7eb0-f3f3a84dc561" />
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="1bfb25c1-16f1-1ede-7ef5-66dca635e3a4" />
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="followParent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="12db5b4c-a297-1f1c-a463-596348256490" />
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.String)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="d56a3a0c-05db-ff72-6a8c-063a4ac40938" />
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="followParent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="10cbfe01-943f-311a-4698-75475698b9e7" />
    </api>
    <api id="P:System.Data.DataRowView.DataView">
      <topicdata group="api" />
      <apidata name="DataView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataView" />
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="bf345ed8-6ce2-d038-39b8-85cbec9c64de" />
    </api>
    <api id="M:System.Data.DataRowView.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="ab67f3b8-e5b3-bc37-d298-75276d00a3ec" />
    </api>
    <api id="M:System.Data.DataRowView.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.EndEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="bf6b36cb-4c38-31f2-5c44-a24d15f27b25" />
    </api>
    <api id="M:System.Data.DataRowView.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="b45e2389-2e42-e7d9-790b-a96fcf14d43e" />
    </api>
    <api id="M:System.Data.DataRowView.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="7c53fdba-d523-dc24-5fde-e75707fff5ad" />
    </api>
    <api id="P:System.Data.DataRowView.IsEdit">
      <topicdata group="api" />
      <apidata name="IsEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="55bdf51f-81fe-07f3-a91c-8e209f29d148" />
    </api>
    <api id="P:System.Data.DataRowView.IsNew">
      <topicdata group="api" />
      <apidata name="IsNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="dcf5d9b8-33c0-218b-056e-201bf90de846" />
    </api>
    <api id="P:System.Data.DataRowView.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="ndx">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="0d1167e2-e815-476d-2e40-e544bfc1b585" />
    </api>
    <api id="P:System.Data.DataRowView.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="02e8bd2d-8a33-1ee8-ce69-6644a5ee28b0" />
    </api>
    <api id="E:System.Data.DataRowView.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="dad730fc-645f-eb68-00f2-b11a01691b2a" />
    </api>
    <api id="P:System.Data.DataRowView.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="4198facf-ae12-d2b3-961b-67c839856093" />
    </api>
    <api id="P:System.Data.DataRowView.RowVersion">
      <topicdata group="api" />
      <apidata name="RowVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowVersion" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="cd8fe7f0-00d0-fc85-34cc-dcaf73b7b9ec" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetAttributes" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="bb1067dc-c7eb-e64c-e5e5-31ec6861dcfc" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetClassName" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="6df5bd89-ef26-da81-bca7-7239476ee443" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetComponentName" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="8b1c55d9-918e-81d1-2e3a-24284658fff2" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetConverter" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="dcabfe62-1ea1-165d-a143-820335a88ac1" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultEvent" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="cbd2e038-b4aa-2e19-f542-e262418a92a4" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultProperty" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="696d1e70-b19d-7dae-bcba-fd55f11771f2" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEditor" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="ed43cb39-b17e-7799-2c06-00469a705d36" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="2a4f9f9d-594b-b4d2-cedd-3d9cc91ba3c1" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="edf2c860-eb61-f6c3-3865-ffa64b8c4af5" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="9a251b5d-7b12-184f-7754-58f00ca516b4" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="39da16cd-19c6-bd34-3795-96cc0049459f" />
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetPropertyOwner" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="574c71e5-0354-5d72-223f-782938f11ef9" />
    </api>
    <api id="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <topicdata group="api" eiiName="IDataErrorInfo.Error" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IDataErrorInfo.Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IDataErrorInfo.Error">
          <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="f7e98ab1-031b-5aaa-bbd4-6aa11eb8b4e4" />
    </api>
    <api id="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <topicdata group="api" eiiName="IDataErrorInfo.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IDataErrorInfo.Item" />
      <parameters>
        <parameter name="colName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
          <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
      <file name="44400dd0-2960-ac57-0e92-62c32f90c4f1" />
    </api>
    <api id="T:System.Data.DataSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IListSource" ref="true" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSetName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSet</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetDataSetSchema</value>
          </argument>
        </attribute>
      </attributes>
      <file name="de5c6694-02a3-75b6-7643-4a4560f94e73" />
    </api>
    <api id="AllMembers.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="members" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.DataSet.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="Overload:System.Data.DataSet.#ctor">
          <element api="M:System.Data.DataSet.#ctor" />
          <element api="M:System.Data.DataSet.#ctor(System.String)" />
          <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)" />
        </element>
        <element api="M:System.Data.DataSet.AcceptChanges" />
        <element api="M:System.Data.DataSet.BeginInit" />
        <element api="P:System.Data.DataSet.CaseSensitive" />
        <element api="M:System.Data.DataSet.Clear" />
        <element api="M:System.Data.DataSet.Clone" />
        <element api="M:System.Data.DataSet.Copy" />
        <element api="Overload:System.Data.DataSet.CreateDataReader">
          <element api="M:System.Data.DataSet.CreateDataReader" />
          <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
        </element>
        <element api="P:System.Data.DataSet.DataSetName" />
        <element api="P:System.Data.DataSet.DefaultViewManager" />
        <element api="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.DataSet.EndInit" />
        <element api="P:System.Data.DataSet.EnforceConstraints" />
        <element api="P:System.Data.DataSet.ExtendedProperties" />
        <element api="Overload:System.Data.DataSet.GetChanges">
          <element api="M:System.Data.DataSet.GetChanges" />
          <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetSchemaSerializable" />
        <element api="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetXml" />
        <element api="M:System.Data.DataSet.GetXmlSchema" />
        <element api="Overload:System.Data.DataSet.HasChanges">
          <element api="M:System.Data.DataSet.HasChanges" />
          <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
        </element>
        <element api="P:System.Data.DataSet.HasErrors" />
        <element api="Overload:System.Data.DataSet.InferXmlSchema">
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
        </element>
        <element api="E:System.Data.DataSet.Initialized" />
        <element api="M:System.Data.DataSet.InitializeDerivedDataSet" />
        <element api="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Data.DataSet.IsInitialized" />
        <element api="Overload:System.Data.DataSet.Load">
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
        </element>
        <element api="P:System.Data.DataSet.Locale" />
        <element api="Overload:System.Data.DataSet.Merge">
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="E:System.Data.DataSet.MergeFailed" />
        <element api="P:System.Data.DataSet.Namespace" />
        <element api="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)" />
        <element api="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)" />
        <element api="P:System.Data.DataSet.Prefix" />
        <element api="M:System.Data.DataSet.RaisePropertyChanging(System.String)" />
        <element api="Overload:System.Data.DataSet.ReadXml">
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.ReadXmlSchema">
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.RejectChanges" />
        <element api="P:System.Data.DataSet.Relations" />
        <element api="P:System.Data.DataSet.RemotingFormat" />
        <element api="M:System.Data.DataSet.Reset" />
        <element api="P:System.Data.DataSet.SchemaSerializationMode" />
        <element api="M:System.Data.DataSet.ShouldSerializeRelations" />
        <element api="M:System.Data.DataSet.ShouldSerializeTables" />
        <element api="P:System.Data.DataSet.Site" />
        <element api="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="P:System.Data.DataSet.Tables" />
        <element api="Overload:System.Data.DataSet.WriteXml">
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.WriteXmlSchema">
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
      <file name="bea511ee-8621-40da-5e22-ba5e63565a03" />
    </api>
    <api id="Methods.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataSet.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Data.DataSet.AcceptChanges" />
        <element api="M:System.Data.DataSet.BeginInit" />
        <element api="M:System.Data.DataSet.Clear" />
        <element api="M:System.Data.DataSet.Clone" />
        <element api="M:System.Data.DataSet.Copy" />
        <element api="Overload:System.Data.DataSet.CreateDataReader">
          <element api="M:System.Data.DataSet.CreateDataReader" />
          <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.DataSet.EndInit" />
        <element api="Overload:System.Data.DataSet.GetChanges">
          <element api="M:System.Data.DataSet.GetChanges" />
          <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetSchemaSerializable" />
        <element api="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetXml" />
        <element api="M:System.Data.DataSet.GetXmlSchema" />
        <element api="Overload:System.Data.DataSet.HasChanges">
          <element api="M:System.Data.DataSet.HasChanges" />
          <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
        </element>
        <element api="Overload:System.Data.DataSet.InferXmlSchema">
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
        </element>
        <element api="M:System.Data.DataSet.InitializeDerivedDataSet" />
        <element api="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Data.DataSet.Load">
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.Merge">
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)" />
        <element api="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)" />
        <element api="M:System.Data.DataSet.RaisePropertyChanging(System.String)" />
        <element api="Overload:System.Data.DataSet.ReadXml">
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.ReadXmlSchema">
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.RejectChanges" />
        <element api="M:System.Data.DataSet.Reset" />
        <element api="M:System.Data.DataSet.ShouldSerializeRelations" />
        <element api="M:System.Data.DataSet.ShouldSerializeTables" />
        <element api="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="Overload:System.Data.DataSet.WriteXml">
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.WriteXmlSchema">
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
      <file name="92575bbe-6a10-5f38-b757-070c3856fee5" />
    </api>
    <api id="Properties.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataSet.CaseSensitive" />
        <element api="P:System.Data.DataSet.DataSetName" />
        <element api="P:System.Data.DataSet.DefaultViewManager" />
        <element api="P:System.Data.DataSet.EnforceConstraints" />
        <element api="P:System.Data.DataSet.ExtendedProperties" />
        <element api="P:System.Data.DataSet.HasErrors" />
        <element api="P:System.Data.DataSet.IsInitialized" />
        <element api="P:System.Data.DataSet.Locale" />
        <element api="P:System.Data.DataSet.Namespace" />
        <element api="P:System.Data.DataSet.Prefix" />
        <element api="P:System.Data.DataSet.Relations" />
        <element api="P:System.Data.DataSet.RemotingFormat" />
        <element api="P:System.Data.DataSet.SchemaSerializationMode" />
        <element api="P:System.Data.DataSet.Site" />
        <element api="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataSet.Tables" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
      <file name="3617b9da-13b5-7735-9d7d-fc2ec06bf6b0" />
    </api>
    <api id="Events.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Events" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataSet.Initialized" />
        <element api="E:System.Data.DataSet.MergeFailed" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
      <file name="73e7fad4-0101-21d9-978e-65efa987f6aa" />
    </api>
    <api id="Overload:System.Data.DataSet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataSet.#ctor" />
        <element api="M:System.Data.DataSet.#ctor(System.String)" />
        <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="b457e3ba-d116-df5d-8714-8c0c975d4833" />
    </api>
    <api id="Overload:System.Data.DataSet.CreateDataReader">
      <topicdata name="CreateDataReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.CreateDataReader" />
        <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="1634b975-7ba2-c527-0d43-b9acd258cbf8" />
    </api>
    <api id="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
      <topicdata name="DetermineSchemaSerializationMode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="71d93cc3-f3bf-1c52-d376-376e8deb95e0" />
    </api>
    <api id="Overload:System.Data.DataSet.GetChanges">
      <topicdata name="GetChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.GetChanges" />
        <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="b3d9c467-5614-a4fc-0562-562defa5b546" />
    </api>
    <api id="Overload:System.Data.DataSet.HasChanges">
      <topicdata name="HasChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.HasChanges" />
        <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="60dbfbd0-a7ca-ae92-4707-e0fadbdc136d" />
    </api>
    <api id="Overload:System.Data.DataSet.InferXmlSchema">
      <topicdata name="InferXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="5884e1bf-f0e8-427a-73f0-36564247df14" />
    </api>
    <api id="Overload:System.Data.DataSet.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="0be3a707-39d2-ff0a-fc9d-a92f465fad02" />
    </api>
    <api id="Overload:System.Data.DataSet.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="c03cddc7-7e58-6498-a5f6-4fbdc82ec10f" />
    </api>
    <api id="Overload:System.Data.DataSet.ReadXml">
      <topicdata name="ReadXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.ReadXml(System.String)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
        <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="1a21d88d-4e96-a211-9a9c-6b97603fe0aa" />
    </api>
    <api id="Overload:System.Data.DataSet.ReadXmlSchema">
      <topicdata name="ReadXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="bdf9c1c2-d423-d68f-7a29-9dda6375d26e" />
    </api>
    <api id="Overload:System.Data.DataSet.WriteXml">
      <topicdata name="WriteXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.WriteXml(System.String)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
        <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="a2d528e2-f686-4a22-c3ea-0cb9a6317a0a" />
    </api>
    <api id="Overload:System.Data.DataSet.WriteXmlSchema">
      <topicdata name="WriteXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSet" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="638d6bf9-aaad-981c-ca3f-68a6f1dee6b2" />
    </api>
    <api id="M:System.Data.DataSet.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="3be08ef1-482b-bd16-f064-291b3c8fd522" />
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="9f25ef1d-af2b-8df9-6d4a-dc25f04afc91" />
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
        <parameter name="ConstructSchema">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="74c26f15-236b-12a0-9b43-8a2f312e5675" />
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="dataSetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="c96aaef9-3d08-cffe-485a-7a243cd61b9f" />
    </api>
    <api id="M:System.Data.DataSet.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="26785ca9-b420-ff02-e83d-140fdc4761a7" />
    </api>
    <api id="M:System.Data.DataSet.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="ded226da-e9a6-d153-a37c-fba8f200bd84" />
    </api>
    <api id="P:System.Data.DataSet.CaseSensitive">
      <topicdata group="api" />
      <apidata name="CaseSensitive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaseSensitive" />
      <setter name="set_CaseSensitive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="32a5910f-c5f9-aedf-e0e0-05f4554ee197" />
    </api>
    <api id="M:System.Data.DataSet.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="758c8f98-149d-46bb-9f02-041b37db9962" />
    </api>
    <api id="M:System.Data.DataSet.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="ec7f72a3-a116-45b4-b494-b297fc0e8732" />
    </api>
    <api id="M:System.Data.DataSet.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="fdae0342-3f56-faf5-1720-7f035762cdc2" />
    </api>
    <api id="M:System.Data.DataSet.CreateDataReader">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.CreateDataReader" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="1c623146-5e27-1fda-0edd-a1fac1c579f7" />
    </api>
    <api id="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.CreateDataReader" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataTables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="29998231-93da-33ff-1f86-027c656d117d" />
    </api>
    <api id="P:System.Data.DataSet.DataSetName">
      <topicdata group="api" />
      <apidata name="DataSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetName" />
      <setter name="set_DataSetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="d87ce4e6-7cff-0b57-0ddc-0ed1b030f7a0" />
    </api>
    <api id="P:System.Data.DataSet.DefaultViewManager">
      <topicdata group="api" />
      <apidata name="DefaultViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1096d5e6-565b-2285-8127-dc80593c4c85" />
    </api>
    <api id="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataSet.DetermineSchemaSerializationMode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="10f7bcb3-4b89-767f-5ac1-a45f9fb7b5b2" />
    </api>
    <api id="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataSet.DetermineSchemaSerializationMode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="e5832e29-a878-f621-96d3-f894c45cbc35" />
    </api>
    <api id="M:System.Data.DataSet.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="4ea09e07-95b3-4b7f-cf42-11f9c102612a" />
    </api>
    <api id="P:System.Data.DataSet.EnforceConstraints">
      <topicdata group="api" />
      <apidata name="EnforceConstraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnforceConstraints" />
      <setter name="set_EnforceConstraints" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bbe2db6f-9960-ff63-4b2f-f0321946beab" />
    </api>
    <api id="P:System.Data.DataSet.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="63a6a60e-ec01-af10-a63b-56e3c036d4de" />
    </api>
    <api id="M:System.Data.DataSet.GetChanges">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.GetChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="42a70c42-6525-51ca-18c4-f7ac4c7a34a1" />
    </api>
    <api id="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.GetChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="93d252d2-3ced-865f-97ea-d7ff4b32d9b9" />
    </api>
    <api id="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetDataSetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaComplexType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="207a3e68-8e92-0279-522b-ddda07690609" />
    </api>
    <api id="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="2d2a32e7-66f7-794c-c8b1-69e6dba6c717" />
    </api>
    <api id="M:System.Data.DataSet.GetSchemaSerializable">
      <topicdata group="api" />
      <apidata name="GetSchemaSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="5e06a9cd-0276-0fd0-8533-a67ed24ae2f1" />
    </api>
    <api id="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetSerializationData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="2e2d396a-54da-617c-b424-3588e42be49b" />
    </api>
    <api id="M:System.Data.DataSet.GetXml">
      <topicdata group="api" />
      <apidata name="GetXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="5b5a5131-964d-0227-cb28-fd152bab91ce" />
    </api>
    <api id="M:System.Data.DataSet.GetXmlSchema">
      <topicdata group="api" />
      <apidata name="GetXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="ec997c90-091a-d2bc-dc40-94fb331da1ed" />
    </api>
    <api id="M:System.Data.DataSet.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.HasChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="b306e0c3-3aee-e579-cbef-ee89091be38b" />
    </api>
    <api id="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.HasChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="7df17d8f-6eb3-9033-4f5b-7d10cfbd4fd8" />
    </api>
    <api id="P:System.Data.DataSet.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="808b0130-27ca-7d11-1b50-1d1f74186279" />
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="7ef7cb55-28df-6016-ccf6-a9cc23f0ef5d" />
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="98915c69-c08f-1698-c512-001cdc3ed63e" />
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="adb6029e-d0db-a636-077c-db8e6094bd1d" />
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="69628db1-3c07-ef0a-45eb-e46049199172" />
    </api>
    <api id="E:System.Data.DataSet.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="c5f8b9df-b70e-ad9c-c82c-4d285c53bb7e" />
    </api>
    <api id="M:System.Data.DataSet.InitializeDerivedDataSet">
      <topicdata group="api" />
      <apidata name="InitializeDerivedDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="8dbb5688-f5b3-8b34-0d08-a179338d6735" />
    </api>
    <api id="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="IsBinarySerialized" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="3a50ac34-d4e1-7a18-69ed-09e33ea2810b" />
    </api>
    <api id="P:System.Data.DataSet.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="22659f66-401f-c86b-5725-8c72a1046a29" />
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="be88ce7c-f79e-5842-408d-4bfe8761f8ea" />
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="b9155705-9b26-d897-f622-ced5aa7747fb" />
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="4251b050-a745-9f07-ee34-6b3a95ca6882" />
    </api>
    <api id="P:System.Data.DataSet.Locale">
      <topicdata group="api" />
      <apidata name="Locale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Locale" />
      <setter name="set_Locale" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="0ac9b707-b0e1-03a0-499a-9d5f1e4914a4" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="191d9ba3-e226-4d1e-0de1-4da42da2f673" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="bb80e682-b4a0-13a6-ef30-281f51dd1d2a" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="6d3ad80b-f3e8-2cd9-33d1-4875ad1c7595" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="c575e08c-509e-bb42-33b0-a09ad0d8fccb" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f3969b0b-2ca9-1413-f9d4-71d66e08b1d0" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f55f6e6a-4450-50bc-205a-d7deada42c98" />
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="70b88bdf-d86e-6f7e-91ed-144a92b38288" />
    </api>
    <api id="E:System.Data.DataSet.MergeFailed">
      <topicdata group="api" />
      <apidata name="MergeFailed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MergeFailed" />
      <remover name="remove_MergeFailed" />
      <eventhandler>
        <type api="T:System.Data.MergeFailedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="24a4f92f-8e0c-206a-9970-97f0f1933201" />
    </api>
    <api id="P:System.Data.DataSet.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="1eac2945-cb69-8238-2438-59c3c65a67cb" />
    </api>
    <api id="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="ea2c0063-df75-7409-73aa-e6243a46d0f9" />
    </api>
    <api id="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="OnRemoveRelation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="3e5bc3eb-291b-d81e-7d41-555b3eb18278" />
    </api>
    <api id="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="OnRemoveTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="aded5b31-6a41-186a-7160-0fc959c4c123" />
    </api>
    <api id="P:System.Data.DataSet.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="5bb25e45-71c8-bf0d-2a9a-a725797ee022" />
    </api>
    <api id="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="81f83c78-bf7d-4391-b91f-1d01c387dc02" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="015728c1-7da1-822f-cdf6-432a894213ef" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f4903f57-a4ca-3218-0079-6c2eb12b87fa" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="7c1530d2-68ff-313f-8547-70af0c660ec6" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="545c3b8a-49e2-5a2b-d826-38f2d1b2dd40" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="8bb2bb02-4bc7-304a-c99c-597ea5a22911" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="97ad0ad1-3406-8819-c930-0cdeb79d7a94" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="36482dc3-fcdf-6ed9-ccf7-25d629c44a01" />
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="1764baa9-2e85-25f1-c378-9a886731b5e5" />
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="ee33b8c2-9ab5-a360-c3e1-889849611a62" />
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="027c473b-46d5-f095-55b4-0dbdd617ba31" />
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="de4543f4-1a3e-124c-d56a-0ca2636550a0" />
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f8112218-d50a-8c26-aef3-84f3621ad264" />
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="d818354d-f45c-a973-9cf9-1645763199ed" />
    </api>
    <api id="M:System.Data.DataSet.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="84c98c33-a7b1-773d-02cf-17e884e811f6" />
    </api>
    <api id="P:System.Data.DataSet.Relations">
      <topicdata group="api" />
      <apidata name="Relations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Relations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7dce140a-a060-b9c7-13fd-15a1ef53cef1" />
    </api>
    <api id="P:System.Data.DataSet.RemotingFormat">
      <topicdata group="api" />
      <apidata name="RemotingFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemotingFormat" />
      <setter name="set_RemotingFormat" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.SerializationFormat" ref="false" />
            <enumValue>
              <field name="Xml" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d7972160-d19a-3a7b-667a-35be9a2729ce" />
    </api>
    <api id="M:System.Data.DataSet.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="20bbbdf4-c120-4fed-933c-a17c470f5061" />
    </api>
    <api id="P:System.Data.DataSet.SchemaSerializationMode">
      <topicdata group="api" />
      <apidata name="SchemaSerializationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SchemaSerializationMode" />
      <setter name="set_SchemaSerializationMode" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6f7b3e5f-56db-71b6-0ad6-e84f0c47e1ba" />
    </api>
    <api id="M:System.Data.DataSet.ShouldSerializeRelations">
      <topicdata group="api" />
      <apidata name="ShouldSerializeRelations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="5e575c00-7f8a-29b6-53f1-5ec0f72cf468" />
    </api>
    <api id="M:System.Data.DataSet.ShouldSerializeTables">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTables" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="68e15cea-dda8-3f0b-acac-28b39f95960b" />
    </api>
    <api id="P:System.Data.DataSet.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MarshalByValueComponent.Site">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="affe2781-eecd-671f-e28b-4c5b4f42693d" />
    </api>
    <api id="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <topicdata group="api" eiiName="IListSource.ContainsListCollection" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IListSource.ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IListSource.ContainsListCollection">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="b1ea5305-15d0-b732-8db1-a61a89a6495d" />
    </api>
    <api id="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <topicdata group="api" eiiName="IListSource.GetList" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IListSource.GetList">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="44ddf814-ed38-2501-6b76-1fe6dce17abb" />
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="88c2e3c2-23f2-237e-3b51-287176ea17f4" />
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="8177f8c8-dd81-bd5a-c8e6-fb81d7e4a695" />
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="4a572c94-4ad3-5462-8744-db7cd8de0944" />
    </api>
    <api id="P:System.Data.DataSet.Tables">
      <topicdata group="api" />
      <apidata name="Tables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Tables" />
      <returns>
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dd996d4d-97fa-0416-d022-02e691948be1" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f4d77ad2-8f6b-641d-8bb0-8b45c4ca0789" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="10fd7c4d-f20d-f19a-7611-1a53dfad0935" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="947099a7-6bc3-907a-c70d-d1db9698ff4c" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="2e973e9d-9a87-fbf1-2a57-d9da4d634ead" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="2e35d081-d126-5739-be61-4094e655c05f" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="f6a01dca-f44f-206c-6315-bd0508e7d448" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="a2e12f23-c25e-70e7-b396-d8f38ab70b33" />
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="7bef5d01-d762-76d9-8848-96b08afc81a4" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="0e4ea4fa-66aa-ea9f-e9a3-12d98e87a21d" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="cfe51c10-356a-39df-af6f-0f10693c91f0" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="e9e2edf3-3007-33c1-f8f0-b97f6796be2f" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="752ec1a9-d573-fa79-4046-61cdd804de07" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="2543984f-f224-ad59-91de-c626a6ff6ce4" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="0d4cb93a-f917-0a2e-d477-08f8778f87a9" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="813b864f-2f4d-5cf0-a14a-8d9db67ab1d3" />
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <file name="3451b821-8481-4dc6-8736-3bd69ff1dc0f" />
    </api>
    <api id="T:System.Data.DataSetDateTime">
      <topicdata group="api" />
      <apidata name="DataSetDateTime" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataSetDateTime.Local" />
        <element api="F:System.Data.DataSetDateTime.Unspecified" />
        <element api="F:System.Data.DataSetDateTime.UnspecifiedLocal" />
        <element api="F:System.Data.DataSetDateTime.Utc" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="d99c7f42-0fca-908b-a9ab-2de718f2cc66" />
    </api>
    <api id="F:System.Data.DataSetDateTime.Local">
      <topicdata group="api" notopic="" />
      <apidata name="Local" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
      <file name="f5c6eb3e-00bf-fe66-02f5-34d7dc0df5d4" />
    </api>
    <api id="F:System.Data.DataSetDateTime.Unspecified">
      <topicdata group="api" notopic="" />
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
      <file name="5d6b2c07-b04c-9c4e-2324-eace15c49378" />
    </api>
    <api id="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <topicdata group="api" notopic="" />
      <apidata name="UnspecifiedLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
      <file name="e7775ae4-1f9f-613a-e373-5affa3abc81d" />
    </api>
    <api id="F:System.Data.DataSetDateTime.Utc">
      <topicdata group="api" notopic="" />
      <apidata name="Utc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
      <file name="5ad6e8cb-a2a5-0f32-0fe0-6bce4590ebf9" />
    </api>
    <api id="T:System.Data.DataSetSchemaImporterExtension">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataSetSchemaImporterExtension" />
      <apidata name="DataSetSchemaImporterExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="66753de2-ec64-5794-f370-d0cf30c60bc6" />
    </api>
    <api id="AllMembers.T:System.Data.DataSetSchemaImporterExtension">
      <topicdata name="DataSetSchemaImporterExtension" group="list" subgroup="members" typeTopicId="T:System.Data.DataSetSchemaImporterExtension" />
      <apidata name="DataSetSchemaImporterExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
        <element api="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        </element>
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" />
      </containers>
      <file name="ccf009ad-5f2b-a9cd-d580-b9e0b812096e" />
    </api>
    <api id="Methods.T:System.Data.DataSetSchemaImporterExtension">
      <topicdata name="DataSetSchemaImporterExtension" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSetSchemaImporterExtension" />
      <apidata name="DataSetSchemaImporterExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        </element>
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" />
      </containers>
      <file name="128752ac-8b0f-acf2-004d-005998a11cf6" />
    </api>
    <api id="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
      <topicdata name="ImportSchemaType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataSetSchemaImporterExtension" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
      <file name="ad413522-efc7-f36c-8765-9bb33f9b8d1d" />
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
      <file name="08f295c3-1811-f7de-0007-bd1f457706ed" />
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
        </parameter>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="importer">
          <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
        </parameter>
        <parameter name="compileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="mainNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
      <file name="9004d154-3345-d6c2-d0a7-225e7d94d471" />
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Xml.Schema.XmlSchemaType" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
        </parameter>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="importer">
          <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
        </parameter>
        <parameter name="compileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="mainNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
      <file name="7185b8f0-aa9d-75fc-fd1d-0d6bfc865c59" />
    </api>
    <api id="T:System.Data.DataSysDescriptionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSysDescriptionAttribute has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="edd447f9-08bf-ad01-ef28-ba7cf1782c9b" />
    </api>
    <api id="AllMembers.T:System.Data.DataSysDescriptionAttribute">
      <topicdata name="DataSysDescriptionAttribute" group="list" subgroup="members" typeTopicId="T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)" />
        <element api="P:System.Data.DataSysDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" />
      </containers>
      <file name="bf0e6cc5-bf6d-00a5-1485-90fecafe1eac" />
    </api>
    <api id="Methods.T:System.Data.DataSysDescriptionAttribute">
      <topicdata name="DataSysDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" />
      </containers>
      <file name="bae4f4ec-6521-b9e1-d76a-fdb413fa5162" />
    </api>
    <api id="Properties.T:System.Data.DataSysDescriptionAttribute">
      <topicdata name="DataSysDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.Data.DataSysDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" />
      </containers>
      <file name="3a14568d-0e15-c03e-4db3-a679c09882b9" />
    </api>
    <api id="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSysDescriptionAttribute has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6f3c27b2-023c-ed87-1a1a-725671cdb829" />
    </api>
    <api id="P:System.Data.DataSysDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" ref="true" />
      </containers>
      <file name="66055a46-b5a9-ca08-f386-bbb1166706fb" />
    </api>
    <api id="T:System.Data.DataTable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.TypedTableBase`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IListSource" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetDataTableSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TableName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RowChanging</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8a73ab8a-b5d2-531b-d030-ba555015a054" />
    </api>
    <api id="AllMembers.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="members" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.DataTable.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataTable.#ctor">
          <element api="M:System.Data.DataTable.#ctor" />
          <element api="M:System.Data.DataTable.#ctor(System.String)" />
          <element api="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataTable.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="F:System.Data.DataTable.fInitInProgress" />
        <element api="Overload:System.Data.DataTable.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="Overload:System.Data.DataTable.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.DataTable.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="P:System.Data.DataTable.Locale" />
        <element api="Overload:System.Data.DataTable.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="Overload:System.Data.DataTable.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.DataTable.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="Overload:System.Data.DataTable.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="P:System.Data.DataTable.TableName" />
        <element api="E:System.Data.DataTable.TableNewRow" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.DataTable.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.DataTable.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
      <file name="e911baee-b37d-23a3-295c-1685b1b10cf8" />
    </api>
    <api id="Methods.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataTable.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.DataTable.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.DataTable.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.DataTable.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.DataTable.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.DataTable.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.DataTable.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.DataTable.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.DataTable.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.DataTable.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
      <file name="8af47503-3186-7bc3-6df1-f65ac7483a23" />
    </api>
    <api id="Properties.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
      <file name="d806fd5a-1ba1-5a80-d4e3-3f80a85d3e83" />
    </api>
    <api id="Events.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Events" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
      <file name="593986fe-efc8-5574-33a0-34cb68c06c04" />
    </api>
    <api id="Fields.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Fields" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="F:System.Data.DataTable.fInitInProgress" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
      <file name="a06b2b23-ff7c-1d4e-d84f-4b004069210f" />
    </api>
    <api id="Overload:System.Data.DataTable.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataTable.#ctor" />
        <element api="M:System.Data.DataTable.#ctor(System.String)" />
        <element api="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="f0700bff-58dc-b717-29ae-fbd140f14eee" />
    </api>
    <api id="Overload:System.Data.DataTable.GetChanges">
      <topicdata name="GetChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.GetChanges" />
        <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0b7a781c-ffd0-2334-3e25-3ff706136cb9" />
    </api>
    <api id="Overload:System.Data.DataTable.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="37e7d8d2-8981-efdd-e808-c319ccb71685" />
    </api>
    <api id="Overload:System.Data.DataTable.LoadDataRow">
      <topicdata name="LoadDataRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
        <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="ef491403-6628-50a0-3081-e34172680b9e" />
    </api>
    <api id="Overload:System.Data.DataTable.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="3bdb775e-c609-a975-c7ce-e5f96a1f2635" />
    </api>
    <api id="Overload:System.Data.DataTable.ReadXml">
      <topicdata name="ReadXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.ReadXml(System.String)" />
        <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
        <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fc710f97-03dc-5a9b-f509-3fa9a156302e" />
    </api>
    <api id="Overload:System.Data.DataTable.ReadXmlSchema">
      <topicdata name="ReadXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="ff858460-ee53-60f4-8aaa-93f8f30b21d7" />
    </api>
    <api id="Overload:System.Data.DataTable.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Select" />
        <element api="M:System.Data.DataTable.Select(System.String)" />
        <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d443ad68-e6e4-e126-0ff5-51728c4a8d90" />
    </api>
    <api id="Overload:System.Data.DataTable.WriteXml">
      <topicdata name="WriteXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="60292c26-86ef-7bec-615a-0c2f5cf58096" />
    </api>
    <api id="Overload:System.Data.DataTable.WriteXmlSchema">
      <topicdata name="WriteXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTable" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d21b865a-a583-b56b-e884-b291de2a5196" />
    </api>
    <api id="M:System.Data.DataTable.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="a89e74b3-2b10-a4fd-274a-9a8ddf8ee8f4" />
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0f91d067-0352-8e87-1ee3-9e0ff81b24e7" />
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1c57cd48-d647-6917-6292-ff68286bf90c" />
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="f79672fe-9480-934e-08a2-278e9bed6a24" />
    </api>
    <api id="M:System.Data.DataTable.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="e02d9dca-3f45-3d13-bc48-81776568cec1" />
    </api>
    <api id="M:System.Data.DataTable.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="8e4b1c15-6224-d91c-0cd6-ada80652e282" />
    </api>
    <api id="M:System.Data.DataTable.BeginLoadData">
      <topicdata group="api" />
      <apidata name="BeginLoadData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="61719120-582f-9440-2b3f-42183427a7cc" />
    </api>
    <api id="P:System.Data.DataTable.CaseSensitive">
      <topicdata group="api" />
      <apidata name="CaseSensitive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaseSensitive" />
      <setter name="set_CaseSensitive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fc9be29f-a634-6a5c-d174-2342656d5082" />
    </api>
    <api id="P:System.Data.DataTable.ChildRelations">
      <topicdata group="api" />
      <apidata name="ChildRelations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChildRelations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e059d22d-6f58-f561-2912-1ab14222e447" />
    </api>
    <api id="M:System.Data.DataTable.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="826a07cd-16da-cfd2-5154-07b58e2ce2de" />
    </api>
    <api id="M:System.Data.DataTable.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fa3c7878-a45e-1ed9-e83f-f4be5acc8d35" />
    </api>
    <api id="E:System.Data.DataTable.ColumnChanged">
      <topicdata group="api" />
      <apidata name="ColumnChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ColumnChanged" />
      <remover name="remove_ColumnChanged" />
      <eventhandler>
        <type api="T:System.Data.DataColumnChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0199d193-c19d-ca2f-35f8-14b2b38825f8" />
    </api>
    <api id="E:System.Data.DataTable.ColumnChanging">
      <topicdata group="api" />
      <apidata name="ColumnChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ColumnChanging" />
      <remover name="remove_ColumnChanging" />
      <eventhandler>
        <type api="T:System.Data.DataColumnChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d1bd7a08-f78b-a8e1-0571-839a16115cf3" />
    </api>
    <api id="P:System.Data.DataTable.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6b12b90c-6287-9661-0040-ce8d5bf87f43" />
    </api>
    <api id="M:System.Data.DataTable.Compute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Compute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0a3b627c-bedc-bb33-94bf-b8473e15c39e" />
    </api>
    <api id="P:System.Data.DataTable.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1e38835e-1bbf-0866-a6fb-c8c5522b12b1" />
    </api>
    <api id="M:System.Data.DataTable.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="680cdc0b-9c88-b1e8-aefb-a7b286d77dc5" />
    </api>
    <api id="M:System.Data.DataTable.CreateDataReader">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="7397aec0-22be-484a-efd4-0ef74dd4462a" />
    </api>
    <api id="M:System.Data.DataTable.CreateInstance">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="c438a938-7d99-a79d-25ef-d297606210cb" />
    </api>
    <api id="P:System.Data.DataTable.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f588fa75-4b65-c310-df77-e3639715f7e0" />
    </api>
    <api id="P:System.Data.DataTable.DefaultView">
      <topicdata group="api" />
      <apidata name="DefaultView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultView" />
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5f0390dd-b809-8dd0-5276-929dd5434f79" />
    </api>
    <api id="P:System.Data.DataTable.DisplayExpression">
      <topicdata group="api" />
      <apidata name="DisplayExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayExpression" />
      <setter name="set_DisplayExpression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="4e41d1aa-1b68-9e0b-8293-0f3b4857df4e" />
    </api>
    <api id="M:System.Data.DataTable.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="cf85ace6-995f-f104-b423-349f6650879c" />
    </api>
    <api id="M:System.Data.DataTable.EndLoadData">
      <topicdata group="api" />
      <apidata name="EndLoadData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="f37c04ff-a133-54f5-abd8-26c3a21d5b28" />
    </api>
    <api id="P:System.Data.DataTable.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d042d490-3607-14e1-866a-ec253c55aebc" />
    </api>
    <api id="F:System.Data.DataTable.fInitInProgress">
      <topicdata group="api" />
      <apidata name="fInitInProgress" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="c8bec667-7f07-e2ba-d543-64d94a8a6b64" />
    </api>
    <api id="M:System.Data.DataTable.GetChanges">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.GetChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d32e4a4b-e890-81b1-50df-1817ce1f578f" />
    </api>
    <api id="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.GetChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="a9ea7697-65ca-185e-3ea7-1da814a807b3" />
    </api>
    <api id="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetDataTableSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaComplexType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="5100e2d2-9cb4-cb1e-55f3-1109ed2504f0" />
    </api>
    <api id="M:System.Data.DataTable.GetErrors">
      <topicdata group="api" />
      <apidata name="GetErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="7aad363f-06b7-66a3-0aa8-8d111bda6751" />
    </api>
    <api id="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="dec7455b-35dc-a569-59cd-d16008485c3e" />
    </api>
    <api id="M:System.Data.DataTable.GetRowType">
      <topicdata group="api" />
      <apidata name="GetRowType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1fbcd5e1-3c2a-9d2b-21ea-3bc2a7874d25" />
    </api>
    <api id="M:System.Data.DataTable.GetSchema">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="6f1b2342-441f-40fc-86cc-616ed8f1c912" />
    </api>
    <api id="P:System.Data.DataTable.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="612bc821-6279-7273-5c65-9d76d28d6ec1" />
    </api>
    <api id="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="ImportRow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="be5c96cd-1b2a-b7e3-a5c3-dc4cc1bf1780" />
    </api>
    <api id="E:System.Data.DataTable.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="5e6ed5f7-f712-1ba1-85b9-1059ff78a97d" />
    </api>
    <api id="P:System.Data.DataTable.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c158c55b-aee8-3ad7-cdb4-bf27d38767e9" />
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="30a807a9-e934-8697-8f61-1ae8cc98aaff" />
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="16edeab2-613e-c1f8-a1bf-f39d9a655ad0" />
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d7fcba7d-801c-c03d-45b1-01c55687b1d5" />
    </api>
    <api id="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.LoadDataRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="fAcceptChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="f62300cb-6e4e-4e13-c0e6-8452f6581e9e" />
    </api>
    <api id="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.LoadDataRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="9493b46d-ada1-d6d8-b608-b48b5ab3fd7b" />
    </api>
    <api id="P:System.Data.DataTable.Locale">
      <topicdata group="api" />
      <apidata name="Locale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Locale" />
      <setter name="set_Locale" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="4f02c835-3bc5-2625-2c76-9219ffe7a2e7" />
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="89d0b975-74d3-a8c6-9fff-7dc5b81658d1" />
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="b88de649-594d-cce7-a75e-769d828779d1" />
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fe92ddc5-e8d0-cf04-2931-e9f7e995366c" />
    </api>
    <api id="P:System.Data.DataTable.MinimumCapacity">
      <topicdata group="api" />
      <apidata name="MinimumCapacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumCapacity" />
      <setter name="set_MinimumCapacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>50</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2548ba6d-7a0e-906c-54a8-fd194a373f43" />
    </api>
    <api id="P:System.Data.DataTable.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1eab472c-9642-baab-a961-780d117750f0" />
    </api>
    <api id="M:System.Data.DataTable.NewRow">
      <topicdata group="api" />
      <apidata name="NewRow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="67aa9947-071a-dfbc-55e0-a3196b5284e1" />
    </api>
    <api id="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <topicdata group="api" />
      <apidata name="NewRowArray" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="2d3318c5-24b6-63a8-fc45-2f16fa8270cd" />
    </api>
    <api id="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <topicdata group="api" />
      <apidata name="NewRowFromBuilder" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Data.DataRowBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="37353785-2ae7-1656-5d87-ae2c2ca936cc" />
    </api>
    <api id="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnColumnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0b42e327-1ee2-a5d4-bf59-0bf474b7f755" />
    </api>
    <api id="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnColumnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="166cb63d-1d53-ee28-4a09-5f81b523ecd5" />
    </api>
    <api id="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="360f379f-0d03-b1f9-702a-af3dae974630" />
    </api>
    <api id="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="OnRemoveColumn" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="84dc8441-c209-dd22-b570-55ba9c3d39dc" />
    </api>
    <api id="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="5515ceae-5323-b4ed-ad17-e0e0ab75d45f" />
    </api>
    <api id="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="2de23e45-8886-bb4b-2ae1-c1c9d1711d71" />
    </api>
    <api id="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowDeleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1b098361-f473-9678-5765-0d6ec65772bc" />
    </api>
    <api id="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowDeleting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fd7df5af-8ae6-0637-2241-8de0bb2d9d0d" />
    </api>
    <api id="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableCleared" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d5bad45b-a9ed-6e96-2128-b69c7ac6ee45" />
    </api>
    <api id="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableClearing" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="8f5b761e-c65a-5538-9451-08956f16c172" />
    </api>
    <api id="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableNewRow" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="244a3f3e-8df3-b8bc-e8b8-6a0391a126b3" />
    </api>
    <api id="P:System.Data.DataTable.ParentRelations">
      <topicdata group="api" />
      <apidata name="ParentRelations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentRelations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9bb455fa-64e2-cc0c-6008-d9871c668b90" />
    </api>
    <api id="P:System.Data.DataTable.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="0b45da01-735c-0a34-aacc-c78ae1382e1f" />
    </api>
    <api id="P:System.Data.DataTable.PrimaryKey">
      <topicdata group="api" />
      <apidata name="PrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKey" />
      <setter name="set_PrimaryKey" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a2783dd1-adbe-afd0-5b12-f8edfd4106f9" />
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="35dbbcdf-565d-4491-b66c-0b76d126056d" />
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="e976c665-c0a8-1f5f-b5a7-f5ebc7c9b36b" />
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="14d11750-1f01-27c9-631a-2e6ae565bb6d" />
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="79eca750-b879-b499-0df2-0f4275fd43e3" />
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d93b74c5-8f37-b22b-a1e1-026fdf9a23f2" />
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="4ddc3935-d671-da97-799b-834d6f215f3a" />
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="fad4390c-615a-8e2c-d0f9-f53e3adb0c93" />
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="7bc80349-74a2-4687-32f3-4b508216594c" />
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="5ee6f788-9b6c-495f-32fb-5c5f16469505" />
    </api>
    <api id="M:System.Data.DataTable.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1e6029a2-cab7-3164-bd4a-2129d10df932" />
    </api>
    <api id="P:System.Data.DataTable.RemotingFormat">
      <topicdata group="api" />
      <apidata name="RemotingFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemotingFormat" />
      <setter name="set_RemotingFormat" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.SerializationFormat" ref="false" />
            <enumValue>
              <field name="Xml" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ffc446f5-d0b9-be1e-29ad-162ea42a9806" />
    </api>
    <api id="M:System.Data.DataTable.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="33a17f8e-c096-ff0a-a5c3-f606a4feca6e" />
    </api>
    <api id="E:System.Data.DataTable.RowChanged">
      <topicdata group="api" />
      <apidata name="RowChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowChanged" />
      <remover name="remove_RowChanged" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="394f1f85-a84c-b0b4-3443-f61f1a447e82" />
    </api>
    <api id="E:System.Data.DataTable.RowChanging">
      <topicdata group="api" />
      <apidata name="RowChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowChanging" />
      <remover name="remove_RowChanging" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="4da53bc9-dc6f-c547-6226-40fcd945195a" />
    </api>
    <api id="E:System.Data.DataTable.RowDeleted">
      <topicdata group="api" />
      <apidata name="RowDeleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowDeleted" />
      <remover name="remove_RowDeleted" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d8094b84-1bf1-463f-b63e-10077ec54c30" />
    </api>
    <api id="E:System.Data.DataTable.RowDeleting">
      <topicdata group="api" />
      <apidata name="RowDeleting" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowDeleting" />
      <remover name="remove_RowDeleting" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="8248214a-ef22-693c-62a2-799f026ca05d" />
    </api>
    <api id="P:System.Data.DataTable.Rows">
      <topicdata group="api" />
      <apidata name="Rows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rows" />
      <returns>
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ed7b1e0a-81a1-9ede-a55b-400914648916" />
    </api>
    <api id="M:System.Data.DataTable.Select">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="aeb47094-c802-eb95-6880-0ee09bdbd3ae" />
    </api>
    <api id="M:System.Data.DataTable.Select(System.String)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="12167cd5-5ae3-9a7f-bbf4-eee7d0fb9682" />
    </api>
    <api id="M:System.Data.DataTable.Select(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sort">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="9055f395-84f2-25fd-7563-cff9db65680d" />
    </api>
    <api id="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sort">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="recordStates">
          <type api="T:System.Data.DataViewRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="a1bd3fd9-a8a4-8f29-e74f-77cfb9cb2f87" />
    </api>
    <api id="P:System.Data.DataTable.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MarshalByValueComponent.Site">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ea1b7b47-31d3-a98f-1ece-52cc0c00df8d" />
    </api>
    <api id="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <topicdata group="api" eiiName="IListSource.ContainsListCollection" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IListSource.ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IListSource.ContainsListCollection">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="763d3199-b2cd-a3f4-2eee-a4cf5e557ffc" />
    </api>
    <api id="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <topicdata group="api" eiiName="IListSource.GetList" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IListSource.GetList">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="42fba8fa-1384-e73d-2a7c-48ea739a574b" />
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="41a2a667-a30d-e3f9-de03-e6c5925097ec" />
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="64356477-518d-5835-fdcf-bd3f0cfb419e" />
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="b8bfec92-61e3-f012-b242-623533d2d97b" />
    </api>
    <api id="E:System.Data.DataTable.TableCleared">
      <topicdata group="api" />
      <apidata name="TableCleared" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableCleared" />
      <remover name="remove_TableCleared" />
      <eventhandler>
        <type api="T:System.Data.DataTableClearEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d4179f15-9e30-cd2a-8363-440368807762" />
    </api>
    <api id="E:System.Data.DataTable.TableClearing">
      <topicdata group="api" />
      <apidata name="TableClearing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableClearing" />
      <remover name="remove_TableClearing" />
      <eventhandler>
        <type api="T:System.Data.DataTableClearEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="797e4f85-0606-29bd-31da-bd491d234db2" />
    </api>
    <api id="P:System.Data.DataTable.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TableName" />
      <setter name="set_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="1d5d78d7-aa32-95a3-8166-d11af9350860" />
    </api>
    <api id="E:System.Data.DataTable.TableNewRow">
      <topicdata group="api" />
      <apidata name="TableNewRow" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableNewRow" />
      <remover name="remove_TableNewRow" />
      <eventhandler>
        <type api="T:System.Data.DataTableNewRowEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="a8a64f4d-d89e-0e3b-5aff-77841059d511" />
    </api>
    <api id="M:System.Data.DataTable.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1b2a85ef-9d83-09fa-dddc-30d9bc91eab7" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="62655b71-acc3-2949-8092-e7a996fa29cc" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="264aea77-892c-60d7-4f43-5029f937d7cc" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="d67d6632-4e15-8ed7-b31a-ee64088e6b57" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="898ac3de-15a2-dfb6-7842-e8c283f82161" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0aec3375-2822-0bcc-43cb-4daa611e5556" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="b16bf753-2466-f41b-277a-01406e943145" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="e2107d80-5da5-b735-52cb-66754791b52f" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="bcff8905-315b-a2d2-1f82-743e957fb4fe" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="b5ce12a7-2e15-bf48-54bc-ed54109ef8cc" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="954fea62-cde8-aa85-2803-ada5ddb92838" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="1033c3a7-b2e9-fed2-9271-b857f7d7ac8e" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="f4b49f5c-3380-589e-c06a-b238c7e4c49c" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="e9acba6e-0fd4-6829-f218-d326c322d9fa" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="27370a2a-be8a-4e33-8b50-fd8ed25fcbb5" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="633d9057-8760-01af-b325-b3183f380f15" />
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="9587d2a9-1a9e-a713-e93c-bbaae5e435bf" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="70e710d7-94f6-652c-f273-a02f09641f95" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="697ca2c5-c785-0546-b3aa-7353d4c1db54" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="5b5ca6c3-ab34-d2b1-9d62-ad9de72cd9c9" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="e006ee2c-6949-1c29-c646-a3cb3cb84b1e" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="7b9c9054-24df-a0d9-e9fd-38db778b0910" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="a42a776f-8aba-2dbc-efb9-a911efe4f784" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="0bf7231b-a3ab-e431-bcd6-f0da82177ac4" />
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <file name="c5fdf544-42dd-36fc-7521-133198a9388e" />
    </api>
    <api id="T:System.Data.DataTableClearEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="c7d9ef48-10bc-b296-ff17-9541bd045dbf" />
    </api>
    <api id="AllMembers.T:System.Data.DataTableClearEventArgs">
      <topicdata name="DataTableClearEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)" />
        <element api="P:System.Data.DataTableClearEventArgs.Table" />
        <element api="P:System.Data.DataTableClearEventArgs.TableName" />
        <element api="P:System.Data.DataTableClearEventArgs.TableNamespace" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" />
      </containers>
      <file name="8576fe42-c226-4657-4b68-c9d5fc044e31" />
    </api>
    <api id="Methods.T:System.Data.DataTableClearEventArgs">
      <topicdata name="DataTableClearEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" />
      </containers>
      <file name="a017820e-3be3-878c-d03b-134605e2a747" />
    </api>
    <api id="Properties.T:System.Data.DataTableClearEventArgs">
      <topicdata name="DataTableClearEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataTableClearEventArgs.Table" />
        <element api="P:System.Data.DataTableClearEventArgs.TableName" />
        <element api="P:System.Data.DataTableClearEventArgs.TableNamespace" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" />
      </containers>
      <file name="10b2135f-7617-c4a1-86c1-fd1329235d7d" />
    </api>
    <api id="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
      <file name="e730007c-4498-41cc-d084-4cd45e7210c1" />
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
      <file name="2eb995e8-cde3-5ed3-43e2-2fe42d0b35e2" />
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
      <file name="61d52a94-718b-af4d-ff12-be6e3e31b189" />
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <topicdata group="api" />
      <apidata name="TableNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TableNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
      <file name="61eead02-982c-3dfe-ed71-cce36e56380b" />
    </api>
    <api id="T:System.Data.DataTableClearEventHandler">
      <topicdata group="api" />
      <apidata name="DataTableClearEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="797b5961-05a6-8138-e39a-02b84a22fe1a" />
    </api>
    <api id="T:System.Data.DataTableCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1a5177ab-0929-b68f-4365-c62638ebf772" />
    </api>
    <api id="AllMembers.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="members" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataTableCollection.Add">
          <element api="M:System.Data.DataTableCollection.Add" />
          <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])" />
        <element api="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Clear" />
        <element api="E:System.Data.DataTableCollection.CollectionChanged" />
        <element api="E:System.Data.DataTableCollection.CollectionChanging" />
        <element api="Overload:System.Data.DataTableCollection.Contains">
          <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
          <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.IndexOf">
          <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.Item">
          <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.Remove">
          <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.RemoveAt(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
      <file name="c0710b0a-f996-19a2-e6f4-a424cb7bfe91" />
    </api>
    <api id="Methods.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataTableCollection.Add">
          <element api="M:System.Data.DataTableCollection.Add" />
          <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])" />
        <element api="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Clear" />
        <element api="Overload:System.Data.DataTableCollection.Contains">
          <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
          <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.IndexOf">
          <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.Remove">
          <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
      <file name="c5af99dc-60d6-51aa-3d6d-a1fa649cd12c" />
    </api>
    <api id="Properties.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableCollection.Item">
          <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
      <file name="28735061-de0f-8d0f-668e-777b217fe34f" />
    </api>
    <api id="Events.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataTableCollection.CollectionChanged" />
        <element api="E:System.Data.DataTableCollection.CollectionChanging" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
      <file name="2fd58a6c-aec1-a9fc-a190-40f581defdcf" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Add" />
        <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Add(System.String)" />
        <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="ad9d105c-47e7-247d-6bec-58f2cebbc3c2" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
        <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="91d4aa1e-747e-291d-0c01-53ea533aea80" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="8f648c0c-887f-63a5-8abe-405616f3d0c4" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
        <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="48bd3e61-58c9-bb98-4e17-081d9cb5a40b" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataTableCollection.Item(System.String)" />
        <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="c00de7b5-c272-f965-13ca-85a4cc08de98" />
    </api>
    <api id="Overload:System.Data.DataTableCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableCollection" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
        <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="f7be5497-6ae0-5a84-8349-4e3bc27dde6d" />
    </api>
    <api id="M:System.Data.DataTableCollection.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="e97f807c-e029-05d8-da1c-7d64cbe6226e" />
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="33d01685-c134-5a1b-a0c2-ee331f31aaa9" />
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="5316d8e7-c629-1a00-f60d-1c3b0f16cbd1" />
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="6b4961fb-3362-8693-07ef-558a629f1cb1" />
    </api>
    <api id="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tables">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="144863e3-5e31-dbb5-acaf-487dbf280bfd" />
    </api>
    <api id="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="ff478379-e7ab-631e-fded-9b8776ff5f6e" />
    </api>
    <api id="M:System.Data.DataTableCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="6c197eaa-9ac9-c3a2-e055-057b483ee402" />
    </api>
    <api id="E:System.Data.DataTableCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="2a65371f-caa2-3b1f-2fd7-f5bcc605c5db" />
    </api>
    <api id="E:System.Data.DataTableCollection.CollectionChanging">
      <topicdata group="api" />
      <apidata name="CollectionChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanging" />
      <remover name="remove_CollectionChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="4ed90725-e55b-3487-09ed-71464b443cf3" />
    </api>
    <api id="M:System.Data.DataTableCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="890d17be-6667-44a6-2298-25e0279baf94" />
    </api>
    <api id="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="70ce6f5a-6cc5-72a7-31da-9ac85b7567be" />
    </api>
    <api id="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="3c7c0bfe-a1a6-8369-d251-408a1d57428a" />
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="01fd9723-b553-8e96-feab-36abe0cfb518" />
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="8a675f79-2e7a-d3a1-11d8-d5aa68c4725c" />
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="4b0f8180-82c1-aa93-c07c-cbcc060289d2" />
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="0e75d159-d906-cb82-aa3f-6b10f483ce20" />
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="4bd00a2d-1b8b-ce84-79da-a623e78bf07a" />
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="2c388779-7d06-18a4-a1de-85e1ca0443a6" />
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="f3ac76a5-9a4e-bf38-0b9a-207e45f03ad0" />
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="2cee0b5c-5885-7a62-1a96-c6d5c6597059" />
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="0083e4bd-2296-327d-f4f9-34084dbbab69" />
    </api>
    <api id="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
      <file name="8e58bae8-91df-e9c4-cd25-d1f44c86fe17" />
    </api>
    <api id="T:System.Data.DataTableExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTableExtensions" />
      <apidata name="DataTableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="59b042df-28e2-6fd0-0a56-e793a2ba7850" />
    </api>
    <api id="AllMembers.T:System.Data.DataTableExtensions">
      <topicdata name="DataTableExtensions" group="list" subgroup="members" typeTopicId="T:System.Data.DataTableExtensions" />
      <apidata name="DataTableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableExtensions.AsDataView">
          <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
        <element api="Overload:System.Data.DataTableExtensions.CopyToDataTable">
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" />
      </containers>
      <file name="2a7c08d3-70ca-f383-635d-82eaa64a4fed" />
    </api>
    <api id="Methods.T:System.Data.DataTableExtensions">
      <topicdata name="DataTableExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableExtensions" />
      <apidata name="DataTableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableExtensions.AsDataView">
          <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
        <element api="Overload:System.Data.DataTableExtensions.CopyToDataTable">
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" />
      </containers>
      <file name="94144e72-c625-43b4-3a02-8b96521ae841" />
    </api>
    <api id="Overload:System.Data.DataTableExtensions.AsDataView">
      <topicdata name="AsDataView" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableExtensions" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <file name="1f8c2fba-ebec-0e33-7d0b-a178b4728183" />
    </api>
    <api id="Overload:System.Data.DataTableExtensions.CopyToDataTable">
      <topicdata name="CopyToDataTable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableExtensions" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <file name="ec5cb535-ea48-b061-c29f-8d2b3f42f333" />
    </api>
    <api id="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.AsDataView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a5e6f81f-c54c-c642-1f61-312e2f231c4a" />
    </api>
    <api id="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <topicdata group="api" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.AsDataView" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e99bca8d-5865-259f-9ff6-588109ca107a" />
    </api>
    <api id="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="AsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.DataRow" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="44344b23-a5d2-75ff-e696-b964098bf5f7" />
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="71099494-48d9-fb65-3a4d-f3c1c4f5dc1b" />
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e6e1566f-460d-c42a-941a-fc927a781565" />
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="81ba4134-6008-18d5-6523-87820864f89b" />
    </api>
    <api id="T:System.Data.DataTableNewRowEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="f8ee9c02-ee0d-3aea-edf9-d9094e22a07a" />
    </api>
    <api id="AllMembers.T:System.Data.DataTableNewRowEventArgs">
      <topicdata name="DataTableNewRowEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)" />
        <element api="P:System.Data.DataTableNewRowEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" />
      </containers>
      <file name="e6b365d6-9967-2cb0-882d-dc00b782b574" />
    </api>
    <api id="Methods.T:System.Data.DataTableNewRowEventArgs">
      <topicdata name="DataTableNewRowEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" />
      </containers>
      <file name="f1575f9e-01b8-2419-54e5-2e9fb938c87b" />
    </api>
    <api id="Properties.T:System.Data.DataTableNewRowEventArgs">
      <topicdata name="DataTableNewRowEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataTableNewRowEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" />
      </containers>
      <file name="a759fe99-310b-e7c9-34ab-eca9f01d4c1a" />
    </api>
    <api id="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </containers>
      <file name="ac744a16-8613-cd07-c927-e3a0b5b27f7f" />
    </api>
    <api id="P:System.Data.DataTableNewRowEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </containers>
      <file name="388343f3-bff4-a068-b0dd-a9a0b7d0fe2d" />
    </api>
    <api id="T:System.Data.DataTableNewRowEventHandler">
      <topicdata group="api" />
      <apidata name="DataTableNewRowEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="6acbd857-5f93-c246-ef9c-643e815a7212" />
    </api>
    <api id="T:System.Data.DataTableReader">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="cbcef019-ea2a-ab2f-a96f-d4479870f5e8" />
    </api>
    <api id="AllMembers.T:System.Data.DataTableReader">
      <topicdata name="DataTableReader" group="list" subgroup="members" typeTopicId="T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataTableReader.#ctor">
          <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
        </element>
        <element api="M:System.Data.DataTableReader.Close" />
        <element api="P:System.Data.DataTableReader.Depth" />
        <element api="P:System.Data.DataTableReader.FieldCount" />
        <element api="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetByte(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChar(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetEnumerator" />
        <element api="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.GetSchemaTable" />
        <element api="M:System.Data.DataTableReader.GetString(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValues(System.Object[])" />
        <element api="P:System.Data.DataTableReader.HasRows" />
        <element api="P:System.Data.DataTableReader.IsClosed" />
        <element api="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.Item">
          <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
          <element api="P:System.Data.DataTableReader.Item(System.String)" />
        </element>
        <element api="M:System.Data.DataTableReader.NextResult" />
        <element api="M:System.Data.DataTableReader.Read" />
        <element api="P:System.Data.DataTableReader.RecordsAffected" />
        <element api="M:System.Data.Common.DbDataReader.Dispose" />
        <element api="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.GetFieldValueAsync">
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.IsDBNullAsync">
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.NextResultAsync">
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync" />
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.ReadAsync">
          <element api="M:System.Data.Common.DbDataReader.ReadAsync" />
          <element api="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
        <element api="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" />
      </containers>
      <file name="8b14f353-6d30-9fad-85b3-1e98ef2c0e7c" />
    </api>
    <api id="Methods.T:System.Data.DataTableReader">
      <topicdata name="DataTableReader" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.DataTableReader.Close" />
        <element api="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetByte(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChar(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetEnumerator" />
        <element api="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.GetSchemaTable" />
        <element api="M:System.Data.DataTableReader.GetString(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
        <element api="M:System.Data.DataTableReader.NextResult" />
        <element api="M:System.Data.DataTableReader.Read" />
        <element api="M:System.Data.Common.DbDataReader.Dispose" />
        <element api="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.GetFieldValueAsync">
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.IsDBNullAsync">
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.NextResultAsync">
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync" />
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.ReadAsync">
          <element api="M:System.Data.Common.DbDataReader.ReadAsync" />
          <element api="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" />
      </containers>
      <file name="60de865a-d5c6-2dda-6eda-7c12f214f100" />
    </api>
    <api id="Properties.T:System.Data.DataTableReader">
      <topicdata name="DataTableReader" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataTableReader.Depth" />
        <element api="P:System.Data.DataTableReader.FieldCount" />
        <element api="P:System.Data.DataTableReader.HasRows" />
        <element api="P:System.Data.DataTableReader.IsClosed" />
        <element api="Overload:System.Data.DataTableReader.Item">
          <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
          <element api="P:System.Data.DataTableReader.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataTableReader.RecordsAffected" />
        <element api="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" />
      </containers>
      <file name="61301a93-5c1f-6bdc-e9f4-3f15f993469c" />
    </api>
    <api id="Overload:System.Data.DataTableReader.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableReader" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="325af031-bfe6-1727-e614-cb0ada890f60" />
    </api>
    <api id="Overload:System.Data.DataTableReader.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataTableReader" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
        <element api="P:System.Data.DataTableReader.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="6ccacc23-8afe-3c42-2b5b-16e82933397f" />
    </api>
    <api id="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTableReader.#ctor" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="d940e3e8-0a90-d20b-8198-c9f5077871ec" />
    </api>
    <api id="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTableReader.#ctor" />
      <parameters>
        <parameter name="dataTables">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="9d7a8f4a-4727-a8d9-fc4c-abb5424b0596" />
    </api>
    <api id="M:System.Data.DataTableReader.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.Close">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Data.IDataReader.Close">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="561338b3-4d9f-ee73-02e7-95a14c623fa1" />
    </api>
    <api id="P:System.Data.DataTableReader.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Depth">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.Depth">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="ce0a6e8c-beef-75f4-c2d0-917b78340c86" />
    </api>
    <api id="P:System.Data.DataTableReader.FieldCount">
      <topicdata group="api" />
      <apidata name="FieldCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.FieldCount">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_FieldCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.FieldCount">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="dbd0c1a6-cd57-8391-7262-bcd31813a138" />
    </api>
    <api id="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="739b8d21-8870-3770-41b2-2ef5e0c17a28" />
    </api>
    <api id="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetByte(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="060b2a91-f67d-2591-e9c0-05cf714ac6a1" />
    </api>
    <api id="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dataIndex">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="7d1189b4-a5ac-0b18-3c08-b4fdaa2f61c7" />
    </api>
    <api id="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetChar(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="746d2a75-9a8a-7103-e21a-59a5fa2c9cce" />
    </api>
    <api id="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dataIndex">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="8700642e-ce26-41e8-7e0c-8ad72e020dd2" />
    </api>
    <api id="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="2ba7bc1e-de85-da64-2b29-0c90adbdff76" />
    </api>
    <api id="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="3f379e19-d329-daa5-6a67-50b16ed4db3d" />
    </api>
    <api id="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="3381db1d-ff8a-0a5e-ee81-267c08a0cd37" />
    </api>
    <api id="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDouble" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDouble(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="5c190edf-1912-c33e-c93e-0a4a87ee3215" />
    </api>
    <api id="M:System.Data.DataTableReader.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetEnumerator">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="65e9492e-02e2-6d06-b2a7-29ac14193536" />
    </api>
    <api id="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="170618fe-31f8-7e65-dec9-de70a6dd3f95" />
    </api>
    <api id="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFloat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetFloat(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="31bce70d-589b-8ddb-a62d-013f977b5faf" />
    </api>
    <api id="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetGuid(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="04bc3dc5-47a1-b4e3-73d5-72725ec7d3f3" />
    </api>
    <api id="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt16" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt16(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="6502fd0b-e509-496e-0dbf-b5412a83b886" />
    </api>
    <api id="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt32" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt32(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="e9ff21d8-534e-3bb8-a295-67c5904db396" />
    </api>
    <api id="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt64(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="6897f590-a182-530b-e4be-b552df5f060f" />
    </api>
    <api id="M:System.Data.DataTableReader.GetName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetName(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="e7a9d2ab-548f-25bf-4a72-342fda3752d0" />
    </api>
    <api id="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <topicdata group="api" />
      <apidata name="GetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetOrdinal(System.String)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="37aedba5-3e1c-b19b-492a-65c443947ca7" />
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="4f4c1899-c4e9-b94d-26a8-b6c9f7e1cdd7" />
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="d55fa274-918e-1f93-4ba5-e11b8f3580a8" />
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="65e45e33-78e9-837f-89f4-36ee7e3855c2" />
    </api>
    <api id="M:System.Data.DataTableReader.GetSchemaTable">
      <topicdata group="api" />
      <apidata name="GetSchemaTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetSchemaTable">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.GetSchemaTable">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="cdbb1391-479a-3b2f-0588-c7595c3386c5" />
    </api>
    <api id="M:System.Data.DataTableReader.GetString(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetString(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="c22454f8-70b6-4cc9-bed7-e696187f6e1e" />
    </api>
    <api id="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetValue(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="766da0f2-7942-4930-73ff-d62965365ad4" />
    </api>
    <api id="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetValues(System.Object[])">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="12c2879e-117b-84c5-5b61-13bef586fe4a" />
    </api>
    <api id="P:System.Data.DataTableReader.HasRows">
      <topicdata group="api" />
      <apidata name="HasRows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.HasRows">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="93a65435-be4a-7ccd-a5e1-dca32f879c18" />
    </api>
    <api id="P:System.Data.DataTableReader.IsClosed">
      <topicdata group="api" />
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.IsClosed">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.IsClosed">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="54674417-3cf0-a007-031d-98158dd5eed6" />
    </api>
    <api id="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsDBNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="e0459afb-28a5-3fb3-6cc4-94b968026e2e" />
    </api>
    <api id="P:System.Data.DataTableReader.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Item(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.Item(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="e11d12b5-604a-d49f-37d6-2f3fb74ceaa6" />
    </api>
    <api id="P:System.Data.DataTableReader.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Item(System.String)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.Item(System.String)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="6dab307c-b423-ee88-31fb-551b41ed0f3d" />
    </api>
    <api id="M:System.Data.DataTableReader.NextResult">
      <topicdata group="api" />
      <apidata name="NextResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.NextResult">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.NextResult">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="3ff6363d-4f91-f7c2-d7e2-31b13ffae975" />
    </api>
    <api id="M:System.Data.DataTableReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.Read">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.Read">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="b100d1c7-8da1-6ab7-8c9d-9a369168146d" />
    </api>
    <api id="P:System.Data.DataTableReader.RecordsAffected">
      <topicdata group="api" />
      <apidata name="RecordsAffected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.RecordsAffected">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RecordsAffected" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.RecordsAffected">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
      <file name="b3dc0360-c74e-6034-b281-52cb85dcc3d5" />
    </api>
    <api id="T:System.Data.DataView">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Table</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PositionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataSourceEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d5750636-805e-e723-3788-e533da11b505" />
    </api>
    <api id="AllMembers.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="members" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="Overload:System.Data.DataView.Equals">
          <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.DataView.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataView.#ctor">
          <element api="M:System.Data.DataView.#ctor" />
          <element api="M:System.Data.DataView.#ctor(System.Data.DataTable)" />
          <element api="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataView.AddNew" />
        <element api="P:System.Data.DataView.AllowDelete" />
        <element api="P:System.Data.DataView.AllowEdit" />
        <element api="P:System.Data.DataView.AllowNew" />
        <element api="P:System.Data.DataView.ApplyDefaultSort" />
        <element api="M:System.Data.DataView.BeginInit" />
        <element api="M:System.Data.DataView.Close" />
        <element api="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataView.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Data.DataView.Count" />
        <element api="P:System.Data.DataView.DataViewManager" />
        <element api="M:System.Data.DataView.Delete(System.Int32)" />
        <element api="M:System.Data.DataView.EndInit" />
        <element api="Overload:System.Data.DataView.Find">
          <element api="M:System.Data.DataView.Find(System.Object)" />
          <element api="M:System.Data.DataView.Find(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataView.FindRows">
          <element api="M:System.Data.DataView.FindRows(System.Object)" />
          <element api="M:System.Data.DataView.FindRows(System.Object[])" />
        </element>
        <element api="M:System.Data.DataView.GetEnumerator" />
        <element api="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)" />
        <element api="E:System.Data.DataView.Initialized" />
        <element api="P:System.Data.DataView.IsInitialized" />
        <element api="P:System.Data.DataView.IsOpen" />
        <element api="P:System.Data.DataView.Item(System.Int32)" />
        <element api="E:System.Data.DataView.ListChanged" />
        <element api="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.Open" />
        <element api="M:System.Data.DataView.Reset" />
        <element api="P:System.Data.DataView.RowFilter" />
        <element api="P:System.Data.DataView.RowStateFilter" />
        <element api="P:System.Data.DataView.Sort" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Data.DataView.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="P:System.Data.DataView.Table" />
        <element api="Overload:System.Data.DataView.ToTable">
          <element api="M:System.Data.DataView.ToTable" />
          <element api="M:System.Data.DataView.ToTable(System.String)" />
          <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
          <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
        </element>
        <element api="Overload:System.Data.DataView.UpdateIndex">
          <element api="M:System.Data.DataView.UpdateIndex" />
          <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
      <file name="0e9d7853-c90b-89a2-e149-247fad4c8326" />
    </api>
    <api id="Methods.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="Overload:System.Data.DataView.Equals">
          <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataView.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataView.AddNew" />
        <element api="M:System.Data.DataView.BeginInit" />
        <element api="M:System.Data.DataView.Close" />
        <element api="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataView.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataView.Delete(System.Int32)" />
        <element api="M:System.Data.DataView.EndInit" />
        <element api="Overload:System.Data.DataView.Find">
          <element api="M:System.Data.DataView.Find(System.Object)" />
          <element api="M:System.Data.DataView.Find(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataView.FindRows">
          <element api="M:System.Data.DataView.FindRows(System.Object)" />
          <element api="M:System.Data.DataView.FindRows(System.Object[])" />
        </element>
        <element api="M:System.Data.DataView.GetEnumerator" />
        <element api="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.Open" />
        <element api="M:System.Data.DataView.Reset" />
        <element api="M:System.Data.DataView.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="Overload:System.Data.DataView.ToTable">
          <element api="M:System.Data.DataView.ToTable" />
          <element api="M:System.Data.DataView.ToTable(System.String)" />
          <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
          <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
        </element>
        <element api="Overload:System.Data.DataView.UpdateIndex">
          <element api="M:System.Data.DataView.UpdateIndex" />
          <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
      <file name="87842eed-df9e-f15b-5f55-875f2e66b7a1" />
    </api>
    <api id="Properties.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataView.AllowDelete" />
        <element api="P:System.Data.DataView.AllowEdit" />
        <element api="P:System.Data.DataView.AllowNew" />
        <element api="P:System.Data.DataView.ApplyDefaultSort" />
        <element api="P:System.Data.DataView.Count" />
        <element api="P:System.Data.DataView.DataViewManager" />
        <element api="P:System.Data.DataView.IsInitialized" />
        <element api="P:System.Data.DataView.IsOpen" />
        <element api="P:System.Data.DataView.Item(System.Int32)" />
        <element api="P:System.Data.DataView.RowFilter" />
        <element api="P:System.Data.DataView.RowStateFilter" />
        <element api="P:System.Data.DataView.Sort" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering" />
        <element api="P:System.Data.DataView.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
      <file name="cf0bb604-fd25-8c7c-d47b-be66446a7f5d" />
    </api>
    <api id="Events.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Events" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataView.Initialized" />
        <element api="E:System.Data.DataView.ListChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
      <file name="a7a54840-5406-c8ba-f3ed-286a8bdf637a" />
    </api>
    <api id="Overload:System.Data.DataView.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
        <element api="M:System.Object.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="c55a9b7a-0700-bab5-39d6-c318e3bedcd1" />
    </api>
    <api id="Overload:System.Data.DataView.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
        <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="80585dcf-38ee-108c-5fbf-949fa1c88a05" />
    </api>
    <api id="Overload:System.Data.DataView.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataView.#ctor" />
        <element api="M:System.Data.DataView.#ctor(System.Data.DataTable)" />
        <element api="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="aafa1c10-803f-9e87-b28e-0e525d955bb7" />
    </api>
    <api id="Overload:System.Data.DataView.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.Find(System.Object)" />
        <element api="M:System.Data.DataView.Find(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="154c6311-1c8a-fdbc-d3ed-06a7ae9affca" />
    </api>
    <api id="Overload:System.Data.DataView.FindRows">
      <topicdata name="FindRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.FindRows(System.Object)" />
        <element api="M:System.Data.DataView.FindRows(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="1f0c5e0b-c9ff-08d2-a933-3fbe3124a372" />
    </api>
    <api id="Overload:System.Data.DataView.ToTable">
      <topicdata name="ToTable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.ToTable" />
        <element api="M:System.Data.DataView.ToTable(System.String)" />
        <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
        <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="4a7342b6-7628-1c6c-0513-5970487a97b1" />
    </api>
    <api id="Overload:System.Data.DataView.UpdateIndex">
      <topicdata name="UpdateIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataView" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.UpdateIndex" />
        <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="302586f8-8184-82cc-e735-a92ff87c4586" />
    </api>
    <api id="M:System.Data.DataView.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="d364b9fe-3863-5357-742f-41efa522f7f7" />
    </api>
    <api id="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="781c249f-3195-4810-1396-85df4d778bf9" />
    </api>
    <api id="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="RowFilter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Sort">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="RowState">
          <type api="T:System.Data.DataViewRowState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="9dbc9c4f-877f-b435-96f5-ff9171fbddda" />
    </api>
    <api id="M:System.Data.DataView.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataRowView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="21832d4d-9f6d-4ffd-e8fd-827c3329c041" />
    </api>
    <api id="P:System.Data.DataView.AllowDelete">
      <topicdata group="api" />
      <apidata name="AllowDelete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDelete" />
      <setter name="set_AllowDelete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="263135d0-28ac-7a7e-fbb4-e2270441495a" />
    </api>
    <api id="P:System.Data.DataView.AllowEdit">
      <topicdata group="api" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowEdit" />
      <setter name="set_AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9fe1a2fa-dac3-9a06-3b06-a5203c77b0bc" />
    </api>
    <api id="P:System.Data.DataView.AllowNew">
      <topicdata group="api" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowNew" />
      <setter name="set_AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="422798e8-a5dd-92e4-f1f1-188ab877e96b" />
    </api>
    <api id="P:System.Data.DataView.ApplyDefaultSort">
      <topicdata group="api" />
      <apidata name="ApplyDefaultSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyDefaultSort" />
      <setter name="set_ApplyDefaultSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="89871e44-a00e-dd71-313d-1238452da9f8" />
    </api>
    <api id="M:System.Data.DataView.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="869009c8-d06c-811b-deaa-3feddef53b83" />
    </api>
    <api id="M:System.Data.DataView.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ec383987-4424-fdbc-7a61-8967e9d8ed72" />
    </api>
    <api id="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="ColumnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="2bc0c81b-c51b-de02-9594-c1059c000aae" />
    </api>
    <api id="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="51590ab2-6f84-b153-2c56-fe00c4dbf70e" />
    </api>
    <api id="P:System.Data.DataView.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b2f1af44-db76-e745-ad41-e5c05d5ed0d6" />
    </api>
    <api id="P:System.Data.DataView.DataViewManager">
      <topicdata group="api" />
      <apidata name="DataViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="34a13df5-1625-eb44-ae56-afe7cbdc01cb" />
    </api>
    <api id="M:System.Data.DataView.Delete(System.Int32)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ff93a0db-0ae3-24f8-7432-2eb34bc44e08" />
    </api>
    <api id="M:System.Data.DataView.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="381e0c52-2fd3-4b44-69e6-8adad3cf2dfc" />
    </api>
    <api id="M:System.Data.DataView.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="929a362c-9a7a-71bb-bb2f-abba1169db1c" />
    </api>
    <api id="M:System.Data.DataView.Equals(System.Data.DataView)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Equals" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="view">
          <type api="T:System.Data.DataView" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="af324c4e-7cc4-81d5-2c02-8f850c6d5a84" />
    </api>
    <api id="M:System.Data.DataView.Find(System.Object)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="eb81076a-b627-feb4-3a1a-bc284020ec04" />
    </api>
    <api id="M:System.Data.DataView.Find(System.Object[])">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ea898af7-ec7b-14e7-0ca4-abcc451d6ec1" />
    </api>
    <api id="M:System.Data.DataView.FindRows(System.Object)">
      <topicdata group="api" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.FindRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRowView" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ce08e815-e775-6ce4-80fa-e055fe222e95" />
    </api>
    <api id="M:System.Data.DataView.FindRows(System.Object[])">
      <topicdata group="api" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.FindRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRowView" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="704cc547-ef81-9616-b57d-5a37fb187dc7" />
    </api>
    <api id="M:System.Data.DataView.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="8811384d-c7f7-83bc-5455-6be98d255e3f" />
    </api>
    <api id="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="IndexListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="4722e9a5-1060-7d06-f685-a9c45cac42f2" />
    </api>
    <api id="E:System.Data.DataView.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="fb7c578e-8f05-69cb-06e4-aede66ec810a" />
    </api>
    <api id="P:System.Data.DataView.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a1656e12-470c-5bc2-6a7b-0abae584e913" />
    </api>
    <api id="P:System.Data.DataView.IsOpen">
      <topicdata group="api" />
      <apidata name="IsOpen" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOpen" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="842e382b-5750-d5e8-fdaa-638ec223504d" />
    </api>
    <api id="P:System.Data.DataView.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="recordIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRowView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ae97299e-a506-cc27-436e-fc8f4bea06d7" />
    </api>
    <api id="E:System.Data.DataView.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IBindingList.ListChanged">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="fd9f7019-05eb-98bf-20c3-0ece4d727628" />
    </api>
    <api id="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="dfc6edbc-13dc-0d6a-d947-dd4609705641" />
    </api>
    <api id="M:System.Data.DataView.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="d8b82ed3-5b97-2260-fc78-040ffd9c5757" />
    </api>
    <api id="M:System.Data.DataView.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="633a603f-b719-5c6b-6c8d-2f8cfac16d51" />
    </api>
    <api id="P:System.Data.DataView.RowFilter">
      <topicdata group="api" />
      <apidata name="RowFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RowFilter" />
      <setter name="set_RowFilter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="9e5b5154-8539-5107-cc96-53b6aea31f52" />
    </api>
    <api id="P:System.Data.DataView.RowStateFilter">
      <topicdata group="api" />
      <apidata name="RowStateFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowStateFilter" />
      <setter name="set_RowStateFilter" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.DataViewRowState" ref="false" />
            <enumValue>
              <field name="CurrentRows" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a9149019-25b5-8f22-68bb-e3a8b04da5fb" />
    </api>
    <api id="P:System.Data.DataView.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="b8a9d2fc-1658-bebf-95b1-fc723c1dede1" />
    </api>
    <api id="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="2ee6441f-37ac-787c-2472-42585e126b4e" />
    </api>
    <api id="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ff1b5676-ce74-3d97-939e-4b84b1dce94c" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="e6db568a-8538-fa1d-f90b-066194e43460" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="df3d9abc-600b-6aca-2e33-e00a91b81e94" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="791d6dcb-9112-9707-a490-52dfe0d002ba" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="1259fb60-c5aa-a284-de2b-917796abbadf" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="082b45ef-420b-e6f1-98a8-0f0f1027eeb8" />
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="4f55d231-e1d9-a398-a084-3f5eff4d4fa8" />
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="7622ae1a-467e-3661-c395-fd0bad347e6c" />
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="recordIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ad3305f5-5781-f514-6434-99c91b3e6660" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="dd5ad457-e259-488d-194d-69ef1585d2bc" />
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="210092ba-8894-b57b-44a7-396636e95b0d" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.AddIndex" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="2351803b-4429-6442-8896-1346f236d758" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <topicdata group="api" eiiName="IBindingList.AddNew" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="8b81ddfb-17bd-1a89-6d9b-2f50ad15d576" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <topicdata group="api" eiiName="IBindingList.AllowEdit" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowEdit">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="12c7732a-855d-11a3-80a8-e667f177288e" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <topicdata group="api" eiiName="IBindingList.AllowNew" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="86acac78-98c4-227c-3886-e6da3406dbc0" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <topicdata group="api" eiiName="IBindingList.AllowRemove" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowRemove">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="976c0f67-71b0-c944-19dd-b07a0f15a000" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" eiiName="IBindingList.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="18a949e4-fa0a-bb2c-ef5d-f7347a0d4085" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" eiiName="IBindingList.Find" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="b926d0f5-3f74-a7f8-ee6b-531303045fba" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <topicdata group="api" eiiName="IBindingList.IsSorted" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.IsSorted">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="a5b2c0a3-9eef-a26c-e30b-be0314f9334b" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.RemoveIndex" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="a54939ab-d236-21bb-ba48-0a408af9af4f" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <topicdata group="api" eiiName="IBindingList.RemoveSort" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveSort">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="3e42d104-c686-5911-8b15-13613f468480" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <topicdata group="api" eiiName="IBindingList.SortDirection" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortDirection">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="0a749bf8-66cc-2ece-3e35-07cb490893ce" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <topicdata group="api" eiiName="IBindingList.SortProperty" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortProperty">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="c93e468d-bdab-18c2-a7d1-412f4445a705" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <topicdata group="api" eiiName="IBindingList.SupportsChangeNotification" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="de49e927-d40e-a36a-ff92-ea686d4ac876" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <topicdata group="api" eiiName="IBindingList.SupportsSearching" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSearching">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="b4d56366-577a-fa89-c5b4-fa169ba1775e" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <topicdata group="api" eiiName="IBindingList.SupportsSorting" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSorting">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="0e94d278-dec9-3c69-be2b-914c3cc24a60" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <topicdata group="api" eiiName="IBindingListView.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sorts">
          <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="6e6146c1-6811-df45-8381-429a78afd318" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <topicdata group="api" eiiName="IBindingListView.Filter" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ComponentModel.IBindingListView.Filter" />
      <setter name="set_System.ComponentModel.IBindingListView.Filter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.Filter">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="0d8978d5-3c8b-ecd4-eb5f-67208cb77237" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <topicdata group="api" eiiName="IBindingListView.RemoveFilter" />
      <apidata name="RemoveFilter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingListView.RemoveFilter">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="356cff10-7da3-f91d-2455-c0ff1cc6d50d" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <topicdata group="api" eiiName="IBindingListView.SortDescriptions" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SortDescriptions">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="a646014d-2332-cb0a-4043-5103dcb2772c" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <topicdata group="api" eiiName="IBindingListView.SupportsAdvancedSorting" />
      <apidata name="SupportsAdvancedSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="667d72ba-7d3f-5c7a-6b07-a0a27a072b16" />
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <topicdata group="api" eiiName="IBindingListView.SupportsFiltering" />
      <apidata name="SupportsFiltering" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SupportsFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SupportsFiltering">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="ccee0e7a-f662-ea17-c28e-ad970dfad033" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetItemProperties" />
      <apidata name="GetItemProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="4434321a-7c3d-5308-5d3e-c48b96f07daf" />
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetListName" />
      <apidata name="GetListName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="4bb20af6-ed81-da5d-818a-07106fb39758" />
    </api>
    <api id="P:System.Data.DataView.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Table" />
      <setter name="set_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="c42a8aca-5ad8-9c2e-102b-b3dd489705e0" />
    </api>
    <api id="M:System.Data.DataView.ToTable">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="3c2c3e8d-b004-d69e-59a9-c375f53262a3" />
    </api>
    <api id="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="distinct">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="columnNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="27952e9d-51cd-04b9-60de-3557aa159cba" />
    </api>
    <api id="M:System.Data.DataView.ToTable(System.String)">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="0a3ebce5-3ef5-3596-ff15-42b2a3aec6bd" />
    </api>
    <api id="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="distinct">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="columnNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="7986e6b1-d634-331f-025f-a83872cfe71c" />
    </api>
    <api id="M:System.Data.DataView.UpdateIndex">
      <topicdata group="api" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.UpdateIndex" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="3c1803d1-8df7-eb33-a579-153392087fa6" />
    </api>
    <api id="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <topicdata group="api" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.UpdateIndex" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <file name="18ca7d36-c73d-470c-d384-0d9769a9e189" />
    </api>
    <api id="T:System.Data.DataViewManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="93879021-3284-4500-d0e7-33e75078bc44" />
    </api>
    <api id="AllMembers.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="members" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.DataViewManager.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewManager.#ctor">
          <element api="M:System.Data.DataViewManager.#ctor" />
          <element api="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)" />
        </element>
        <element api="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)" />
        <element api="P:System.Data.DataViewManager.DataSet" />
        <element api="P:System.Data.DataViewManager.DataViewSettingCollectionString" />
        <element api="P:System.Data.DataViewManager.DataViewSettings" />
        <element api="E:System.Data.DataViewManager.ListChanged" />
        <element api="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#Count" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
      <file name="761708c4-bd07-3741-2521-4f185506f7d6" />
    </api>
    <api id="Methods.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DataViewManager.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)" />
        <element api="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
      <file name="d148dd42-03b4-9337-b9e7-56724cb1b08a" />
    </api>
    <api id="Properties.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataViewManager.DataSet" />
        <element api="P:System.Data.DataViewManager.DataViewSettingCollectionString" />
        <element api="P:System.Data.DataViewManager.DataViewSettings" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#Count" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
      <file name="2453789e-f3fd-9157-0fb0-83e202d85ada" />
    </api>
    <api id="Events.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Events" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataViewManager.ListChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
      <file name="486e4488-0b03-3280-01fd-f0316054796b" />
    </api>
    <api id="Overload:System.Data.DataViewManager.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataViewManager" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataViewManager.#ctor" />
        <element api="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="cdfd1318-4a16-3e64-692f-b134d456a156" />
    </api>
    <api id="M:System.Data.DataViewManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataViewManager.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="9a8727ce-ece7-b520-e08e-7e3cae0a5360" />
    </api>
    <api id="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataViewManager.#ctor" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="236df60f-b45a-a4dc-f974-04b753b16b4e" />
    </api>
    <api id="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="CreateDataView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="7d3db4e0-6ed3-baf5-981e-957307e8410d" />
    </api>
    <api id="P:System.Data.DataViewManager.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSet" />
      <setter name="set_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="dc9c1cc7-4cd9-504c-5e27-fb1119390afd" />
    </api>
    <api id="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <topicdata group="api" />
      <apidata name="DataViewSettingCollectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataViewSettingCollectionString" />
      <setter name="set_DataViewSettingCollectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="d9fc2802-b7e4-7f29-f25b-3221bf7c4ade" />
    </api>
    <api id="P:System.Data.DataViewManager.DataViewSettings">
      <topicdata group="api" />
      <apidata name="DataViewSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewSettings" />
      <returns>
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1311eadd-35e4-feea-cfeb-d79817c0a21f" />
    </api>
    <api id="E:System.Data.DataViewManager.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IBindingList.ListChanged">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="4c9c3776-98fb-e081-bd4f-159279ada200" />
    </api>
    <api id="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="08454414-f026-bd5d-52b7-bc066dd3ff5d" />
    </api>
    <api id="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="RelationCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="bb79612c-d050-af62-ff5a-2ab2874c4bdf" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="26ae2e44-7ceb-dc0e-73c5-fd0dcf94308b" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="c06e3eb1-db43-f674-5d20-5be2182aafe9" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="1ca77a62-2f41-0295-65a9-db311e9109ec" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="228d3b00-c049-be91-c07a-7006fbea8af3" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="8d29a813-bfca-91f5-dbb6-9a283579ebae" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="aa10a3ff-8576-7ee1-0ae3-1d8ae8af6845" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="17409b64-92ff-ea79-ebc3-fa08bc412ab3" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="af03c144-de6f-3fd2-20dd-fa320c6f13ab" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="fad80586-f907-3f37-6ad2-1d66c47d63c1" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="d5158489-6f98-a2b7-e1ee-5859642f71cc" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="5f489e77-7170-84b3-e71d-12c7fd1a1b3a" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="1b314243-9ad8-0a71-9686-0a0d4ecf94a4" />
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="efa06680-abdd-d535-6244-442753811fa3" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="ebb8da55-169f-d983-b417-e57d7b2e1500" />
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="20909678-a62a-1bdb-b62e-03ccc0198811" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.AddIndex" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="f9f457fb-5562-1cc4-ef62-5111a6a77932" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <topicdata group="api" eiiName="IBindingList.AddNew" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="bfdb4526-e1f6-212a-f196-72fb0bf28b90" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <topicdata group="api" eiiName="IBindingList.AllowEdit" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowEdit">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="b44f0ede-18ac-9c22-3d74-9ebb93a66973" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <topicdata group="api" eiiName="IBindingList.AllowNew" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="af4f546b-97f0-2e44-9a08-a5fcd062ab65" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <topicdata group="api" eiiName="IBindingList.AllowRemove" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowRemove">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="03ea6813-ef23-e5d8-2669-3dd039c471f0" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" eiiName="IBindingList.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="5da5c3a1-c18e-286c-8c9a-0b9164e5a173" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" eiiName="IBindingList.Find" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="12f60290-0884-cfd5-dca7-2156022816dc" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <topicdata group="api" eiiName="IBindingList.IsSorted" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.IsSorted">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="3c7facac-dd7e-f86e-9ff3-0656943608c2" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.RemoveIndex" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="05e40049-b363-a44d-0811-12311e43ab9a" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <topicdata group="api" eiiName="IBindingList.RemoveSort" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveSort">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="9e0452ba-e179-da83-6e81-2eb23616b1c4" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <topicdata group="api" eiiName="IBindingList.SortDirection" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortDirection">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="cb93bdb0-d9fc-e383-1417-9bee2dae23f4" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <topicdata group="api" eiiName="IBindingList.SortProperty" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortProperty">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="0c756275-8fb3-bbf2-f2a9-d4a531b93f63" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <topicdata group="api" eiiName="IBindingList.SupportsChangeNotification" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="10b2fa39-819f-0076-dc56-c5f6e929f928" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <topicdata group="api" eiiName="IBindingList.SupportsSearching" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSearching">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="5c868fe8-6c9f-09e4-3662-066af4166f7f" />
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <topicdata group="api" eiiName="IBindingList.SupportsSorting" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSorting">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="a8ae3940-8282-1ec6-3acd-07a94e97fe5d" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetItemProperties" />
      <apidata name="GetItemProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="f1005229-f3f0-b77f-032a-bdcad85dcc2c" />
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetListName" />
      <apidata name="GetListName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="5b87a0c5-707c-c6a2-2fac-ad01e3cfdbaa" />
    </api>
    <api id="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="TableCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <file name="133a7b2d-033c-412d-40ff-b1377d5055ff" />
    </api>
    <api id="T:System.Data.DataViewRowState">
      <topicdata group="api" />
      <apidata name="DataViewRowState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataViewRowState.None" />
        <element api="F:System.Data.DataViewRowState.Unchanged" />
        <element api="F:System.Data.DataViewRowState.Added" />
        <element api="F:System.Data.DataViewRowState.Deleted" />
        <element api="F:System.Data.DataViewRowState.ModifiedCurrent" />
        <element api="F:System.Data.DataViewRowState.ModifiedOriginal" />
        <element api="F:System.Data.DataViewRowState.OriginalRows" />
        <element api="F:System.Data.DataViewRowState.CurrentRows" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataViewRowStateEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="382a23d1-7cb4-b66a-b838-dadd11d4d20e" />
    </api>
    <api id="F:System.Data.DataViewRowState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="2ceca93d-32d4-5919-db3f-e1d7196a7d23" />
    </api>
    <api id="F:System.Data.DataViewRowState.CurrentRows">
      <topicdata group="api" notopic="" />
      <apidata name="CurrentRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="e4bef829-78fc-1043-09a7-95756412de8c" />
    </api>
    <api id="F:System.Data.DataViewRowState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="5a9b6a1e-ad4d-3475-ae1c-8de4f28fb9cd" />
    </api>
    <api id="F:System.Data.DataViewRowState.ModifiedCurrent">
      <topicdata group="api" notopic="" />
      <apidata name="ModifiedCurrent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="d91b394c-2308-82e2-ba07-8eee8d9fa711" />
    </api>
    <api id="F:System.Data.DataViewRowState.ModifiedOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ModifiedOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="7e6e6dbe-b093-648a-c95f-211b9fe56c8a" />
    </api>
    <api id="F:System.Data.DataViewRowState.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="4dcd33de-e3dc-5272-da32-39fa3a6bef8b" />
    </api>
    <api id="F:System.Data.DataViewRowState.OriginalRows">
      <topicdata group="api" notopic="" />
      <apidata name="OriginalRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>42</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="d5d9a5f6-153e-f353-70e5-db59c54f8b13" />
    </api>
    <api id="F:System.Data.DataViewRowState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
      <file name="769497fa-e4de-6d67-91bd-8461a9d9a7f8" />
    </api>
    <api id="T:System.Data.DataViewSetting">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1fe81bf1-0350-97d4-7284-1519f2e36aaf" />
    </api>
    <api id="AllMembers.T:System.Data.DataViewSetting">
      <topicdata name="DataViewSetting" group="list" subgroup="members" typeTopicId="T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataViewSetting.ApplyDefaultSort" />
        <element api="P:System.Data.DataViewSetting.DataViewManager" />
        <element api="P:System.Data.DataViewSetting.RowFilter" />
        <element api="P:System.Data.DataViewSetting.RowStateFilter" />
        <element api="P:System.Data.DataViewSetting.Sort" />
        <element api="P:System.Data.DataViewSetting.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" />
      </containers>
      <file name="4e52510c-dcee-b6e8-0558-3209f35dc3ad" />
    </api>
    <api id="Methods.T:System.Data.DataViewSetting">
      <topicdata name="DataViewSetting" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" />
      </containers>
      <file name="82f19d90-03f4-c380-476c-15299ee8840b" />
    </api>
    <api id="Properties.T:System.Data.DataViewSetting">
      <topicdata name="DataViewSetting" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataViewSetting.ApplyDefaultSort" />
        <element api="P:System.Data.DataViewSetting.DataViewManager" />
        <element api="P:System.Data.DataViewSetting.RowFilter" />
        <element api="P:System.Data.DataViewSetting.RowStateFilter" />
        <element api="P:System.Data.DataViewSetting.Sort" />
        <element api="P:System.Data.DataViewSetting.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" />
      </containers>
      <file name="78859dc9-6773-7f5f-cb07-758fb07f242e" />
    </api>
    <api id="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <topicdata group="api" />
      <apidata name="ApplyDefaultSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyDefaultSort" />
      <setter name="set_ApplyDefaultSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <file name="bea6a43a-17b0-756f-8eff-1c29a58d8a63" />
    </api>
    <api id="P:System.Data.DataViewSetting.DataViewManager">
      <topicdata group="api" />
      <apidata name="DataViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="52f77fd6-3830-ae84-0ce3-32cfc62e82f4" />
    </api>
    <api id="P:System.Data.DataViewSetting.RowFilter">
      <topicdata group="api" />
      <apidata name="RowFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowFilter" />
      <setter name="set_RowFilter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <file name="816abb37-5e2d-e175-73f2-b310234349f5" />
    </api>
    <api id="P:System.Data.DataViewSetting.RowStateFilter">
      <topicdata group="api" />
      <apidata name="RowStateFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowStateFilter" />
      <setter name="set_RowStateFilter" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <file name="4ece434f-906e-602c-3303-293310340785" />
    </api>
    <api id="P:System.Data.DataViewSetting.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <file name="50d0ed2d-4235-2a31-eb82-87fc95c04529" />
    </api>
    <api id="P:System.Data.DataViewSetting.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="01fdc666-5c77-44d9-a3af-02ef5bbaf07e" />
    </api>
    <api id="T:System.Data.DataViewSettingCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataViewSettingsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fe891de9-51ea-b8ed-9d59-0976f4f809e1" />
    </api>
    <api id="AllMembers.T:System.Data.DataViewSettingCollection">
      <topicdata name="DataViewSettingCollection" group="list" subgroup="members" typeTopicId="T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewSettingCollection.CopyTo">
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
        </element>
        <element api="P:System.Data.DataViewSettingCollection.Count" />
        <element api="M:System.Data.DataViewSettingCollection.GetEnumerator" />
        <element api="P:System.Data.DataViewSettingCollection.IsReadOnly" />
        <element api="P:System.Data.DataViewSettingCollection.IsSynchronized" />
        <element api="Overload:System.Data.DataViewSettingCollection.Item">
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataViewSettingCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" />
      </containers>
      <file name="58e2bc25-e681-85aa-722b-a527d92511fd" />
    </api>
    <api id="Methods.T:System.Data.DataViewSettingCollection">
      <topicdata name="DataViewSettingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewSettingCollection.CopyTo">
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataViewSettingCollection.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" />
      </containers>
      <file name="a5d59da7-c528-0aa4-ae00-172db9d8f066" />
    </api>
    <api id="Properties.T:System.Data.DataViewSettingCollection">
      <topicdata name="DataViewSettingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataViewSettingCollection.Count" />
        <element api="P:System.Data.DataViewSettingCollection.IsReadOnly" />
        <element api="P:System.Data.DataViewSettingCollection.IsSynchronized" />
        <element api="Overload:System.Data.DataViewSettingCollection.Item">
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataViewSettingCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" />
      </containers>
      <file name="14343387-675b-a50a-1324-212dc6297e06" />
    </api>
    <api id="Overload:System.Data.DataViewSettingCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataViewSettingCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="887bae79-947c-aa87-2bf7-ce772f30e9f9" />
    </api>
    <api id="Overload:System.Data.DataViewSettingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DataViewSettingCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
        <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="110759e1-58b1-f295-5e55-b14d267309b3" />
    </api>
    <api id="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="17ec4198-85c7-5ff3-cdad-e2d4718cef3a" />
    </api>
    <api id="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ar">
          <arrayOf rank="1">
            <type api="T:System.Data.DataViewSetting" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="623980ab-0342-c52c-89dc-04721745dc94" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="221c22de-a120-0d1f-bbdb-7d4b55862dc9" />
    </api>
    <api id="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="e4268ce0-1f78-668e-db76-6c9468c5eefb" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e9e02e2a-6c5e-78e9-4121-48c30a30c88c" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="706a51a8-576f-6c3c-a6fd-50dc7b4e4c11" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="9b1aed90-5566-cd3f-2cc3-708f681db618" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="23e3d2bb-4252-cc69-5197-b5ca2c55ab37" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <file name="6ccf1b5f-fa36-0b39-fcd3-c7217bbb8361" />
    </api>
    <api id="P:System.Data.DataViewSettingCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8edeca90-781e-027c-d2ad-a354422c3ab3" />
    </api>
    <api id="T:System.Data.DBConcurrencyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="85fd7c17-4f5c-bfab-2834-f07b71a7fd8a" />
    </api>
    <api id="AllMembers.T:System.Data.DBConcurrencyException">
      <topicdata name="DBConcurrencyException" group="list" subgroup="members" typeTopicId="T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.DBConcurrencyException.#ctor">
          <element api="M:System.Data.DBConcurrencyException.#ctor" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String)" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])" />
        </element>
        <element api="Overload:System.Data.DBConcurrencyException.CopyToRows">
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Data.DBConcurrencyException.Row" />
        <element api="P:System.Data.DBConcurrencyException.RowCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" />
      </containers>
      <file name="5bd5bced-f07d-1f8b-5bf9-a9ba0cb2966f" />
    </api>
    <api id="Methods.T:System.Data.DBConcurrencyException">
      <topicdata name="DBConcurrencyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.DBConcurrencyException.CopyToRows">
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" />
      </containers>
      <file name="863421dd-09f8-316d-efe0-61db3576381f" />
    </api>
    <api id="Properties.T:System.Data.DBConcurrencyException">
      <topicdata name="DBConcurrencyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.DBConcurrencyException.Row" />
        <element api="P:System.Data.DBConcurrencyException.RowCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" />
      </containers>
      <file name="5247c28d-158d-6c59-aa4b-1c707bfef92f" />
    </api>
    <api id="Overload:System.Data.DBConcurrencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DBConcurrencyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DBConcurrencyException.#ctor" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String)" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="3ba06766-9d9c-380d-7b2a-be11c2dfe9ad" />
    </api>
    <api id="Overload:System.Data.DBConcurrencyException.CopyToRows">
      <topicdata name="CopyToRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DBConcurrencyException" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
        <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="b0dfd49f-a96c-a6ce-973c-017712b6ba60" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="8209803b-b0fd-87c7-1536-dc66fab8a5f9" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="a9b668bd-c611-c155-ef1e-79e962458e25" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="d24a9e19-7897-ea50-bfd8-eae1c7eca189" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="dataRows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="52489360-df44-93bf-aa93-5875e4cdcf06" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DBConcurrencyException.CopyToRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="5a8c2a59-5e6e-c4d2-e71a-e520ee752a27" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DBConcurrencyException.CopyToRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="4cfb33d4-9489-d61e-bdde-10ff070626e1" />
    </api>
    <api id="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="si">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="039b12dc-ab8a-7df4-ea33-46173d7c87d8" />
    </api>
    <api id="P:System.Data.DBConcurrencyException.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Row" />
      <setter name="set_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="1d3fcd7a-3bde-5832-62af-518c18ee15ae" />
    </api>
    <api id="P:System.Data.DBConcurrencyException.RowCount">
      <topicdata group="api" />
      <apidata name="RowCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
      <file name="e5f862df-8584-e24f-fd1c-db753a3cb388" />
    </api>
    <api id="T:System.Data.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DbType.AnsiString" />
        <element api="F:System.Data.DbType.Binary" />
        <element api="F:System.Data.DbType.Byte" />
        <element api="F:System.Data.DbType.Boolean" />
        <element api="F:System.Data.DbType.Currency" />
        <element api="F:System.Data.DbType.Date" />
        <element api="F:System.Data.DbType.DateTime" />
        <element api="F:System.Data.DbType.Decimal" />
        <element api="F:System.Data.DbType.Double" />
        <element api="F:System.Data.DbType.Guid" />
        <element api="F:System.Data.DbType.Int16" />
        <element api="F:System.Data.DbType.Int32" />
        <element api="F:System.Data.DbType.Int64" />
        <element api="F:System.Data.DbType.Object" />
        <element api="F:System.Data.DbType.SByte" />
        <element api="F:System.Data.DbType.Single" />
        <element api="F:System.Data.DbType.String" />
        <element api="F:System.Data.DbType.Time" />
        <element api="F:System.Data.DbType.UInt16" />
        <element api="F:System.Data.DbType.UInt32" />
        <element api="F:System.Data.DbType.UInt64" />
        <element api="F:System.Data.DbType.VarNumeric" />
        <element api="F:System.Data.DbType.AnsiStringFixedLength" />
        <element api="F:System.Data.DbType.StringFixedLength" />
        <element api="F:System.Data.DbType.Xml" />
        <element api="F:System.Data.DbType.DateTime2" />
        <element api="F:System.Data.DbType.DateTimeOffset" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="15e8db6a-1ac6-1fd4-a8f1-aa0db06d949b" />
    </api>
    <api id="F:System.Data.DbType.AnsiString">
      <topicdata group="api" notopic="" />
      <apidata name="AnsiString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="78d7fb14-3cdf-1ac3-8700-86e49a205cfd" />
    </api>
    <api id="F:System.Data.DbType.AnsiStringFixedLength">
      <topicdata group="api" notopic="" />
      <apidata name="AnsiStringFixedLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="040748f0-43ee-4873-930a-6240ca0016e2" />
    </api>
    <api id="F:System.Data.DbType.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="ac9a5ad0-c364-4499-c821-910aaf86d28e" />
    </api>
    <api id="F:System.Data.DbType.Boolean">
      <topicdata group="api" notopic="" />
      <apidata name="Boolean" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="549ac2e7-8705-5b43-e058-f84f690662e0" />
    </api>
    <api id="F:System.Data.DbType.Byte">
      <topicdata group="api" notopic="" />
      <apidata name="Byte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="400db5e8-c597-d0d7-baed-5f6fb04da745" />
    </api>
    <api id="F:System.Data.DbType.Currency">
      <topicdata group="api" notopic="" />
      <apidata name="Currency" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="382e1bcf-61b3-ee67-5c75-cec054835d57" />
    </api>
    <api id="F:System.Data.DbType.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="dfa5a634-e2da-e6b5-d6bc-a61628ceee32" />
    </api>
    <api id="F:System.Data.DbType.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="049634cd-a742-d1f1-6c1d-ea859be25af6" />
    </api>
    <api id="F:System.Data.DbType.DateTime2">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="20a1d6eb-248b-8d50-3f64-a1d39736a023" />
    </api>
    <api id="F:System.Data.DbType.DateTimeOffset">
      <topicdata group="api" notopic="" />
      <apidata name="DateTimeOffset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="54935f82-02c4-3ef8-f581-5037448de1be" />
    </api>
    <api id="F:System.Data.DbType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="5e4bb347-55da-3f22-6000-16be33860095" />
    </api>
    <api id="F:System.Data.DbType.Double">
      <topicdata group="api" notopic="" />
      <apidata name="Double" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="e8c75567-2516-c069-4373-9753a1ff305d" />
    </api>
    <api id="F:System.Data.DbType.Guid">
      <topicdata group="api" notopic="" />
      <apidata name="Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="bfa768cd-6b4a-ac93-ca56-a69ccbee9cff" />
    </api>
    <api id="F:System.Data.DbType.Int16">
      <topicdata group="api" notopic="" />
      <apidata name="Int16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="1d1a8781-6627-6e0c-c9b2-ea3cafd22b12" />
    </api>
    <api id="F:System.Data.DbType.Int32">
      <topicdata group="api" notopic="" />
      <apidata name="Int32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="544a4f36-1bf3-334c-8ec2-b2f6fe5a9868" />
    </api>
    <api id="F:System.Data.DbType.Int64">
      <topicdata group="api" notopic="" />
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="7cbe20e9-693d-c65a-1846-04c7a36f19d3" />
    </api>
    <api id="F:System.Data.DbType.Object">
      <topicdata group="api" notopic="" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="638ff555-92e8-8550-acf9-8bc4f89cca38" />
    </api>
    <api id="F:System.Data.DbType.SByte">
      <topicdata group="api" notopic="" />
      <apidata name="SByte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="7e07e215-ede0-25fc-10a9-f071d4e70fcc" />
    </api>
    <api id="F:System.Data.DbType.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="4e2af915-042f-9110-04e5-8a69fd3fc870" />
    </api>
    <api id="F:System.Data.DbType.String">
      <topicdata group="api" notopic="" />
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="cece8397-c0a8-7a66-bbcd-40cb4b1f5da9" />
    </api>
    <api id="F:System.Data.DbType.StringFixedLength">
      <topicdata group="api" notopic="" />
      <apidata name="StringFixedLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="fc4c942b-a5e8-df67-38a2-ad8dea3cd61e" />
    </api>
    <api id="F:System.Data.DbType.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="ff3e9481-d05a-173a-9a9e-c3ff5ae7266b" />
    </api>
    <api id="F:System.Data.DbType.UInt16">
      <topicdata group="api" notopic="" />
      <apidata name="UInt16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="cc6a47bc-3ade-e644-0150-ed2da6a72d72" />
    </api>
    <api id="F:System.Data.DbType.UInt32">
      <topicdata group="api" notopic="" />
      <apidata name="UInt32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="adb58100-57d8-fc83-a8d7-29761584c38e" />
    </api>
    <api id="F:System.Data.DbType.UInt64">
      <topicdata group="api" notopic="" />
      <apidata name="UInt64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="d49e7630-9514-6501-e5eb-3188671becbb" />
    </api>
    <api id="F:System.Data.DbType.VarNumeric">
      <topicdata group="api" notopic="" />
      <apidata name="VarNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="ef9e4709-d2a9-b57d-7adf-36ce4928d644" />
    </api>
    <api id="F:System.Data.DbType.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
      <file name="f8003b9d-4eb1-3d46-c78a-6d1e297ede9d" />
    </api>
    <api id="T:System.Data.DeletedRowInaccessibleException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="4731eaa6-40bf-5230-1a94-653f00911edc" />
    </api>
    <api id="AllMembers.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="members" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DeletedRowInaccessibleException.#ctor">
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
      <file name="711b66c8-5dc7-3142-3b3d-f7e761b02f8e" />
    </api>
    <api id="Methods.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
      <file name="5e4202e1-41de-986e-1bdb-e9db64f0b424" />
    </api>
    <api id="Properties.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
      <file name="a94447e3-4324-832a-5f37-95bc8466ebc3" />
    </api>
    <api id="Events.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Events" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
      <file name="baaea91b-c0d6-8e84-2d56-ee2cbd73d806" />
    </api>
    <api id="Overload:System.Data.DeletedRowInaccessibleException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DeletedRowInaccessibleException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
      <file name="55c3d431-e09d-f20d-06a0-0b7b2cf56855" />
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
      <file name="254ae373-e4b3-4767-26ed-722df66820bc" />
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
      <file name="88534944-4743-201b-a96b-ab68af01b608" />
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
      <file name="ff889247-b890-9879-80c5-fae3ea97fa1d" />
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
      <file name="df173e72-fea5-8cd3-675d-e6c9b8c88b3c" />
    </api>
    <api id="T:System.Data.DuplicateNameException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="2d8166b2-6ed8-f1be-2651-369f45b4ef5b" />
    </api>
    <api id="AllMembers.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="members" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.DuplicateNameException.#ctor">
          <element api="M:System.Data.DuplicateNameException.#ctor" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.String)" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
      <file name="e4dc2b2b-0f0e-3e59-2462-d76006b0f5c5" />
    </api>
    <api id="Methods.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
      <file name="80c577be-c7ef-d298-1c56-82658a891b86" />
    </api>
    <api id="Properties.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
      <file name="7c024225-c158-3bc8-edaa-6d80668f5451" />
    </api>
    <api id="Events.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Events" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
      <file name="ea92f83f-6c59-a296-7e06-d5c4ad8c9043" />
    </api>
    <api id="Overload:System.Data.DuplicateNameException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.DuplicateNameException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DuplicateNameException.#ctor" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.String)" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
      <file name="15325134-a371-fcf3-aea4-ef396dd691d8" />
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
      <file name="0c8f47de-7f62-2ee0-cb34-af4fd74c1f0a" />
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
      <file name="4d4567ba-dc04-e238-3321-b75be285f8d1" />
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
      <file name="12f157d6-71d1-7850-4650-3a4f0b44fc1d" />
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
      <file name="6b3e542a-26e5-d8b3-a13f-76196816c983" />
    </api>
    <api id="T:System.Data.EntityCommandCompilationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="759f180a-1f0c-af87-155c-2e27fbda59b9" />
    </api>
    <api id="AllMembers.T:System.Data.EntityCommandCompilationException">
      <topicdata name="EntityCommandCompilationException" group="list" subgroup="members" typeTopicId="T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.EntityCommandCompilationException.#ctor">
          <element api="M:System.Data.EntityCommandCompilationException.#ctor" />
          <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String)" />
          <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" />
      </containers>
      <file name="e8b3d518-92fc-9011-fd65-2eaae4fad40e" />
    </api>
    <api id="Methods.T:System.Data.EntityCommandCompilationException">
      <topicdata name="EntityCommandCompilationException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" />
      </containers>
      <file name="57c50df0-6514-9cd9-7f6f-bed81e89a752" />
    </api>
    <api id="Properties.T:System.Data.EntityCommandCompilationException">
      <topicdata name="EntityCommandCompilationException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" />
      </containers>
      <file name="f057f972-4ab7-9022-5360-e825d355ee01" />
    </api>
    <api id="Overload:System.Data.EntityCommandCompilationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityCommandCompilationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityCommandCompilationException.#ctor" />
        <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String)" />
        <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
      <file name="65da1e0d-489a-d74d-679c-f02f6aca00d0" />
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
      <file name="34874ec7-5e51-4ec6-f7cb-3d19a3b2f301" />
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
      <file name="d3c3e634-0b2f-bff2-7b08-f89268c21ab5" />
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
      <file name="4edfdd4b-d518-1cd4-93c9-4803ac83271a" />
    </api>
    <api id="T:System.Data.EntityCommandExecutionException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="ed2e95a0-8117-ab7b-e9c4-8c4ebf08ea0b" />
    </api>
    <api id="AllMembers.T:System.Data.EntityCommandExecutionException">
      <topicdata name="EntityCommandExecutionException" group="list" subgroup="members" typeTopicId="T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.EntityCommandExecutionException.#ctor">
          <element api="M:System.Data.EntityCommandExecutionException.#ctor" />
          <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String)" />
          <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" />
      </containers>
      <file name="37dca373-ffda-4580-935c-1993c4f13328" />
    </api>
    <api id="Methods.T:System.Data.EntityCommandExecutionException">
      <topicdata name="EntityCommandExecutionException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" />
      </containers>
      <file name="9c9e6b02-7664-d2b3-0e6b-c1e26cedefa7" />
    </api>
    <api id="Properties.T:System.Data.EntityCommandExecutionException">
      <topicdata name="EntityCommandExecutionException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" />
      </containers>
      <file name="0416d7ad-2bf3-2df7-4386-d9f4ea336180" />
    </api>
    <api id="Overload:System.Data.EntityCommandExecutionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityCommandExecutionException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityCommandExecutionException.#ctor" />
        <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String)" />
        <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
      <file name="8315ffd1-15de-59a8-3f9e-d3c874c65b40" />
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
      <file name="9f7876c1-0e54-538e-1970-de42770b251a" />
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
      <file name="a47ea57d-8175-2e66-24e2-c88e60844b0b" />
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
      <file name="7e419eec-4701-08f2-05ef-b9b674c6502c" />
    </api>
    <api id="T:System.Data.EntityException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
          <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
          <type api="T:System.Data.EntitySqlException" ref="true" />
          <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
          <type api="T:System.Data.MappingException" ref="true" />
          <type api="T:System.Data.MetadataException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="0ad8a77b-998e-b142-d2b8-f345cf1f7775" />
    </api>
    <api id="AllMembers.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="members" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.EntityException.#ctor">
          <element api="M:System.Data.EntityException.#ctor" />
          <element api="M:System.Data.EntityException.#ctor(System.String)" />
          <element api="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.EntityException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
      <file name="556da293-cbc4-cd9a-8a0d-23f188e1eea1" />
    </api>
    <api id="Methods.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
      <file name="68421bf3-7826-c20a-da95-874bb2928adf" />
    </api>
    <api id="Properties.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
      <file name="0f05cc0f-8470-e52c-52cb-e46d5546a18c" />
    </api>
    <api id="Events.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Events" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
      <file name="94779307-98f1-e0dc-7fc2-ff1a31bacb15" />
    </api>
    <api id="Overload:System.Data.EntityException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityException.#ctor" />
        <element api="M:System.Data.EntityException.#ctor(System.String)" />
        <element api="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EntityException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
      <file name="31c36782-47c3-2a9e-c8bc-e24c4f2d03d1" />
    </api>
    <api id="M:System.Data.EntityException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
      <file name="a6ba4f4a-c587-9558-d183-9e1120097d96" />
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
      <file name="ddd03928-8cce-323f-f9fc-f888dac74ee2" />
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
      <file name="ef56b2ed-83d2-2e45-65dd-90ef3514b36e" />
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
      <file name="a5e23222-2a3c-2c38-2e29-d0ebc3d97e5f" />
    </api>
    <api id="T:System.Data.EntityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Data.EntityKey" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="IsReference">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9de66ad3-75a8-7db6-7fd4-ae69d666f6dc" />
    </api>
    <api id="AllMembers.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="members" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.EntityKey.#ctor">
          <element api="M:System.Data.EntityKey.#ctor" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
        </element>
        <element api="P:System.Data.EntityKey.EntityContainerName" />
        <element api="P:System.Data.EntityKey.EntityKeyValues" />
        <element api="F:System.Data.EntityKey.EntityNotValidKey" />
        <element api="P:System.Data.EntityKey.EntitySetName" />
        <element api="Overload:System.Data.EntityKey.Equals">
          <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
          <element api="M:System.Data.EntityKey.Equals(System.Object)" />
        </element>
        <element api="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
        <element api="M:System.Data.EntityKey.GetHashCode" />
        <element api="P:System.Data.EntityKey.IsTemporary" />
        <element api="F:System.Data.EntityKey.NoEntitySetKey" />
        <element api="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
      <file name="3572dbc7-b8ed-185d-8188-5c644ff7748a" />
    </api>
    <api id="Methods.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.EntityKey.Equals">
          <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
          <element api="M:System.Data.EntityKey.Equals(System.Object)" />
        </element>
        <element api="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
        <element api="M:System.Data.EntityKey.GetHashCode" />
        <element api="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
      <file name="a81ffd1c-ac19-6400-1f87-b7352ffecbad" />
    </api>
    <api id="Operators.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
      <file name="5732cfaf-c4e7-44a5-bf4a-68c62fe7e975" />
    </api>
    <api id="Properties.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="P:System.Data.EntityKey.EntityContainerName" />
        <element api="P:System.Data.EntityKey.EntityKeyValues" />
        <element api="P:System.Data.EntityKey.EntitySetName" />
        <element api="P:System.Data.EntityKey.IsTemporary" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
      <file name="3e31b28d-9c0c-e655-39e3-59c0b7805520" />
    </api>
    <api id="Fields.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Fields" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="F:System.Data.EntityKey.EntityNotValidKey" />
        <element api="F:System.Data.EntityKey.NoEntitySetKey" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
      <file name="8276d99b-6bf7-b982-4d3c-98e2e1b60736" />
    </api>
    <api id="Overload:System.Data.EntityKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityKey" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityKey.#ctor" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="2e07dbcb-a1d9-01e5-e9c7-1e147b22ec6f" />
    </api>
    <api id="Overload:System.Data.EntityKey.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityKey" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="07d48d79-3924-1fbb-e5ab-ecaf9d2287b0" />
    </api>
    <api id="M:System.Data.EntityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="eaac4a4b-fa61-a4d1-c8e0-9c4d6fb7c304" />
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityKeyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="ddc8d828-7826-0bba-68b7-0d6a829762ff" />
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityKeyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.EntityKeyMember" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="c7869efe-b927-873b-8c34-18652bff526a" />
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="c2b4d8b4-55e6-1318-3d37-cb649e006c94" />
    </api>
    <api id="P:System.Data.EntityKey.EntityContainerName">
      <topicdata group="api" />
      <apidata name="EntityContainerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityContainerName" />
      <setter name="set_EntityContainerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="42f77e8a-eec6-0678-ea18-391d68b32933" />
    </api>
    <api id="P:System.Data.EntityKey.EntityKeyValues">
      <topicdata group="api" />
      <apidata name="EntityKeyValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKeyValues" />
      <setter name="set_EntityKeyValues" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.EntityKeyMember" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ada596a9-03ff-960a-97c7-bf70b1f0f8f7" />
    </api>
    <api id="F:System.Data.EntityKey.EntityNotValidKey">
      <topicdata group="api" />
      <apidata name="EntityNotValidKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="f19bd403-1539-f342-bfd3-251fe52c81b2" />
    </api>
    <api id="P:System.Data.EntityKey.EntitySetName">
      <topicdata group="api" />
      <apidata name="EntitySetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntitySetName" />
      <setter name="set_EntitySetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d4418863-2270-d6ed-a09c-c3ed3a51d129" />
    </api>
    <api id="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.EntityKey.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Data.EntityKey" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="3a8f40d4-a5c5-88c3-d1ad-2d8be634e2ef" />
    </api>
    <api id="M:System.Data.EntityKey.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.EntityKey.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="deb205d5-3608-d716-423b-fb560c5d5c17" />
    </api>
    <api id="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
      <topicdata group="api" />
      <apidata name="GetEntitySet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataWorkspace">
          <type api="T:System.Data.Metadata.Edm.MetadataWorkspace" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="91fb3cb5-08f8-6024-7096-b7e286abf10d" />
    </api>
    <api id="M:System.Data.EntityKey.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="0c96be3d-472c-8ef4-75fc-e3a59f428e4f" />
    </api>
    <api id="P:System.Data.EntityKey.IsTemporary">
      <topicdata group="api" />
      <apidata name="IsTemporary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTemporary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="973fbfbc-bd88-d176-4bd7-dd3a181730dc" />
    </api>
    <api id="F:System.Data.EntityKey.NoEntitySetKey">
      <topicdata group="api" />
      <apidata name="NoEntitySetKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="2392779d-71a2-c976-691f-b9b34c533fa7" />
    </api>
    <api id="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserialized" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f140c329-893d-c54e-122f-8ae165870e3b" />
    </api>
    <api id="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserializing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializingAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f6081f6a-8a45-869e-9368-f2c6f291f172" />
    </api>
    <api id="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key1">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
        <parameter name="key2">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="b4c853a5-cda9-778d-d672-62721cfd43a9" />
    </api>
    <api id="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key1">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
        <parameter name="key2">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <file name="c63cf02c-e4cc-4f13-3f52-e639f327e547" />
    </api>
    <api id="T:System.Data.EntityKeyMember">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f8d01379-6619-1852-b243-5406e0d968c2" />
    </api>
    <api id="AllMembers.T:System.Data.EntityKeyMember">
      <topicdata name="EntityKeyMember" group="list" subgroup="members" typeTopicId="T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.EntityKeyMember.#ctor">
          <element api="M:System.Data.EntityKeyMember.#ctor" />
          <element api="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)" />
        </element>
        <element api="P:System.Data.EntityKeyMember.Key" />
        <element api="M:System.Data.EntityKeyMember.ToString" />
        <element api="P:System.Data.EntityKeyMember.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" />
      </containers>
      <file name="1a8f1aac-3f0c-f59b-1700-5879a72c2c49" />
    </api>
    <api id="Methods.T:System.Data.EntityKeyMember">
      <topicdata name="EntityKeyMember" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.EntityKeyMember.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" />
      </containers>
      <file name="a4028cf9-7fca-9f41-6b23-e833903cb068" />
    </api>
    <api id="Properties.T:System.Data.EntityKeyMember">
      <topicdata name="EntityKeyMember" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <elements>
        <element api="P:System.Data.EntityKeyMember.Key" />
        <element api="P:System.Data.EntityKeyMember.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" />
      </containers>
      <file name="60dab78a-136f-79a1-2c4e-0f67b05b9e48" />
    </api>
    <api id="Overload:System.Data.EntityKeyMember.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntityKeyMember" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityKeyMember.#ctor" />
        <element api="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <file name="e264061c-0154-21d1-d5a2-589addf14729" />
    </api>
    <api id="M:System.Data.EntityKeyMember.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKeyMember.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <file name="5b624374-6f82-cfe9-e605-894defbf21de" />
    </api>
    <api id="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKeyMember.#ctor" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <file name="a54c5bcd-0e63-43b9-0606-120380fcd6dc" />
    </api>
    <api id="P:System.Data.EntityKeyMember.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1746e65b-1562-bfa4-26aa-d8ceec8a3d7e" />
    </api>
    <api id="M:System.Data.EntityKeyMember.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <file name="daa50d01-108d-aa43-9ecb-bd3bf99b60db" />
    </api>
    <api id="P:System.Data.EntityKeyMember.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2801c5dc-faae-fd03-8caf-c5ade669551a" />
    </api>
    <api id="T:System.Data.EntitySqlException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="e03f3be6-1c57-92d1-9337-c0241d630244" />
    </api>
    <api id="AllMembers.T:System.Data.EntitySqlException">
      <topicdata name="EntitySqlException" group="list" subgroup="members" typeTopicId="T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.EntitySqlException.#ctor">
          <element api="M:System.Data.EntitySqlException.#ctor" />
          <element api="M:System.Data.EntitySqlException.#ctor(System.String)" />
          <element api="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Data.EntitySqlException.Column" />
        <element api="P:System.Data.EntitySqlException.ErrorContext" />
        <element api="P:System.Data.EntitySqlException.ErrorDescription" />
        <element api="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Data.EntitySqlException.Line" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" />
      </containers>
      <file name="e71b329f-53d8-2d52-0005-cd10143385f4" />
    </api>
    <api id="Methods.T:System.Data.EntitySqlException">
      <topicdata name="EntitySqlException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" />
      </containers>
      <file name="b3301974-76de-ef1b-3393-2c7cdc93c2d7" />
    </api>
    <api id="Properties.T:System.Data.EntitySqlException">
      <topicdata name="EntitySqlException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.EntitySqlException.Column" />
        <element api="P:System.Data.EntitySqlException.ErrorContext" />
        <element api="P:System.Data.EntitySqlException.ErrorDescription" />
        <element api="P:System.Data.EntitySqlException.Line" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" />
      </containers>
      <file name="716c103b-611c-cc0c-6ba9-2ef2d87b0f8c" />
    </api>
    <api id="Overload:System.Data.EntitySqlException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EntitySqlException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntitySqlException.#ctor" />
        <element api="M:System.Data.EntitySqlException.#ctor(System.String)" />
        <element api="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="972b77aa-3b9f-d6de-0124-7f2c97f4f811" />
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="c7cf0960-7d33-0824-5719-3527ee80f27e" />
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="1d13c61d-bed6-cebe-079d-fa52c1f03ca3" />
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="7c2920d6-718f-e7b3-89fb-645d8e82eb36" />
    </api>
    <api id="P:System.Data.EntitySqlException.Column">
      <topicdata group="api" />
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="06b60489-dc61-ef42-8af6-b9f5e22120f8" />
    </api>
    <api id="P:System.Data.EntitySqlException.ErrorContext">
      <topicdata group="api" />
      <apidata name="ErrorContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorContext" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="764b8b12-32ff-b010-0e50-ea4245537ab5" />
    </api>
    <api id="P:System.Data.EntitySqlException.ErrorDescription">
      <topicdata group="api" />
      <apidata name="ErrorDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="bab8a724-6f37-697f-932f-86c56667be85" />
    </api>
    <api id="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="43378ee8-f228-6165-0c05-90a99031141e" />
    </api>
    <api id="P:System.Data.EntitySqlException.Line">
      <topicdata group="api" />
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <file name="d634835f-4d12-d410-26c9-d51c7708ab60" />
    </api>
    <api id="T:System.Data.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.EntityState.Detached" />
        <element api="F:System.Data.EntityState.Unchanged" />
        <element api="F:System.Data.EntityState.Added" />
        <element api="F:System.Data.EntityState.Deleted" />
        <element api="F:System.Data.EntityState.Modified" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.BindableTypeAttribute" ref="true" />
          <assignment name="IsBindable">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e8486d3c-1df2-1eae-8ff4-cae535c1c40a" />
    </api>
    <api id="F:System.Data.EntityState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
      <file name="fdc65c42-30bd-1191-e01e-8b3880b9cae0" />
    </api>
    <api id="F:System.Data.EntityState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
      <file name="e5419873-ccd3-d625-f9b1-f20e9c4462f9" />
    </api>
    <api id="F:System.Data.EntityState.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
      <file name="75e4cdce-90db-3235-81ef-085062609ac2" />
    </api>
    <api id="F:System.Data.EntityState.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
      <file name="1428a14e-7620-73f7-4542-3af3d9392c72" />
    </api>
    <api id="F:System.Data.EntityState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
      <file name="e172ce2a-85a4-3b5d-741e-09f4652dffdc" />
    </api>
    <api id="T:System.Data.EnumerableRowCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollection" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="1affbd62-fd38-2621-f638-9de0bc3b2b27" />
    </api>
    <api id="AllMembers.T:System.Data.EnumerableRowCollection">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="members" typeTopicId="T:System.Data.EnumerableRowCollection" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection" />
      </containers>
      <file name="0730a07e-09be-d707-2e9b-4fc91e413bc4" />
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollection">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollection" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection" />
      </containers>
      <file name="bf21d728-818f-d9d2-c2ae-edbbdb550d7e" />
    </api>
    <api id="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection" ref="true" />
      </containers>
      <file name="77c603c2-8774-058c-5178-9ece36054581" />
    </api>
    <api id="T:System.Data.EnumerableRowCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollection`1" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TRow" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="a0b1e958-5ce9-ad8b-c9dd-1a8165b5ea60" />
    </api>
    <api id="AllMembers.T:System.Data.EnumerableRowCollection`1">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="members" typeTopicId="T:System.Data.EnumerableRowCollection`1" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" />
      </containers>
      <file name="9e87906f-ffa8-c68b-0917-d4ef09dc2358" />
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollection`1">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollection`1" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" />
      </containers>
      <file name="a60918bb-dfce-de46-dc61-c816eafd8d49" />
    </api>
    <api id="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
      </containers>
      <file name="0633ebe4-32fd-cc73-58e0-8db96cce6f35" />
    </api>
    <api id="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
      </containers>
      <file name="b6a42b1a-b0af-75b7-9200-5909f7b26868" />
    </api>
    <api id="T:System.Data.EnumerableRowCollectionExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="EnumerableRowCollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bfd48098-d595-acab-a6b9-716d334133b2" />
    </api>
    <api id="AllMembers.T:System.Data.EnumerableRowCollectionExtensions">
      <topicdata name="EnumerableRowCollectionExtensions" group="list" subgroup="members" typeTopicId="T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="EnumerableRowCollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" />
      </containers>
      <file name="2ea24bc0-9a60-ae22-28e2-20ddcd9325e6" />
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollectionExtensions">
      <topicdata name="EnumerableRowCollectionExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="EnumerableRowCollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" />
      </containers>
      <file name="03f914ce-05f5-d975-cbcf-97908aa3bc75" />
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <file name="ac6920f2-a34c-42a9-0503-2f3b4b24447e" />
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <file name="f96c3291-3c77-7130-632d-d078a43b8a45" />
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
      <topicdata name="ThenBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <file name="16188f64-5780-3b6f-acb1-d38da814e6d1" />
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
      <topicdata name="ThenByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <file name="f599009a-c24e-d8cf-229e-606b11f06fbc" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e7803fd2-968a-1089-2a6b-788c1886c8c8" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6a5bc695-73d0-7063-b5fb-9b9cd1803d26" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6436c568-f110-09bb-9d9a-deb928b27784" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5d14d66c-a534-f444-8826-f3cde84d8ee7" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9430aedf-d42f-b459-04c5-efe6343cea76" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="S" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="78cca4f5-662b-918c-6eeb-ac54ba3f1245" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="640e2a8c-4c56-cff9-fc01-7cdb62a7c5a7" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="66f40f96-eb06-c712-eadf-cf99a2ca3c87" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fca28cd3-193f-5172-3a87-158f03003d0c" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5d2107d7-00db-1eb9-5440-8689c2dfd212" />
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="39fc2ed7-a917-707f-7d88-e1ca4e4750aa" />
    </api>
    <api id="T:System.Data.EvaluateException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="4ce3e30e-0363-2db7-6da8-9670b129fd1f" />
    </api>
    <api id="AllMembers.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="members" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.EvaluateException.#ctor">
          <element api="M:System.Data.EvaluateException.#ctor" />
          <element api="M:System.Data.EvaluateException.#ctor(System.String)" />
          <element api="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
      <file name="b2295986-912b-ac24-a888-f0c02f82adf2" />
    </api>
    <api id="Methods.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
      <file name="d70b994b-afbd-c171-31a3-18aa7cef7b77" />
    </api>
    <api id="Properties.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
      <file name="30391abb-b8bb-7bec-321b-286b9eb88fb8" />
    </api>
    <api id="Events.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Events" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
      <file name="f4ff52e2-3d0c-3961-b64f-351b38e3b08b" />
    </api>
    <api id="Overload:System.Data.EvaluateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.EvaluateException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EvaluateException.#ctor" />
        <element api="M:System.Data.EvaluateException.#ctor(System.String)" />
        <element api="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
      <file name="9d43452c-a26d-72e9-0720-1c34a1aae2ca" />
    </api>
    <api id="M:System.Data.EvaluateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
      <file name="2991e375-5159-06bc-825d-4fa1d2311719" />
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
      <file name="66bf35fc-3d9a-441c-e9e8-3a9fc3451909" />
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
      <file name="cd4f9d33-d208-3773-d2cb-29f70bc2db7d" />
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
      <file name="b3d33964-1a5a-49ff-058d-fda2075354d7" />
    </api>
    <api id="T:System.Data.FillErrorEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="33f248de-34ec-489a-0aaf-aeca634b9c9d" />
    </api>
    <api id="AllMembers.T:System.Data.FillErrorEventArgs">
      <topicdata name="FillErrorEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])" />
        <element api="P:System.Data.FillErrorEventArgs.Continue" />
        <element api="P:System.Data.FillErrorEventArgs.DataTable" />
        <element api="P:System.Data.FillErrorEventArgs.Errors" />
        <element api="P:System.Data.FillErrorEventArgs.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" />
      </containers>
      <file name="489bec79-511d-673f-260a-8a73d99eff13" />
    </api>
    <api id="Methods.T:System.Data.FillErrorEventArgs">
      <topicdata name="FillErrorEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" />
      </containers>
      <file name="22ad9b96-7ffe-0a52-3c14-a24228241e61" />
    </api>
    <api id="Properties.T:System.Data.FillErrorEventArgs">
      <topicdata name="FillErrorEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.FillErrorEventArgs.Continue" />
        <element api="P:System.Data.FillErrorEventArgs.DataTable" />
        <element api="P:System.Data.FillErrorEventArgs.Errors" />
        <element api="P:System.Data.FillErrorEventArgs.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" />
      </containers>
      <file name="d70ffe2f-1dbf-7ed0-72d0-edcadc870197" />
    </api>
    <api id="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
      <file name="86471171-dc42-3612-dd5c-fb14e8bd943b" />
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Continue">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Continue" />
      <setter name="set_Continue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
      <file name="04d139f6-dcc8-a5db-a32b-6ed1fe1d05bc" />
    </api>
    <api id="P:System.Data.FillErrorEventArgs.DataTable">
      <topicdata group="api" />
      <apidata name="DataTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
      <file name="c2d9585d-bbe6-9d6b-046a-10f037fc4165" />
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Errors" />
      <setter name="set_Errors" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
      <file name="5fee655c-5092-7175-13cd-4790072a1f2c" />
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
      <file name="9b7a8785-f10f-fef0-9882-afdf12dcf983" />
    </api>
    <api id="T:System.Data.FillErrorEventHandler">
      <topicdata group="api" />
      <apidata name="FillErrorEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.FillErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="856dc095-dafa-46e9-f06c-6ebd004d51cb" />
    </api>
    <api id="T:System.Data.ForeignKeyConstraint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Constraint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ForeignKeyConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="333bd1dc-1dbb-171a-4313-c1f4a8cbe7d4" />
    </api>
    <api id="AllMembers.T:System.Data.ForeignKeyConstraint">
      <topicdata name="ForeignKeyConstraint" group="list" subgroup="members" typeTopicId="T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="Overload:System.Data.ForeignKeyConstraint.#ctor">
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
        </element>
        <element api="P:System.Data.ForeignKeyConstraint.AcceptRejectRule" />
        <element api="P:System.Data.ForeignKeyConstraint.Columns" />
        <element api="P:System.Data.ForeignKeyConstraint.DeleteRule" />
        <element api="M:System.Data.ForeignKeyConstraint.Equals(System.Object)" />
        <element api="M:System.Data.ForeignKeyConstraint.GetHashCode" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedColumns" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedTable" />
        <element api="P:System.Data.ForeignKeyConstraint.Table" />
        <element api="P:System.Data.ForeignKeyConstraint.UpdateRule" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" />
      </containers>
      <file name="2b222056-21e5-8776-dbe2-a4b2a6587b6c" />
    </api>
    <api id="Methods.T:System.Data.ForeignKeyConstraint">
      <topicdata name="ForeignKeyConstraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Data.ForeignKeyConstraint.Equals(System.Object)" />
        <element api="M:System.Data.ForeignKeyConstraint.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" />
      </containers>
      <file name="6a48cda7-b887-d268-1692-be8f8909e80a" />
    </api>
    <api id="Properties.T:System.Data.ForeignKeyConstraint">
      <topicdata name="ForeignKeyConstraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.ForeignKeyConstraint.AcceptRejectRule" />
        <element api="P:System.Data.ForeignKeyConstraint.Columns" />
        <element api="P:System.Data.ForeignKeyConstraint.DeleteRule" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedColumns" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedTable" />
        <element api="P:System.Data.ForeignKeyConstraint.Table" />
        <element api="P:System.Data.ForeignKeyConstraint.UpdateRule" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" />
      </containers>
      <file name="17114c4c-5276-f7ab-dce0-d93d8a8f2a04" />
    </api>
    <api id="Overload:System.Data.ForeignKeyConstraint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ForeignKeyConstraint" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="a32a2d35-6aa6-a0ed-e6f8-4a0d7cbb1075" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="c425bccd-6d54-a243-c424-8892350c7048" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="b273707c-30c6-e128-f37a-937157f4febe" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="f988192c-071e-3752-2c40-ee273bd1bad3" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="44d484d9-5619-d946-336f-d3b3a977702e" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="acceptRejectRule">
          <type api="T:System.Data.AcceptRejectRule" ref="false" />
        </parameter>
        <parameter name="deleteRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
        <parameter name="updateRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4523f439-6992-290a-1ac9-24a70f62974b" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="acceptRejectRule">
          <type api="T:System.Data.AcceptRejectRule" ref="false" />
        </parameter>
        <parameter name="deleteRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
        <parameter name="updateRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ca62fe45-fdeb-c93a-08c2-5113950f16b8" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <topicdata group="api" />
      <apidata name="AcceptRejectRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptRejectRule" />
      <setter name="set_AcceptRejectRule" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.AcceptRejectRule" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a5ec32b4-0498-73a7-7381-1032278a420c" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="c4f707e2-8670-36ba-05a9-934bd7cacd63" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <topicdata group="api" />
      <apidata name="DeleteRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteRule" />
      <setter name="set_DeleteRule" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.Rule" ref="false" />
            <enumValue>
              <field name="Cascade" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2080c542-51e8-3b46-1e24-e006a23f4b90" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="f8dbce8d-06a9-bf84-bc2e-3b6246c0aba6" />
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="678a730d-e4ec-6010-dc46-f94e21f07456" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <topicdata group="api" />
      <apidata name="RelatedColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelatedColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="0ffce993-c91a-4882-d827-a7d81afc8873" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <topicdata group="api" />
      <apidata name="RelatedTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelatedTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="76fa6d25-0ec3-3e2f-7923-2deffcca1785" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Constraint.Table">
          <type api="T:System.Data.Constraint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <file name="eef2f0ac-9f42-9476-02df-da7588abe197" />
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <topicdata group="api" />
      <apidata name="UpdateRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateRule" />
      <setter name="set_UpdateRule" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.Rule" ref="false" />
            <enumValue>
              <field name="Cascade" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0e239519-32ff-fd57-55aa-0de3efc5de35" />
    </api>
    <api id="T:System.Data.IColumnMapping">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IColumnMapping" />
      <apidata name="IColumnMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Common.DataColumnMapping" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="02190ca4-4544-580c-029e-371429e1777d" />
    </api>
    <api id="AllMembers.T:System.Data.IColumnMapping">
      <topicdata name="IColumnMapping" group="list" subgroup="members" typeTopicId="T:System.Data.IColumnMapping" />
      <apidata name="IColumnMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IColumnMapping.DataSetColumn" />
        <element api="P:System.Data.IColumnMapping.SourceColumn" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" />
      </containers>
      <file name="9ce640e5-f1ed-66d2-afc3-732ced4adb9d" />
    </api>
    <api id="Properties.T:System.Data.IColumnMapping">
      <topicdata name="IColumnMapping" group="list" subgroup="Properties" typeTopicId="T:System.Data.IColumnMapping" />
      <apidata name="IColumnMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IColumnMapping.DataSetColumn" />
        <element api="P:System.Data.IColumnMapping.SourceColumn" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" />
      </containers>
      <file name="0af4cd21-17aa-69d3-fa8c-1dd4a3a263ce" />
    </api>
    <api id="P:System.Data.IColumnMapping.DataSetColumn">
      <topicdata group="api" />
      <apidata name="DataSetColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetColumn" />
      <setter name="set_DataSetColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </containers>
      <file name="3fc57a1e-4d08-227b-ef05-bc92035ef6af" />
    </api>
    <api id="P:System.Data.IColumnMapping.SourceColumn">
      <topicdata group="api" />
      <apidata name="SourceColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceColumn" />
      <setter name="set_SourceColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </containers>
      <file name="73849527-2a22-5d1c-7f56-8f9ebc09baf2" />
    </api>
    <api id="T:System.Data.IColumnMappingCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DataColumnMappingCollection" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="e352240e-5108-ce50-fea0-e06f19841f64" />
    </api>
    <api id="AllMembers.T:System.Data.IColumnMappingCollection">
      <topicdata name="IColumnMappingCollection" group="list" subgroup="members" typeTopicId="T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="Overload:System.Data.IColumnMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.IColumnMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IColumnMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IColumnMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" />
      </containers>
      <file name="ca5c9d17-dd9c-ddb6-cee1-b6528032a191" />
    </api>
    <api id="Methods.T:System.Data.IColumnMappingCollection">
      <topicdata name="IColumnMappingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="Overload:System.Data.IColumnMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.IColumnMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IColumnMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" />
      </containers>
      <file name="542a9124-e068-8dde-8e7d-e87f7f3ea892" />
    </api>
    <api id="Properties.T:System.Data.IColumnMappingCollection">
      <topicdata name="IColumnMappingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IColumnMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" />
      </containers>
      <file name="facdf89e-4218-6cda-f070-5334c79a07e4" />
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="1a8b17ae-3967-5d6b-bdc5-f0cc0d02da30" />
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="fce362af-7916-aabc-930b-4aaeba460a94" />
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="a95b07ef-cbb1-0117-0a0f-04fdf47f2d05" />
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="7a6c6de4-2f92-e4ca-8c95-0ad574d9f629" />
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IColumnMappingCollection" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="e315b113-2d26-ec7f-8747-4c8a22970fca" />
    </api>
    <api id="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataSetColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="c4dc3c91-b82e-f14e-d1df-df19b5449c76" />
    </api>
    <api id="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="fd868afc-2ba7-c539-3e46-12b42115dd20" />
    </api>
    <api id="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <topicdata group="api" />
      <apidata name="GetByDataSetColumn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSetColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="fc0e94ca-63c7-1f79-18ed-ca7b8236da30" />
    </api>
    <api id="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="71fac463-5f41-0a62-21c5-98ee66f6e92f" />
    </api>
    <api id="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="30130b9b-2543-523e-63b7-29d8cc11461d" />
    </api>
    <api id="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
      <file name="3983f688-ac85-86d4-fc2a-fa11d31402e3" />
    </api>
    <api id="T:System.Data.IDataAdapter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
        <type api="T:System.Data.SqlClient.SqlDataAdapter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbDataAdapter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcDataAdapter" ref="true" />
        <type api="T:System.Data.Common.DataAdapter" ref="true" />
        <type api="T:System.Data.Common.DbDataAdapter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleDataAdapter" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="88245347-bec7-e7a3-811e-221b722116dd" />
    </api>
    <api id="AllMembers.T:System.Data.IDataAdapter">
      <topicdata name="IDataAdapter" group="list" subgroup="members" typeTopicId="T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" />
      </containers>
      <file name="268250da-3980-9af1-a9bc-deb1f1e9b00a" />
    </api>
    <api id="Methods.T:System.Data.IDataAdapter">
      <topicdata name="IDataAdapter" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" />
      </containers>
      <file name="7a9a4f8b-1806-7ac4-93a9-86bde8a1460e" />
    </api>
    <api id="Properties.T:System.Data.IDataAdapter">
      <topicdata name="IDataAdapter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" />
      </containers>
      <file name="ffb52ce9-2697-590a-59b8-06865dfddd2c" />
    </api>
    <api id="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Fill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="ad4245c6-0140-5a08-f081-b564010038be" />
    </api>
    <api id="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <topicdata group="api" />
      <apidata name="FillSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="schemaType">
          <type api="T:System.Data.SchemaType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataTable" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="1719d152-448a-4b8f-c652-1d8a3de3f352" />
    </api>
    <api id="M:System.Data.IDataAdapter.GetFillParameters">
      <topicdata group="api" />
      <apidata name="GetFillParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.IDataParameter" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="fcc77d5c-3e78-f173-2efc-9000473b9cf7" />
    </api>
    <api id="P:System.Data.IDataAdapter.MissingMappingAction">
      <topicdata group="api" />
      <apidata name="MissingMappingAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MissingMappingAction" />
      <setter name="set_MissingMappingAction" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="5600df96-e6c0-9c03-29d3-45a888af3e91" />
    </api>
    <api id="P:System.Data.IDataAdapter.MissingSchemaAction">
      <topicdata group="api" />
      <apidata name="MissingSchemaAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MissingSchemaAction" />
      <setter name="set_MissingSchemaAction" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="865a7a57-19e4-151e-612c-36f07958c8e3" />
    </api>
    <api id="P:System.Data.IDataAdapter.TableMappings">
      <topicdata group="api" />
      <apidata name="TableMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TableMappings" />
      <returns>
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="d62f06cf-7316-f401-39b2-cf874ad46083" />
    </api>
    <api id="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
      <file name="0273a5d0-1897-13d7-b175-995d5d66c622" />
    </api>
    <api id="T:System.Data.IDataParameter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDataParameter" />
      <apidata name="IDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.IDbDataParameter" ref="true" />
        <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbParameter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcParameter" ref="true" />
        <type api="T:System.Data.Common.DbParameter" ref="true" />
        <type api="T:System.Data.EntityClient.EntityParameter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleParameter" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="eb0cd63d-8426-1910-ec12-d50f7b04913e" />
    </api>
    <api id="AllMembers.T:System.Data.IDataParameter">
      <topicdata name="IDataParameter" group="list" subgroup="members" typeTopicId="T:System.Data.IDataParameter" />
      <apidata name="IDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" />
      </containers>
      <file name="8497e996-8011-48ab-832b-8d3debfcf175" />
    </api>
    <api id="Properties.T:System.Data.IDataParameter">
      <topicdata name="IDataParameter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataParameter" />
      <apidata name="IDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" />
      </containers>
      <file name="25184651-e978-72a2-24cb-26fe8876db06" />
    </api>
    <api id="P:System.Data.IDataParameter.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DbType" />
      <setter name="set_DbType" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="8f4ae010-33cc-402c-0a0d-49d183c26744" />
    </api>
    <api id="P:System.Data.IDataParameter.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="b8744b55-2b89-7546-4911-e8988cb52191" />
    </api>
    <api id="P:System.Data.IDataParameter.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="254b25ea-b27a-eb81-b716-86c1e82e312d" />
    </api>
    <api id="P:System.Data.IDataParameter.ParameterName">
      <topicdata group="api" />
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterName" />
      <setter name="set_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="012b1219-ee06-3a2a-4b1b-3e0e2382b656" />
    </api>
    <api id="P:System.Data.IDataParameter.SourceColumn">
      <topicdata group="api" />
      <apidata name="SourceColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceColumn" />
      <setter name="set_SourceColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="ab652bf5-78ae-77a4-37ab-6df95720aa24" />
    </api>
    <api id="P:System.Data.IDataParameter.SourceVersion">
      <topicdata group="api" />
      <apidata name="SourceVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceVersion" />
      <setter name="set_SourceVersion" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="10049074-6f7f-7a18-7829-a702d26e3bf9" />
    </api>
    <api id="P:System.Data.IDataParameter.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
      <file name="16c4ad86-7174-043e-6a72-04b31c083474" />
    </api>
    <api id="T:System.Data.IDataParameterCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DbParameterCollection" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="d0a52c19-1568-6fd2-d3d8-ae920dd44bc6" />
    </api>
    <api id="AllMembers.T:System.Data.IDataParameterCollection">
      <topicdata name="IDataParameterCollection" group="list" subgroup="members" typeTopicId="T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.IDataParameterCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IDataParameterCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IDataParameterCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" />
      </containers>
      <file name="ec49c4c4-fb36-b2d1-6b01-85c16c36a01a" />
    </api>
    <api id="Methods.T:System.Data.IDataParameterCollection">
      <topicdata name="IDataParameterCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.IDataParameterCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IDataParameterCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" />
      </containers>
      <file name="3dc4ebab-9a36-3070-321a-5efa3952bdfc" />
    </api>
    <api id="Properties.T:System.Data.IDataParameterCollection">
      <topicdata name="IDataParameterCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IDataParameterCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" />
      </containers>
      <file name="e1cdcb35-9aeb-cd7e-7cb1-abf94f9b2617" />
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDataParameterCollection" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="1c17f362-d188-eec4-83ad-3198516235b7" />
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDataParameterCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="fb4766b3-9b94-ff4b-799f-584b5da2dfdd" />
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDataParameterCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="1d4337ee-6ac8-2ddf-c1e3-c43d3efca05c" />
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDataParameterCollection" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="6ca81052-bc27-90d7-4aac-bc6a101c306b" />
    </api>
    <api id="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="104008ad-ddd2-fbee-a327-c875d44eb092" />
    </api>
    <api id="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="54efd47a-c43e-8080-5402-36b9fc2a148c" />
    </api>
    <api id="P:System.Data.IDataParameterCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="3792713d-26f0-dd30-c64b-4f99a1c3dc93" />
    </api>
    <api id="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
      <file name="16099b5e-a047-6a79-858b-619a7a20ca22" />
    </api>
    <api id="T:System.Data.IDataReader">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="5ea97ed5-1b1b-73ce-7fc7-c1b15406834e" />
    </api>
    <api id="AllMembers.T:System.Data.IDataReader">
      <topicdata name="IDataReader" group="list" subgroup="members" typeTopicId="T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDataReader.Close" />
        <element api="P:System.Data.IDataReader.Depth" />
        <element api="M:System.Data.IDataReader.GetSchemaTable" />
        <element api="P:System.Data.IDataReader.IsClosed" />
        <element api="M:System.Data.IDataReader.NextResult" />
        <element api="M:System.Data.IDataReader.Read" />
        <element api="P:System.Data.IDataReader.RecordsAffected" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="Overload:System.Data.IDataReader.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" />
      </containers>
      <file name="950c7e57-e597-2780-37b8-d4fddc392244" />
    </api>
    <api id="Methods.T:System.Data.IDataReader">
      <topicdata name="IDataReader" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDataReader.Close" />
        <element api="M:System.Data.IDataReader.GetSchemaTable" />
        <element api="M:System.Data.IDataReader.NextResult" />
        <element api="M:System.Data.IDataReader.Read" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" />
      </containers>
      <file name="80017a9d-fd35-6a1c-8a7e-64a3fcb90885" />
    </api>
    <api id="Properties.T:System.Data.IDataReader">
      <topicdata name="IDataReader" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataReader.Depth" />
        <element api="P:System.Data.IDataReader.IsClosed" />
        <element api="P:System.Data.IDataReader.RecordsAffected" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataReader.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" />
      </containers>
      <file name="a34ecbc2-5216-b68d-c69e-5666e576d2b2" />
    </api>
    <api id="M:System.Data.IDataReader.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="c842cc31-13df-c958-eabc-aa2c5093e913" />
    </api>
    <api id="P:System.Data.IDataReader.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="aa70e20f-0e62-0b42-135d-d13c9906a540" />
    </api>
    <api id="M:System.Data.IDataReader.GetSchemaTable">
      <topicdata group="api" />
      <apidata name="GetSchemaTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="e37bed7f-27e7-2cbd-ee86-abf62cd674d2" />
    </api>
    <api id="P:System.Data.IDataReader.IsClosed">
      <topicdata group="api" />
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="ac1a1d9b-8167-fec7-3a9f-8044e75da4a6" />
    </api>
    <api id="M:System.Data.IDataReader.NextResult">
      <topicdata group="api" />
      <apidata name="NextResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="9029d60e-b2a6-12ae-b7fe-a4c78b3612df" />
    </api>
    <api id="M:System.Data.IDataReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="e32552f2-bdcd-e2b3-69e8-767d28c40a4b" />
    </api>
    <api id="P:System.Data.IDataReader.RecordsAffected">
      <topicdata group="api" />
      <apidata name="RecordsAffected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RecordsAffected" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
      <file name="77d34ff1-c22a-3484-6001-405d8e696a1e" />
    </api>
    <api id="T:System.Data.IDataRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.SqlServer.Server.SqlDataRecord" ref="true" />
        <type api="T:System.Data.IDataReader" ref="true" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
        <type api="T:System.Data.SqlClient.SqlDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataRecord" ref="true" />
        <type api="T:System.Data.EntityClient.EntityDataReader" ref="true" />
        <type api="T:System.Data.Objects.DbUpdatableDataRecord" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="a9dfb5dd-1797-80c5-a880-1849cb1e79a5" />
    </api>
    <api id="AllMembers.T:System.Data.IDataRecord">
      <topicdata name="IDataRecord" group="list" subgroup="members" typeTopicId="T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="Overload:System.Data.IDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" />
      </containers>
      <file name="0373d630-1d69-78d0-738f-b11c2a821803" />
    </api>
    <api id="Methods.T:System.Data.IDataRecord">
      <topicdata name="IDataRecord" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" />
      </containers>
      <file name="d9a1fb70-5c62-59e7-7c2f-bbb755403e21" />
    </api>
    <api id="Properties.T:System.Data.IDataRecord">
      <topicdata name="IDataRecord" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" />
      </containers>
      <file name="3409f601-4ffc-0fee-d588-f314fb364b52" />
    </api>
    <api id="Overload:System.Data.IDataRecord.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDataRecord" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
        <element api="P:System.Data.IDataRecord.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="2a4d0a48-d9c0-6e84-56c8-85e7836e7e04" />
    </api>
    <api id="P:System.Data.IDataRecord.FieldCount">
      <topicdata group="api" />
      <apidata name="FieldCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FieldCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="8c90a891-f31c-8830-734b-02033b549af4" />
    </api>
    <api id="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="4b9f32c8-2541-3ae9-11ad-7e0e4c6f6e2b" />
    </api>
    <api id="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="15070732-9527-8b38-5288-df281fde6727" />
    </api>
    <api id="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fieldOffset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferoffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="b482782f-0a2c-7d4c-14bf-feb1b63677ea" />
    </api>
    <api id="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="43416074-63dc-6670-a857-c4c12e0ff7fc" />
    </api>
    <api id="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fieldoffset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferoffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="292fcb66-9f0d-3653-a2ef-57cbeec98f98" />
    </api>
    <api id="M:System.Data.IDataRecord.GetData(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="ce2c0205-add8-2744-1e5b-a91b867503ad" />
    </api>
    <api id="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="7b3cc683-7f84-865b-a281-8b72df69bb22" />
    </api>
    <api id="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="35e050d2-6681-24bd-8669-4983db52f2b4" />
    </api>
    <api id="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="0fca56ac-0a6f-1605-f68b-7a95f924fb28" />
    </api>
    <api id="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDouble" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="40f96f79-d3ba-7950-e988-a945cb76c6e8" />
    </api>
    <api id="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="dec845bc-5918-5c75-cea1-a8f5351cf961" />
    </api>
    <api id="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFloat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="6af90256-2315-3fc3-ab3b-5763fb9e646b" />
    </api>
    <api id="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="3ace5037-c2c0-05dc-a723-068335906d91" />
    </api>
    <api id="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt16" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="7ccbb054-5ce5-81c7-6bad-a55c84117f88" />
    </api>
    <api id="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt32" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="48842455-db37-d00d-810d-be041d3bbf4c" />
    </api>
    <api id="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="78fb8784-0ec4-477e-351b-3b38e56300bc" />
    </api>
    <api id="M:System.Data.IDataRecord.GetName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="a438d3b4-908d-0b89-16fc-344efb5c8ef9" />
    </api>
    <api id="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <topicdata group="api" />
      <apidata name="GetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="8e7beaf9-e634-ef6d-52a6-f6d673d411d9" />
    </api>
    <api id="M:System.Data.IDataRecord.GetString(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="1971684d-8ad4-39a3-94af-ed13bbf298ee" />
    </api>
    <api id="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="0516ed61-d9cd-75ce-b5d3-aaa2e46026cc" />
    </api>
    <api id="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="08d0da05-87ef-335a-d05f-6bab501fca7b" />
    </api>
    <api id="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsDBNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="17474150-68c5-0671-a5c9-142ca1f46247" />
    </api>
    <api id="P:System.Data.IDataRecord.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataRecord.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="65d7b4ce-3bdf-ac8e-99cb-3f46d5722c64" />
    </api>
    <api id="P:System.Data.IDataRecord.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataRecord.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
      <file name="32a8b416-0676-6a7c-b275-bf880dcf6978" />
    </api>
    <api id="T:System.Data.IDbCommand">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.OleDb.OleDbCommand" ref="true" />
        <type api="T:System.Data.Common.DbCommand" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b68d0bb2-0733-e0b1-97f9-197cdb89870b" />
    </api>
    <api id="AllMembers.T:System.Data.IDbCommand">
      <topicdata name="IDbCommand" group="list" subgroup="members" typeTopicId="T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDbCommand.Cancel" />
        <element api="P:System.Data.IDbCommand.CommandText" />
        <element api="P:System.Data.IDbCommand.CommandTimeout" />
        <element api="P:System.Data.IDbCommand.CommandType" />
        <element api="P:System.Data.IDbCommand.Connection" />
        <element api="M:System.Data.IDbCommand.CreateParameter" />
        <element api="M:System.Data.IDbCommand.ExecuteNonQuery" />
        <element api="Overload:System.Data.IDbCommand.ExecuteReader">
          <element api="M:System.Data.IDbCommand.ExecuteReader" />
          <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
        </element>
        <element api="M:System.Data.IDbCommand.ExecuteScalar" />
        <element api="P:System.Data.IDbCommand.Parameters" />
        <element api="M:System.Data.IDbCommand.Prepare" />
        <element api="P:System.Data.IDbCommand.Transaction" />
        <element api="P:System.Data.IDbCommand.UpdatedRowSource" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" />
      </containers>
      <file name="6bee84e0-c61d-eb7f-899b-e81853a16eaf" />
    </api>
    <api id="Methods.T:System.Data.IDbCommand">
      <topicdata name="IDbCommand" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDbCommand.Cancel" />
        <element api="M:System.Data.IDbCommand.CreateParameter" />
        <element api="M:System.Data.IDbCommand.ExecuteNonQuery" />
        <element api="Overload:System.Data.IDbCommand.ExecuteReader">
          <element api="M:System.Data.IDbCommand.ExecuteReader" />
          <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
        </element>
        <element api="M:System.Data.IDbCommand.ExecuteScalar" />
        <element api="M:System.Data.IDbCommand.Prepare" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" />
      </containers>
      <file name="b3b262a0-ee50-e003-9bfb-385256aab250" />
    </api>
    <api id="Properties.T:System.Data.IDbCommand">
      <topicdata name="IDbCommand" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbCommand.CommandText" />
        <element api="P:System.Data.IDbCommand.CommandTimeout" />
        <element api="P:System.Data.IDbCommand.CommandType" />
        <element api="P:System.Data.IDbCommand.Connection" />
        <element api="P:System.Data.IDbCommand.Parameters" />
        <element api="P:System.Data.IDbCommand.Transaction" />
        <element api="P:System.Data.IDbCommand.UpdatedRowSource" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" />
      </containers>
      <file name="59b844a5-7db0-7f9a-1557-fe6143ac8fdd" />
    </api>
    <api id="Overload:System.Data.IDbCommand.ExecuteReader">
      <topicdata name="ExecuteReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDbCommand" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.IDbCommand.ExecuteReader" />
        <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="31d062ac-471c-a0c4-4e3a-9d9951cee1e9" />
    </api>
    <api id="M:System.Data.IDbCommand.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="d65cabcf-e51b-7336-b452-40840292a7bb" />
    </api>
    <api id="P:System.Data.IDbCommand.CommandText">
      <topicdata group="api" />
      <apidata name="CommandText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandText" />
      <setter name="set_CommandText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="aed3263a-fb9a-4f85-84f4-0f8e63dc9d3f" />
    </api>
    <api id="P:System.Data.IDbCommand.CommandTimeout">
      <topicdata group="api" />
      <apidata name="CommandTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandTimeout" />
      <setter name="set_CommandTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="74deef57-b2ca-6287-a746-8c1bf0efa50b" />
    </api>
    <api id="P:System.Data.IDbCommand.CommandType">
      <topicdata group="api" />
      <apidata name="CommandType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandType" />
      <setter name="set_CommandType" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="a6c71d78-08db-e52e-4b1d-eb3f648fdbd5" />
    </api>
    <api id="P:System.Data.IDbCommand.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Connection" />
      <setter name="set_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="292d7f5d-f705-420b-7ca5-377df3ed2aaa" />
    </api>
    <api id="M:System.Data.IDbCommand.CreateParameter">
      <topicdata group="api" />
      <apidata name="CreateParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="fd370cb1-fe0a-7606-9e7c-98326329b7b8" />
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteNonQuery">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="d85003ad-c435-8828-1f40-d2b7caca1535" />
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteReader">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbCommand.ExecuteReader" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="527236f0-4edc-6f28-d73b-7545d9e55baf" />
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbCommand.ExecuteReader" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="99609fa5-6f2b-bac2-93e0-7922b9638f29" />
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteScalar">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="466a3fd5-6c83-9315-5580-7c96fbbc49c3" />
    </api>
    <api id="P:System.Data.IDbCommand.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="f71d01f9-b028-a277-8a5f-39ac15ac3f6e" />
    </api>
    <api id="M:System.Data.IDbCommand.Prepare">
      <topicdata group="api" />
      <apidata name="Prepare" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="a95e1c46-19b3-97b9-a144-a6a1c18bd3b4" />
    </api>
    <api id="P:System.Data.IDbCommand.Transaction">
      <topicdata group="api" />
      <apidata name="Transaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Transaction" />
      <setter name="set_Transaction" />
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="0e1aa22d-45e3-89b5-fecd-b783d90fc7be" />
    </api>
    <api id="P:System.Data.IDbCommand.UpdatedRowSource">
      <topicdata group="api" />
      <apidata name="UpdatedRowSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdatedRowSource" />
      <setter name="set_UpdatedRowSource" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
      <file name="69800cb5-985b-ef7b-2b1e-fa48f2cd6fcf" />
    </api>
    <api id="T:System.Data.IDbConnection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.OleDb.OleDbConnection" ref="true" />
        <type api="T:System.Data.Common.DbConnection" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="4f7be1af-8d1d-3471-ff42-a5ca9bb180b8" />
    </api>
    <api id="AllMembers.T:System.Data.IDbConnection">
      <topicdata name="IDbConnection" group="list" subgroup="members" typeTopicId="T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="Overload:System.Data.IDbConnection.BeginTransaction">
          <element api="M:System.Data.IDbConnection.BeginTransaction" />
          <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
        </element>
        <element api="M:System.Data.IDbConnection.ChangeDatabase(System.String)" />
        <element api="M:System.Data.IDbConnection.Close" />
        <element api="P:System.Data.IDbConnection.ConnectionString" />
        <element api="P:System.Data.IDbConnection.ConnectionTimeout" />
        <element api="M:System.Data.IDbConnection.CreateCommand" />
        <element api="P:System.Data.IDbConnection.Database" />
        <element api="M:System.Data.IDbConnection.Open" />
        <element api="P:System.Data.IDbConnection.State" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" />
      </containers>
      <file name="50422132-6912-cb60-1556-abb159adfb32" />
    </api>
    <api id="Methods.T:System.Data.IDbConnection">
      <topicdata name="IDbConnection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="Overload:System.Data.IDbConnection.BeginTransaction">
          <element api="M:System.Data.IDbConnection.BeginTransaction" />
          <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
        </element>
        <element api="M:System.Data.IDbConnection.ChangeDatabase(System.String)" />
        <element api="M:System.Data.IDbConnection.Close" />
        <element api="M:System.Data.IDbConnection.CreateCommand" />
        <element api="M:System.Data.IDbConnection.Open" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" />
      </containers>
      <file name="2b3e96de-24b5-ec97-2108-722f87a7b1d1" />
    </api>
    <api id="Properties.T:System.Data.IDbConnection">
      <topicdata name="IDbConnection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbConnection.ConnectionString" />
        <element api="P:System.Data.IDbConnection.ConnectionTimeout" />
        <element api="P:System.Data.IDbConnection.Database" />
        <element api="P:System.Data.IDbConnection.State" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" />
      </containers>
      <file name="bb48a64d-e0aa-8cab-c3ab-42f93f7d8533" />
    </api>
    <api id="Overload:System.Data.IDbConnection.BeginTransaction">
      <topicdata name="BeginTransaction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.IDbConnection" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.IDbConnection.BeginTransaction" />
        <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="cac46fcd-c30f-212a-96f3-0543e162c895" />
    </api>
    <api id="M:System.Data.IDbConnection.BeginTransaction">
      <topicdata group="api" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbConnection.BeginTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="48be3329-01de-6b3f-3ca5-13fb7bb9558e" />
    </api>
    <api id="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <topicdata group="api" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbConnection.BeginTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="il">
          <type api="T:System.Data.IsolationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="08ee6dfe-0c36-65a9-9048-9972e1cbafaa" />
    </api>
    <api id="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <topicdata group="api" />
      <apidata name="ChangeDatabase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="databaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="d462a179-ab4d-2283-58c6-7bc45203c2a9" />
    </api>
    <api id="M:System.Data.IDbConnection.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="dba1af89-399f-1fdf-70f0-f262902fa022" />
    </api>
    <api id="P:System.Data.IDbConnection.ConnectionString">
      <topicdata group="api" />
      <apidata name="ConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionString" />
      <setter name="set_ConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="78878a98-8079-79ac-9e77-40307193670e" />
    </api>
    <api id="P:System.Data.IDbConnection.ConnectionTimeout">
      <topicdata group="api" />
      <apidata name="ConnectionTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConnectionTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="50df4c0c-9efc-4379-2667-f505a3c02cca" />
    </api>
    <api id="M:System.Data.IDbConnection.CreateCommand">
      <topicdata group="api" />
      <apidata name="CreateCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="ff0e2b7d-659e-f942-cd47-0a9c755d13e1" />
    </api>
    <api id="P:System.Data.IDbConnection.Database">
      <topicdata group="api" />
      <apidata name="Database" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Database" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="d53d2eb5-c5ec-2b0e-780d-fe65d9097687" />
    </api>
    <api id="M:System.Data.IDbConnection.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="d164d4c3-da97-75c2-6452-8a064b8459f9" />
    </api>
    <api id="P:System.Data.IDbConnection.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
      <file name="a4bc87eb-cfd9-915b-a06f-3693db983e36" />
    </api>
    <api id="T:System.Data.IDbDataAdapter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlDataAdapter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbDataAdapter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcDataAdapter" ref="true" />
        <type api="T:System.Data.Common.DbDataAdapter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleDataAdapter" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="885caceb-32ca-2d8e-2d34-3f9f5207a58e" />
    </api>
    <api id="AllMembers.T:System.Data.IDbDataAdapter">
      <topicdata name="IDbDataAdapter" group="list" subgroup="members" typeTopicId="T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
        <element api="P:System.Data.IDbDataAdapter.DeleteCommand" />
        <element api="P:System.Data.IDbDataAdapter.InsertCommand" />
        <element api="P:System.Data.IDbDataAdapter.SelectCommand" />
        <element api="P:System.Data.IDbDataAdapter.UpdateCommand" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" />
      </containers>
      <file name="b0a9c9b9-289f-5b36-19a6-7b4474060420" />
    </api>
    <api id="Methods.T:System.Data.IDbDataAdapter">
      <topicdata name="IDbDataAdapter" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" />
      </containers>
      <file name="692a952c-b6bf-298b-1f46-65ff36dcc72b" />
    </api>
    <api id="Properties.T:System.Data.IDbDataAdapter">
      <topicdata name="IDbDataAdapter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
        <element api="P:System.Data.IDbDataAdapter.DeleteCommand" />
        <element api="P:System.Data.IDbDataAdapter.InsertCommand" />
        <element api="P:System.Data.IDbDataAdapter.SelectCommand" />
        <element api="P:System.Data.IDbDataAdapter.UpdateCommand" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" />
      </containers>
      <file name="b4a26729-e16e-5b05-e45e-4969d7423b36" />
    </api>
    <api id="P:System.Data.IDbDataAdapter.DeleteCommand">
      <topicdata group="api" />
      <apidata name="DeleteCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteCommand" />
      <setter name="set_DeleteCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
      <file name="f8ce24f6-7b89-f5e1-081d-c6cd010e075e" />
    </api>
    <api id="P:System.Data.IDbDataAdapter.InsertCommand">
      <topicdata group="api" />
      <apidata name="InsertCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InsertCommand" />
      <setter name="set_InsertCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
      <file name="cbaa8f9d-3d2d-a224-f3e4-ca6ff93ac8cd" />
    </api>
    <api id="P:System.Data.IDbDataAdapter.SelectCommand">
      <topicdata group="api" />
      <apidata name="SelectCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SelectCommand" />
      <setter name="set_SelectCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
      <file name="81c7689e-3fb2-93ec-c4d8-04e5ed519bab" />
    </api>
    <api id="P:System.Data.IDbDataAdapter.UpdateCommand">
      <topicdata group="api" />
      <apidata name="UpdateCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateCommand" />
      <setter name="set_UpdateCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
      <file name="5639cc71-c079-95ed-a70a-dfab7436eed9" />
    </api>
    <api id="T:System.Data.IDbDataParameter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDbDataParameter" />
      <apidata name="IDbDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataParameter" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbParameter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcParameter" ref="true" />
        <type api="T:System.Data.Common.DbParameter" ref="true" />
        <type api="T:System.Data.EntityClient.EntityParameter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleParameter" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="db4affd4-6004-444c-1e5d-1a84115674cc" />
    </api>
    <api id="AllMembers.T:System.Data.IDbDataParameter">
      <topicdata name="IDbDataParameter" group="list" subgroup="members" typeTopicId="T:System.Data.IDbDataParameter" />
      <apidata name="IDbDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
        <element api="P:System.Data.IDbDataParameter.Precision" />
        <element api="P:System.Data.IDbDataParameter.Scale" />
        <element api="P:System.Data.IDbDataParameter.Size" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" />
      </containers>
      <file name="b3e2921c-7176-6235-585e-5ef440e0f179" />
    </api>
    <api id="Properties.T:System.Data.IDbDataParameter">
      <topicdata name="IDbDataParameter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbDataParameter" />
      <apidata name="IDbDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
        <element api="P:System.Data.IDbDataParameter.Precision" />
        <element api="P:System.Data.IDbDataParameter.Scale" />
        <element api="P:System.Data.IDbDataParameter.Size" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" />
      </containers>
      <file name="5f26cdcd-5466-d5d5-114e-6b2132621af6" />
    </api>
    <api id="P:System.Data.IDbDataParameter.Precision">
      <topicdata group="api" />
      <apidata name="Precision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Precision" />
      <setter name="set_Precision" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
      <file name="f96158f5-f1b6-c708-2b9a-689609dd9512" />
    </api>
    <api id="P:System.Data.IDbDataParameter.Scale">
      <topicdata group="api" />
      <apidata name="Scale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Scale" />
      <setter name="set_Scale" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
      <file name="ec632a48-6fb1-2bc1-0a45-5285b9f5a0b3" />
    </api>
    <api id="P:System.Data.IDbDataParameter.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
      <file name="3e6b9744-fedb-d5ae-532d-5e3381a446dc" />
    </api>
    <api id="T:System.Data.IDbTransaction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DbTransaction" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="fad404c3-5bc8-1e07-ce57-84261816258c" />
    </api>
    <api id="AllMembers.T:System.Data.IDbTransaction">
      <topicdata name="IDbTransaction" group="list" subgroup="members" typeTopicId="T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDbTransaction.Commit" />
        <element api="P:System.Data.IDbTransaction.Connection" />
        <element api="P:System.Data.IDbTransaction.IsolationLevel" />
        <element api="M:System.Data.IDbTransaction.Rollback" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" />
      </containers>
      <file name="868b5e9f-3053-b782-b067-66bae5266ea7" />
    </api>
    <api id="Methods.T:System.Data.IDbTransaction">
      <topicdata name="IDbTransaction" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Data.IDbTransaction.Commit" />
        <element api="M:System.Data.IDbTransaction.Rollback" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" />
      </containers>
      <file name="fea48887-3352-f49e-3d08-dc29ac4a5435" />
    </api>
    <api id="Properties.T:System.Data.IDbTransaction">
      <topicdata name="IDbTransaction" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbTransaction.Connection" />
        <element api="P:System.Data.IDbTransaction.IsolationLevel" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" />
      </containers>
      <file name="0541d25b-2c8d-2001-7308-a0f0704f298b" />
    </api>
    <api id="M:System.Data.IDbTransaction.Commit">
      <topicdata group="api" />
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
      <file name="c1344826-690c-a44b-93ef-f612a7be7961" />
    </api>
    <api id="P:System.Data.IDbTransaction.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
      <file name="af636f8c-7372-e9ad-50c0-66650389f428" />
    </api>
    <api id="P:System.Data.IDbTransaction.IsolationLevel">
      <topicdata group="api" />
      <apidata name="IsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsolationLevel" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
      <file name="6d2d2479-67d1-6d72-c620-7cc3df32d74f" />
    </api>
    <api id="M:System.Data.IDbTransaction.Rollback">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
      <file name="97b8ba80-6a0a-4848-5bcf-ab00016a5546" />
    </api>
    <api id="T:System.Data.IExtendedDataRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataRecord" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.EntityClient.EntityDataReader" ref="true" />
        <type api="T:System.Data.Objects.DbUpdatableDataRecord" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="4d58a174-003d-8b4d-3146-12ca9ac161bf" />
    </api>
    <api id="AllMembers.T:System.Data.IExtendedDataRecord">
      <topicdata name="IExtendedDataRecord" group="list" subgroup="members" typeTopicId="T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="Overload:System.Data.IExtendedDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
        <element api="P:System.Data.IExtendedDataRecord.DataRecordInfo" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" />
      </containers>
      <file name="2d5f4839-40cd-f712-0805-a49cbc2c70c6" />
    </api>
    <api id="Methods.T:System.Data.IExtendedDataRecord">
      <topicdata name="IExtendedDataRecord" group="list" subgroup="Methods" typeTopicId="T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" />
      </containers>
      <file name="d26232f5-07ab-5d1e-4c56-1ab5424c30f6" />
    </api>
    <api id="Properties.T:System.Data.IExtendedDataRecord">
      <topicdata name="IExtendedDataRecord" group="list" subgroup="Properties" typeTopicId="T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IExtendedDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
        <element api="P:System.Data.IExtendedDataRecord.DataRecordInfo" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" />
      </containers>
      <file name="9ae6ba36-df25-72a9-50fa-be9eb7b2f433" />
    </api>
    <api id="P:System.Data.IExtendedDataRecord.DataRecordInfo">
      <topicdata group="api" />
      <apidata name="DataRecordInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataRecordInfo" />
      <returns>
        <type api="T:System.Data.Common.DataRecordInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
      <file name="511b7316-ec97-2089-1016-d7b46e659c23" />
    </api>
    <api id="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
      <file name="3a78285d-a126-3e3a-106a-75da0781ae32" />
    </api>
    <api id="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.DbDataRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
      <file name="9cc0be55-0072-f178-7753-e4e3ea9e67d2" />
    </api>
    <api id="T:System.Data.InRowChangingEventException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="9a9de934-7e9d-d8e4-c8fd-5019f4008d1b" />
    </api>
    <api id="AllMembers.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="members" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.InRowChangingEventException.#ctor">
          <element api="M:System.Data.InRowChangingEventException.#ctor" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.String)" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
      <file name="03b7a3d6-2671-e57b-efac-b28596c23af9" />
    </api>
    <api id="Methods.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
      <file name="d5f30802-2ba2-6087-96a1-c575a0c649ca" />
    </api>
    <api id="Properties.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
      <file name="8462f0ce-c381-5a91-d970-eb10826659da" />
    </api>
    <api id="Events.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Events" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
      <file name="ab2645b5-7c96-3443-73cf-0a40d7f33af9" />
    </api>
    <api id="Overload:System.Data.InRowChangingEventException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.InRowChangingEventException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InRowChangingEventException.#ctor" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.String)" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
      <file name="9647682a-e7cb-ed0f-820e-12c99feced75" />
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
      <file name="3704543e-403c-7bc7-d357-22357cd2365e" />
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
      <file name="b35c7795-fe34-f795-c827-f3f3c57fd8c6" />
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
      <file name="0324e7fc-da69-900f-bb0f-a2e2b0f6529e" />
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
      <file name="d58a234c-2dd3-6575-9504-f85b988ce35e" />
    </api>
    <api id="T:System.Data.InternalDataCollectionBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.ConstraintCollection" ref="true" />
          <type api="T:System.Data.DataColumnCollection" ref="true" />
          <type api="T:System.Data.DataRelationCollection" ref="true" />
          <type api="T:System.Data.DataRowCollection" ref="true" />
          <type api="T:System.Data.DataTableCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="6fce3d9e-e262-6e90-7135-61a091d3674d" />
    </api>
    <api id="AllMembers.T:System.Data.InternalDataCollectionBase">
      <topicdata name="InternalDataCollectionBase" group="list" subgroup="members" typeTopicId="T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.InternalDataCollectionBase.#ctor" />
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" />
      </containers>
      <file name="872dda59-93de-dbe4-0a8f-3d939065ee0f" />
    </api>
    <api id="Methods.T:System.Data.InternalDataCollectionBase">
      <topicdata name="InternalDataCollectionBase" group="list" subgroup="Methods" typeTopicId="T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" />
      </containers>
      <file name="6b3008f4-a6ac-22f9-60fb-5f2c8fdb98b0" />
    </api>
    <api id="Properties.T:System.Data.InternalDataCollectionBase">
      <topicdata name="InternalDataCollectionBase" group="list" subgroup="Properties" typeTopicId="T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <elements>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" />
      </containers>
      <file name="8e758d5b-54b5-e461-cf57-939ea0abb0fe" />
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <file name="e2fcf421-27a9-5fa9-7c7b-ff43c7c5017d" />
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <file name="712bf54b-4ddd-7074-7390-6e877446081a" />
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f9dc3bc3-8a2c-1b4d-56dc-71958b84a1ce" />
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <file name="f6907ebf-fb85-4b7a-7f41-3b37bd086054" />
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="41ca05d6-380c-d203-a79a-12be5731f76a" />
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e7b612a0-3fa5-786b-eb5c-6cd128fcfcda" />
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.List">
      <topicdata group="api" />
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_List" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <file name="ce2a4c37-20bd-14ba-e63c-fa2a5fa94860" />
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="628328db-852f-0c86-fc7e-ddd19e909572" />
    </api>
    <api id="T:System.Data.InvalidCommandTreeException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="cd6c75cd-e3d4-f8ff-50f4-8102bff9ed42" />
    </api>
    <api id="AllMembers.T:System.Data.InvalidCommandTreeException">
      <topicdata name="InvalidCommandTreeException" group="list" subgroup="members" typeTopicId="T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.InvalidCommandTreeException.#ctor">
          <element api="M:System.Data.InvalidCommandTreeException.#ctor" />
          <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" />
      </containers>
      <file name="3198fcf7-168b-c1e2-305d-908951675bf5" />
    </api>
    <api id="Methods.T:System.Data.InvalidCommandTreeException">
      <topicdata name="InvalidCommandTreeException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" />
      </containers>
      <file name="f3c3b3f3-6524-c5b6-155d-011cb190e882" />
    </api>
    <api id="Properties.T:System.Data.InvalidCommandTreeException">
      <topicdata name="InvalidCommandTreeException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" />
      </containers>
      <file name="8efc59c5-d379-7438-f1fa-d613492340c7" />
    </api>
    <api id="Overload:System.Data.InvalidCommandTreeException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.InvalidCommandTreeException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidCommandTreeException.#ctor" />
        <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
      <file name="bbc83cc8-5b12-93ce-b563-34d766135a11" />
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
      <file name="0dc6500d-627a-677d-528b-5d292d38c9ba" />
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
      <file name="467fa181-c04c-9e1d-b934-b821e0f4978c" />
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
      <file name="394d7621-fa64-dcca-2c35-fbaa9a329439" />
    </api>
    <api id="T:System.Data.InvalidConstraintException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="2ea8272a-d689-dc67-f8f2-07c267da9558" />
    </api>
    <api id="AllMembers.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="members" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.InvalidConstraintException.#ctor">
          <element api="M:System.Data.InvalidConstraintException.#ctor" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
      <file name="9001deb5-0fd6-de66-ccd8-c494d8faf5d1" />
    </api>
    <api id="Methods.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
      <file name="169039c0-dac3-3553-8ef4-57d65f926ae5" />
    </api>
    <api id="Properties.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
      <file name="454243f9-ea97-0828-434f-c344296e8959" />
    </api>
    <api id="Events.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Events" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
      <file name="f09693e5-448a-ede8-5136-9f9e4bf0e980" />
    </api>
    <api id="Overload:System.Data.InvalidConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.InvalidConstraintException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidConstraintException.#ctor" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
      <file name="d2bd0689-2b60-38dc-a711-10be35738846" />
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
      <file name="4178e6bf-07b2-9447-572a-45b8170adeef" />
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
      <file name="50e869d5-f99f-c623-5633-8dc28857074a" />
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
      <file name="4668aea3-e106-dd58-fba2-c2eb592ec7a0" />
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
      <file name="4f170bb1-b8d9-eb85-4a80-cb36e005e588" />
    </api>
    <api id="T:System.Data.InvalidExpressionException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EvaluateException" ref="true" />
          <type api="T:System.Data.SyntaxErrorException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="ace39f5e-77c3-075d-cad0-a462a0b65932" />
    </api>
    <api id="AllMembers.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="members" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.InvalidExpressionException.#ctor">
          <element api="M:System.Data.InvalidExpressionException.#ctor" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
      <file name="ad09fcb4-dbd4-5e1f-057e-b1c306048ff7" />
    </api>
    <api id="Methods.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
      <file name="5bc32b2c-f3af-f8c8-6793-a63f6dce4aa4" />
    </api>
    <api id="Properties.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
      <file name="2da3da74-af85-f220-e7f5-b5e00f334221" />
    </api>
    <api id="Events.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Events" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
      <file name="435c2506-38a7-f73f-3746-f92c5c2d4c16" />
    </api>
    <api id="Overload:System.Data.InvalidExpressionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.InvalidExpressionException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidExpressionException.#ctor" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
      <file name="dfc9118f-113a-4970-97f4-edece8f6d95b" />
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
      <file name="038eaa9a-cc14-777d-29dc-2f6e596ba3ac" />
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
      <file name="6a898127-4b79-6aa2-5588-6372297bebbf" />
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
      <file name="99457e30-aaf1-8a7f-5ae5-34b4ae7bc039" />
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
      <file name="d26612ef-9ce8-56f8-4815-db1d63a7b6ad" />
    </api>
    <api id="T:System.Data.IsolationLevel">
      <topicdata group="api" />
      <apidata name="IsolationLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.IsolationLevel.Unspecified" />
        <element api="F:System.Data.IsolationLevel.Chaos" />
        <element api="F:System.Data.IsolationLevel.ReadUncommitted" />
        <element api="F:System.Data.IsolationLevel.ReadCommitted" />
        <element api="F:System.Data.IsolationLevel.RepeatableRead" />
        <element api="F:System.Data.IsolationLevel.Serializable" />
        <element api="F:System.Data.IsolationLevel.Snapshot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="83ccf7cb-7ed6-be54-1601-710a22b45ce7" />
    </api>
    <api id="F:System.Data.IsolationLevel.Chaos">
      <topicdata group="api" notopic="" />
      <apidata name="Chaos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="9c0d8fe6-15eb-c350-b541-f08a70941599" />
    </api>
    <api id="F:System.Data.IsolationLevel.ReadCommitted">
      <topicdata group="api" notopic="" />
      <apidata name="ReadCommitted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="8355b459-f3d9-4ff6-2108-fb6495b4fbc1" />
    </api>
    <api id="F:System.Data.IsolationLevel.ReadUncommitted">
      <topicdata group="api" notopic="" />
      <apidata name="ReadUncommitted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="eb3515d7-cde1-0702-41d4-e071abd15964" />
    </api>
    <api id="F:System.Data.IsolationLevel.RepeatableRead">
      <topicdata group="api" notopic="" />
      <apidata name="RepeatableRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="0bb2e18e-9ee7-efcf-f4f8-628b5c06447d" />
    </api>
    <api id="F:System.Data.IsolationLevel.Serializable">
      <topicdata group="api" notopic="" />
      <apidata name="Serializable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="4d5101bd-fa0d-9f5c-ac3b-65b73ab66882" />
    </api>
    <api id="F:System.Data.IsolationLevel.Snapshot">
      <topicdata group="api" notopic="" />
      <apidata name="Snapshot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="b0f67862-754e-605c-2bb2-c70a7293c321" />
    </api>
    <api id="F:System.Data.IsolationLevel.Unspecified">
      <topicdata group="api" notopic="" />
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
      <file name="79c82ab1-ef78-f759-65fd-bc4c7ae1b4ea" />
    </api>
    <api id="T:System.Data.ITableMapping">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ITableMapping" />
      <apidata name="ITableMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Common.DataTableMapping" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="8b75dea1-8c9c-91fc-4405-dec43da685ab" />
    </api>
    <api id="AllMembers.T:System.Data.ITableMapping">
      <topicdata name="ITableMapping" group="list" subgroup="members" typeTopicId="T:System.Data.ITableMapping" />
      <apidata name="ITableMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.ITableMapping.ColumnMappings" />
        <element api="P:System.Data.ITableMapping.DataSetTable" />
        <element api="P:System.Data.ITableMapping.SourceTable" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" />
      </containers>
      <file name="4cc8433d-bb1e-e556-8dbc-fc6ce19c00f2" />
    </api>
    <api id="Properties.T:System.Data.ITableMapping">
      <topicdata name="ITableMapping" group="list" subgroup="Properties" typeTopicId="T:System.Data.ITableMapping" />
      <apidata name="ITableMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.ITableMapping.ColumnMappings" />
        <element api="P:System.Data.ITableMapping.DataSetTable" />
        <element api="P:System.Data.ITableMapping.SourceTable" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" />
      </containers>
      <file name="75ccd966-22ef-59b1-e641-70141cfdce09" />
    </api>
    <api id="P:System.Data.ITableMapping.ColumnMappings">
      <topicdata group="api" />
      <apidata name="ColumnMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ColumnMappings" />
      <returns>
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
      <file name="65a71a04-aacf-7cc8-2123-323ac02bfd05" />
    </api>
    <api id="P:System.Data.ITableMapping.DataSetTable">
      <topicdata group="api" />
      <apidata name="DataSetTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetTable" />
      <setter name="set_DataSetTable" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
      <file name="48226d6f-a3d5-c2c1-85a5-a588050791e5" />
    </api>
    <api id="P:System.Data.ITableMapping.SourceTable">
      <topicdata group="api" />
      <apidata name="SourceTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceTable" />
      <setter name="set_SourceTable" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
      <file name="400d6e3c-8b95-d16e-d409-e5d301fb49ec" />
    </api>
    <api id="T:System.Data.ITableMappingCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DataTableMappingCollection" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="e2f3ab27-c6ec-a8ea-ac78-70ec42d8f157" />
    </api>
    <api id="AllMembers.T:System.Data.ITableMappingCollection">
      <topicdata name="ITableMappingCollection" group="list" subgroup="members" typeTopicId="T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="Overload:System.Data.ITableMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.ITableMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.ITableMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.ITableMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" />
      </containers>
      <file name="678469e7-15a3-7d16-795b-5097f746bffb" />
    </api>
    <api id="Methods.T:System.Data.ITableMappingCollection">
      <topicdata name="ITableMappingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="Overload:System.Data.ITableMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.IList.Clear" />
        <element api="Overload:System.Data.ITableMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.ITableMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" />
      </containers>
      <file name="fcacee08-7dcc-1a5e-9803-a116d0fe1648" />
    </api>
    <api id="Properties.T:System.Data.ITableMappingCollection">
      <topicdata name="ITableMappingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.ITableMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" />
      </containers>
      <file name="0412e15f-c1f4-1d2c-3397-00242fe374e8" />
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="c64f964a-a8ea-c6a7-0687-37f4c125e9c0" />
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="f81b07b9-f4eb-4c29-c694-172c7b4ab554" />
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="edd4aa79-a1fe-7e47-1d1f-6bc583259e3c" />
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="b68181ce-b71d-6ee1-6eb7-5b09b0609c4e" />
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ITableMappingCollection" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="91907c90-6df2-e62f-c382-7e5f3c3c59f5" />
    </api>
    <api id="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataSetTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.ITableMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="eb66a7aa-2435-2092-1346-ec6d5cb0d46f" />
    </api>
    <api id="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="04ddbb0c-5718-acdf-bfe7-005bb0c4adea" />
    </api>
    <api id="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <topicdata group="api" />
      <apidata name="GetByDataSetTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSetTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.ITableMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="c53be5fa-f411-b634-47c0-39fd68424f42" />
    </api>
    <api id="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="6b3169cd-cbae-517d-8ea1-2b454abfd952" />
    </api>
    <api id="P:System.Data.ITableMappingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="7b0b433c-8b50-823b-dc3b-ccc02b6618c2" />
    </api>
    <api id="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
      <file name="fb13b042-f5e3-37e3-4678-13f6e4cbb5d8" />
    </api>
    <api id="T:System.Data.KeyRestrictionBehavior">
      <topicdata group="api" />
      <apidata name="KeyRestrictionBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Data.KeyRestrictionBehavior.AllowOnly" />
        <element api="F:System.Data.KeyRestrictionBehavior.PreventUsage" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="a3465e82-dbc7-6d68-eb83-821b58d55f85" />
    </api>
    <api id="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <topicdata group="api" notopic="" />
      <apidata name="AllowOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </containers>
      <file name="d43f12e8-109c-a261-bee1-a41e9cd00a4d" />
    </api>
    <api id="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <topicdata group="api" notopic="" />
      <apidata name="PreventUsage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </containers>
      <file name="ff10a4a2-7294-a2a5-80b0-f78e11115fce" />
    </api>
    <api id="T:System.Data.LoadOption">
      <topicdata group="api" />
      <apidata name="LoadOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.LoadOption.OverwriteChanges" />
        <element api="F:System.Data.LoadOption.PreserveChanges" />
        <element api="F:System.Data.LoadOption.Upsert" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="87d20eb1-e9ab-f537-35d7-b4d05c7df5c2" />
    </api>
    <api id="F:System.Data.LoadOption.OverwriteChanges">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
      <file name="728ab4fe-53bb-97ee-8d39-8dfbf3b101d4" />
    </api>
    <api id="F:System.Data.LoadOption.PreserveChanges">
      <topicdata group="api" notopic="" />
      <apidata name="PreserveChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
      <file name="81635784-fc78-43b3-97f6-f11044bf0b21" />
    </api>
    <api id="F:System.Data.LoadOption.Upsert">
      <topicdata group="api" notopic="" />
      <apidata name="Upsert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
      <file name="a9c2b20d-7925-2e10-b86e-c6df154588dc" />
    </api>
    <api id="T:System.Data.MappingException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="346d691c-f9de-dfe9-a07f-b3c3911c40b5" />
    </api>
    <api id="AllMembers.T:System.Data.MappingException">
      <topicdata name="MappingException" group="list" subgroup="members" typeTopicId="T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.MappingException.#ctor">
          <element api="M:System.Data.MappingException.#ctor" />
          <element api="M:System.Data.MappingException.#ctor(System.String)" />
          <element api="M:System.Data.MappingException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" />
      </containers>
      <file name="b09470e1-ca4e-b905-0104-110713a929fc" />
    </api>
    <api id="Methods.T:System.Data.MappingException">
      <topicdata name="MappingException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" />
      </containers>
      <file name="b5fa9b9e-70d4-ffaf-805c-0cf4079d7499" />
    </api>
    <api id="Properties.T:System.Data.MappingException">
      <topicdata name="MappingException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" />
      </containers>
      <file name="a979403e-787e-3e32-1de5-b0de78ef9998" />
    </api>
    <api id="Overload:System.Data.MappingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.MappingException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MappingException.#ctor" />
        <element api="M:System.Data.MappingException.#ctor(System.String)" />
        <element api="M:System.Data.MappingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
      <file name="c424c9dc-5262-63a0-0b8a-c05444277875" />
    </api>
    <api id="M:System.Data.MappingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
      <file name="4df8610e-ca56-5edd-4e4f-8cbfba4c4605" />
    </api>
    <api id="M:System.Data.MappingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
      <file name="66bb80b6-040e-9767-9ca9-6b1bb8f9e933" />
    </api>
    <api id="M:System.Data.MappingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
      <file name="9bc25a19-1c79-d80e-4745-5f5d7a855b62" />
    </api>
    <api id="T:System.Data.MappingType">
      <topicdata group="api" />
      <apidata name="MappingType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Data.MappingType.Element" />
        <element api="F:System.Data.MappingType.Attribute" />
        <element api="F:System.Data.MappingType.SimpleContent" />
        <element api="F:System.Data.MappingType.Hidden" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="9001df04-2bc3-2462-1554-fdabfd702be3" />
    </api>
    <api id="F:System.Data.MappingType.Attribute">
      <topicdata group="api" notopic="" />
      <apidata name="Attribute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
      <file name="c43e4da1-0f50-540f-fe0d-7574fc4f33ad" />
    </api>
    <api id="F:System.Data.MappingType.Element">
      <topicdata group="api" notopic="" />
      <apidata name="Element" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
      <file name="153c8805-378c-be61-5543-71315fa6d865" />
    </api>
    <api id="F:System.Data.MappingType.Hidden">
      <topicdata group="api" notopic="" />
      <apidata name="Hidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
      <file name="8d741272-be90-0d78-8364-951d5b66a40d" />
    </api>
    <api id="F:System.Data.MappingType.SimpleContent">
      <topicdata group="api" notopic="" />
      <apidata name="SimpleContent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
      <file name="63d65e7c-200d-bf83-0e2a-ae79d53a601a" />
    </api>
    <api id="T:System.Data.MergeFailedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="3496c426-2d0f-1f34-617e-6571565fef63" />
    </api>
    <api id="AllMembers.T:System.Data.MergeFailedEventArgs">
      <topicdata name="MergeFailedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)" />
        <element api="P:System.Data.MergeFailedEventArgs.Conflict" />
        <element api="P:System.Data.MergeFailedEventArgs.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" />
      </containers>
      <file name="ad0f45e4-e437-7a7c-cf4f-822dc7bd70e6" />
    </api>
    <api id="Methods.T:System.Data.MergeFailedEventArgs">
      <topicdata name="MergeFailedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" />
      </containers>
      <file name="340de725-6ae2-85d2-9ddd-a657b06fe5b4" />
    </api>
    <api id="Properties.T:System.Data.MergeFailedEventArgs">
      <topicdata name="MergeFailedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.MergeFailedEventArgs.Conflict" />
        <element api="P:System.Data.MergeFailedEventArgs.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" />
      </containers>
      <file name="81cb2185-8494-2dfc-3458-dca88e808e43" />
    </api>
    <api id="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="conflict">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
      <file name="7ff01676-c3be-2a6d-5b67-c76e5de4c584" />
    </api>
    <api id="P:System.Data.MergeFailedEventArgs.Conflict">
      <topicdata group="api" />
      <apidata name="Conflict" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Conflict" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
      <file name="8a7e4420-9c6e-fd14-515f-8a3b2beaacc2" />
    </api>
    <api id="P:System.Data.MergeFailedEventArgs.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
      <file name="3214a55d-0b83-aa72-77be-467819a4ba5c" />
    </api>
    <api id="T:System.Data.MergeFailedEventHandler">
      <topicdata group="api" />
      <apidata name="MergeFailedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="70e5c364-6f1b-8227-39f2-a1e6b62102ec" />
    </api>
    <api id="T:System.Data.MetadataException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="480742d6-668f-ae85-ba9d-40a6b3d4e4a9" />
    </api>
    <api id="AllMembers.T:System.Data.MetadataException">
      <topicdata name="MetadataException" group="list" subgroup="members" typeTopicId="T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.MetadataException.#ctor">
          <element api="M:System.Data.MetadataException.#ctor" />
          <element api="M:System.Data.MetadataException.#ctor(System.String)" />
          <element api="M:System.Data.MetadataException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" />
      </containers>
      <file name="3570fea2-1ba1-3a58-fec0-a3a34e71b474" />
    </api>
    <api id="Methods.T:System.Data.MetadataException">
      <topicdata name="MetadataException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" />
      </containers>
      <file name="565012dd-43df-637e-736e-0d0e3e10837c" />
    </api>
    <api id="Properties.T:System.Data.MetadataException">
      <topicdata name="MetadataException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" />
      </containers>
      <file name="635da3f6-edbd-aab3-df25-11803e4aa04d" />
    </api>
    <api id="Overload:System.Data.MetadataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.MetadataException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MetadataException.#ctor" />
        <element api="M:System.Data.MetadataException.#ctor(System.String)" />
        <element api="M:System.Data.MetadataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
      <file name="16c7af89-480e-a645-7c48-5f0cf4531dc9" />
    </api>
    <api id="M:System.Data.MetadataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
      <file name="eef5005d-e6a9-7f4b-7360-755f4cfa4a80" />
    </api>
    <api id="M:System.Data.MetadataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
      <file name="4cee10eb-7591-8789-28e5-c7676bf98c40" />
    </api>
    <api id="M:System.Data.MetadataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
      <file name="727d0105-679e-6651-bd64-271a35a78278" />
    </api>
    <api id="T:System.Data.MissingMappingAction">
      <topicdata group="api" />
      <apidata name="MissingMappingAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.MissingMappingAction.Passthrough" />
        <element api="F:System.Data.MissingMappingAction.Ignore" />
        <element api="F:System.Data.MissingMappingAction.Error" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b07c52df-ca9d-76ec-c1d4-532eb7c46896" />
    </api>
    <api id="F:System.Data.MissingMappingAction.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
      <file name="53cbc4c2-e35f-1e2e-d081-12e2c9b2c007" />
    </api>
    <api id="F:System.Data.MissingMappingAction.Ignore">
      <topicdata group="api" notopic="" />
      <apidata name="Ignore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
      <file name="96fc84e7-b515-64aa-3967-24ad906ecb03" />
    </api>
    <api id="F:System.Data.MissingMappingAction.Passthrough">
      <topicdata group="api" notopic="" />
      <apidata name="Passthrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
      <file name="577d4e9f-c1d6-1a84-3138-e9f2ca369039" />
    </api>
    <api id="T:System.Data.MissingPrimaryKeyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="6922b494-0179-5be8-73d4-f30841515602" />
    </api>
    <api id="AllMembers.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="members" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.MissingPrimaryKeyException.#ctor">
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
      <file name="12bfad42-d399-9c33-ab89-18c006d7e6a0" />
    </api>
    <api id="Methods.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
      <file name="a725c908-dfda-1cf0-eaab-5051d592eb46" />
    </api>
    <api id="Properties.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
      <file name="9e1ffdd7-7713-286c-c301-e778bcec9433" />
    </api>
    <api id="Events.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Events" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
      <file name="36c555e8-8343-db24-1861-3b36077a7651" />
    </api>
    <api id="Overload:System.Data.MissingPrimaryKeyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.MissingPrimaryKeyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
      <file name="8fa42708-6de6-aa6a-1d19-0c129a8c0831" />
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
      <file name="8d020594-64a5-ca26-dd23-693e6dcbd57f" />
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
      <file name="42e42d1e-54a3-8b9c-1c8d-9b24aa61f599" />
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
      <file name="6194b2cd-0e60-55bb-3e15-8f537439c82f" />
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
      <file name="62253280-a198-c56d-edb3-3ea92fce5642" />
    </api>
    <api id="T:System.Data.MissingSchemaAction">
      <topicdata group="api" />
      <apidata name="MissingSchemaAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.MissingSchemaAction.Add" />
        <element api="F:System.Data.MissingSchemaAction.Ignore" />
        <element api="F:System.Data.MissingSchemaAction.Error" />
        <element api="F:System.Data.MissingSchemaAction.AddWithKey" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="c2dba454-8bdd-e693-5cc0-c44701b68a00" />
    </api>
    <api id="F:System.Data.MissingSchemaAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
      <file name="2b37f75c-4ce5-cef3-f5b5-2b37065420fd" />
    </api>
    <api id="F:System.Data.MissingSchemaAction.AddWithKey">
      <topicdata group="api" notopic="" />
      <apidata name="AddWithKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
      <file name="ff799d6f-5f98-2966-5c5d-03c68ea9186b" />
    </api>
    <api id="F:System.Data.MissingSchemaAction.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
      <file name="3bfae6b2-113f-15fb-cff0-426fb1e9fd8e" />
    </api>
    <api id="F:System.Data.MissingSchemaAction.Ignore">
      <topicdata group="api" notopic="" />
      <apidata name="Ignore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
      <file name="89d6cb14-0c37-9963-9ad6-e22418addd6f" />
    </api>
    <api id="T:System.Data.NoNullAllowedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="7c440880-85c2-8a96-60e6-357a545a2aae" />
    </api>
    <api id="AllMembers.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="members" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.NoNullAllowedException.#ctor">
          <element api="M:System.Data.NoNullAllowedException.#ctor" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.String)" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
      <file name="5c8a731d-d4f5-3aa2-9ed6-46c507e26465" />
    </api>
    <api id="Methods.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Methods" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
      <file name="7453a68d-9a8f-c1a6-f084-4f4ae4e051f7" />
    </api>
    <api id="Properties.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Properties" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
      <file name="33f4a69c-39f5-3534-7f95-9de51c8ec139" />
    </api>
    <api id="Events.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Events" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
      <file name="41e18b00-b710-dbbf-1d13-1b5331e875a7" />
    </api>
    <api id="Overload:System.Data.NoNullAllowedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.NoNullAllowedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.NoNullAllowedException.#ctor" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.String)" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
      <file name="66514c95-792f-f39d-f721-f0d93b5419ea" />
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
      <file name="97507ee4-9be9-a31b-8e2d-78dfbcdb29a0" />
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
      <file name="596b2322-afae-7026-e297-ad21750bb4ca" />
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
      <file name="aa3be554-bbdc-631b-c756-632e622f407a" />
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
      <file name="89177ec0-34a8-21f5-e8f2-49b2cac9d53c" />
    </api>
    <api id="T:System.Data.ObjectNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="08f138f4-b568-bc28-b6c7-55e607aa7b02" />
    </api>
    <api id="AllMembers.T:System.Data.ObjectNotFoundException">
      <topicdata name="ObjectNotFoundException" group="list" subgroup="members" typeTopicId="T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.ObjectNotFoundException.#ctor">
          <element api="M:System.Data.ObjectNotFoundException.#ctor" />
          <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String)" />
          <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" />
      </containers>
      <file name="c7953e8d-04bc-dc02-5633-4c35b055a382" />
    </api>
    <api id="Methods.T:System.Data.ObjectNotFoundException">
      <topicdata name="ObjectNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" />
      </containers>
      <file name="ff91f185-4bca-bc90-d124-0e022f718074" />
    </api>
    <api id="Properties.T:System.Data.ObjectNotFoundException">
      <topicdata name="ObjectNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" />
      </containers>
      <file name="7409a138-e3f8-2921-3ed9-e8f799078b24" />
    </api>
    <api id="Overload:System.Data.ObjectNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ObjectNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ObjectNotFoundException.#ctor" />
        <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String)" />
        <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
      <file name="08408c02-5996-0752-6634-dbe1619426c5" />
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
      <file name="a08064c4-ac29-98ef-85d0-05febc5dba4c" />
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
      <file name="1de1593f-c800-3640-8509-190ecf126ef7" />
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
      <file name="b20f56ee-2a6d-41fc-beac-51bee64610b9" />
    </api>
    <api id="T:System.Data.OperationAbortedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="97683a65-34c5-1548-f7a4-55fded7b8d38" />
    </api>
    <api id="AllMembers.T:System.Data.OperationAbortedException">
      <topicdata name="OperationAbortedException" group="list" subgroup="members" typeTopicId="T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OperationAbortedException" />
      </containers>
      <file name="bfd9157b-a461-1805-b2c6-757502951848" />
    </api>
    <api id="Methods.T:System.Data.OperationAbortedException">
      <topicdata name="OperationAbortedException" group="list" subgroup="Methods" typeTopicId="T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OperationAbortedException" />
      </containers>
      <file name="44d41552-8b5e-bb4c-cf2b-138fe88d4ecc" />
    </api>
    <api id="Properties.T:System.Data.OperationAbortedException">
      <topicdata name="OperationAbortedException" group="list" subgroup="Properties" typeTopicId="T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OperationAbortedException" />
      </containers>
      <file name="c6e586fa-f4a9-c848-ecc1-aa42315e6c2f" />
    </api>
    <api id="T:System.Data.OptimisticConcurrencyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.UpdateException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="90f141fa-b3de-7cf1-6eb8-b14be87e0124" />
    </api>
    <api id="AllMembers.T:System.Data.OptimisticConcurrencyException">
      <topicdata name="OptimisticConcurrencyException" group="list" subgroup="members" typeTopicId="T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.OptimisticConcurrencyException.#ctor">
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
        </element>
        <element api="P:System.Data.UpdateException.StateEntries" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" />
      </containers>
      <file name="0b560416-f33f-64c7-6cfc-86d72a39f871" />
    </api>
    <api id="Methods.T:System.Data.OptimisticConcurrencyException">
      <topicdata name="OptimisticConcurrencyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" />
      </containers>
      <file name="70a9a3be-55bf-7a89-0fb5-af85142ac847" />
    </api>
    <api id="Properties.T:System.Data.OptimisticConcurrencyException">
      <topicdata name="OptimisticConcurrencyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.UpdateException.StateEntries" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" />
      </containers>
      <file name="24c84249-1ce8-cae6-6a68-95d942007fdf" />
    </api>
    <api id="Overload:System.Data.OptimisticConcurrencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.OptimisticConcurrencyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
      <file name="a2e26c51-06b6-0561-fac2-7991636a20a1" />
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
      <file name="caf4cd1b-3107-61c7-46aa-411e55c835e6" />
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
      <file name="82271196-45c4-758c-73e9-37a58f8de040" />
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
      <file name="cf32942f-8f87-20ca-d559-3fc5cdee4a08" />
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="stateEntries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
      <file name="be7d5807-de24-5645-3657-d768473b1be2" />
    </api>
    <api id="T:System.Data.OrderedEnumerableRowCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.OrderedEnumerableRowCollection`1" />
      <apidata name="OrderedEnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            </specialization>
          </type>
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TRow" />
      </templates>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="e6a65c80-d18a-5a06-70bc-f94e9d83881d" />
    </api>
    <api id="AllMembers.T:System.Data.OrderedEnumerableRowCollection`1">
      <topicdata name="OrderedEnumerableRowCollection" group="list" subgroup="members" typeTopicId="T:System.Data.OrderedEnumerableRowCollection`1" />
      <apidata name="OrderedEnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" />
      </containers>
      <file name="430fdf6a-328e-7067-a01d-dfc7ea6a54e7" />
    </api>
    <api id="Methods.T:System.Data.OrderedEnumerableRowCollection`1">
      <topicdata name="OrderedEnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.OrderedEnumerableRowCollection`1" />
      <apidata name="OrderedEnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" />
      </containers>
      <file name="5ee63cbf-6361-03cc-68ea-0c673a8c738a" />
    </api>
    <api id="T:System.Data.ParameterDirection">
      <topicdata group="api" />
      <apidata name="ParameterDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ParameterDirection.Input" />
        <element api="F:System.Data.ParameterDirection.Output" />
        <element api="F:System.Data.ParameterDirection.InputOutput" />
        <element api="F:System.Data.ParameterDirection.ReturnValue" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="56d4ded4-dc21-dc37-9b0d-c874eedf2bb2" />
    </api>
    <api id="F:System.Data.ParameterDirection.Input">
      <topicdata group="api" notopic="" />
      <apidata name="Input" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
      <file name="6091d5ca-7928-7b8b-7e64-53d63c299d0c" />
    </api>
    <api id="F:System.Data.ParameterDirection.InputOutput">
      <topicdata group="api" notopic="" />
      <apidata name="InputOutput" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
      <file name="a0a7e740-1c8f-e8b5-204c-21f86cb13692" />
    </api>
    <api id="F:System.Data.ParameterDirection.Output">
      <topicdata group="api" notopic="" />
      <apidata name="Output" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
      <file name="edf80bfe-1572-aff9-18b7-867db89aeb13" />
    </api>
    <api id="F:System.Data.ParameterDirection.ReturnValue">
      <topicdata group="api" notopic="" />
      <apidata name="ReturnValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
      <file name="417b8b93-3504-ebaf-a513-9ba8bcf1a14f" />
    </api>
    <api id="T:System.Data.PropertyAttributes">
      <topicdata group="api" />
      <apidata name="PropertyAttributes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.PropertyAttributes.NotSupported" />
        <element api="F:System.Data.PropertyAttributes.Required" />
        <element api="F:System.Data.PropertyAttributes.Optional" />
        <element api="F:System.Data.PropertyAttributes.Read" />
        <element api="F:System.Data.PropertyAttributes.Write" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PropertyAttributes has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="77615319-cc30-8c09-301a-701f4eaf200d" />
    </api>
    <api id="F:System.Data.PropertyAttributes.NotSupported">
      <topicdata group="api" notopic="" />
      <apidata name="NotSupported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </containers>
      <file name="a0331eb7-4f93-f9d0-7046-70264d05e890" />
    </api>
    <api id="F:System.Data.PropertyAttributes.Optional">
      <topicdata group="api" notopic="" />
      <apidata name="Optional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </containers>
      <file name="de22ea8b-b426-5365-0b2f-c2c901f2348f" />
    </api>
    <api id="F:System.Data.PropertyAttributes.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </containers>
      <file name="56388ad7-b672-97f8-2752-fdf4de227075" />
    </api>
    <api id="F:System.Data.PropertyAttributes.Required">
      <topicdata group="api" notopic="" />
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </containers>
      <file name="70c1ffd4-d076-e900-e3f4-d6dc05326275" />
    </api>
    <api id="F:System.Data.PropertyAttributes.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyAttributes" ref="false" />
      </containers>
      <file name="9a62c254-443c-66f1-9024-b029c4455131" />
    </api>
    <api id="T:System.Data.PropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="f3a8023c-3ec3-4e97-db8b-fd1e35f7a607" />
    </api>
    <api id="AllMembers.T:System.Data.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="members" typeTopicId="T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Collections.Hashtable.Values" />
        <element api="Overload:System.Data.PropertyCollection.#ctor">
          <element api="M:System.Data.PropertyCollection.#ctor" />
          <element api="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.PropertyCollection.Clone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" />
      </containers>
      <file name="4a7df558-ca71-cdf3-c697-52015c60b0ce" />
    </api>
    <api id="Methods.T:System.Data.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.PropertyCollection.Clone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" />
      </containers>
      <file name="c892b8fe-fd39-075b-471f-a0565a30d4bb" />
    </api>
    <api id="Properties.T:System.Data.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" />
      </containers>
      <file name="6810c47d-5e21-4487-aebb-aac2d1624a42" />
    </api>
    <api id="Overload:System.Data.PropertyCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.PropertyCollection" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.PropertyCollection.#ctor" />
        <element api="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
      <file name="209dc891-a02c-d936-8b0b-1802f63b1206" />
    </api>
    <api id="M:System.Data.PropertyCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyCollection.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
      <file name="e7f656c0-06c7-4538-1c98-2d4d1f6f7137" />
    </api>
    <api id="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.PropertyCollection.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
      <file name="a2a61ec9-15e9-b4b2-2a8a-71a1edde725e" />
    </api>
    <api id="M:System.Data.PropertyCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.Clone">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
      <file name="fea75323-81fb-ae4f-0a89-196aa2bea29a" />
    </api>
    <api id="T:System.Data.PropertyConstraintException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.ConstraintException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="5bc28339-2a3f-bf49-b2f3-8dcb3fd63ef6" />
    </api>
    <api id="AllMembers.T:System.Data.PropertyConstraintException">
      <topicdata name="PropertyConstraintException" group="list" subgroup="members" typeTopicId="T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.PropertyConstraintException.#ctor">
          <element api="M:System.Data.PropertyConstraintException.#ctor" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)" />
        </element>
        <element api="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Data.PropertyConstraintException.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" />
      </containers>
      <file name="d8568626-0b3f-e2b2-b539-59d709c8b18c" />
    </api>
    <api id="Methods.T:System.Data.PropertyConstraintException">
      <topicdata name="PropertyConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" />
      </containers>
      <file name="199d29dc-e9b6-4a83-90c9-2b8ab19dd3a8" />
    </api>
    <api id="Properties.T:System.Data.PropertyConstraintException">
      <topicdata name="PropertyConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.PropertyConstraintException.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" />
      </containers>
      <file name="f9e6e7c2-ca80-6be2-f069-ea8fab3ff43a" />
    </api>
    <api id="Overload:System.Data.PropertyConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.PropertyConstraintException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.PropertyConstraintException.#ctor" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="19cbb8b9-6b1f-df00-046b-fe5c409da36c" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="dc56bdb7-fb30-4bd3-3b92-783112669a2f" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="cdd565f5-d686-4c11-7454-c3544ca49a79" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="c898b341-65e6-b73d-d107-d5d790a99616" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="04fe8e03-e223-a462-536c-cea8bbf18ac4" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="436eee88-8b87-6eff-51e2-24a0569bab6b" />
    </api>
    <api id="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9da8e31a-9647-a78c-2a7b-bd4a2f004839" />
    </api>
    <api id="P:System.Data.PropertyConstraintException.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <file name="2cdf3293-9f24-415f-bf4b-5c7f069f7a0b" />
    </api>
    <api id="T:System.Data.ProviderIncompatibleException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="1a0e0f6d-8912-8a3b-5c82-2b55f8e31db5" />
    </api>
    <api id="AllMembers.T:System.Data.ProviderIncompatibleException">
      <topicdata name="ProviderIncompatibleException" group="list" subgroup="members" typeTopicId="T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.ProviderIncompatibleException.#ctor">
          <element api="M:System.Data.ProviderIncompatibleException.#ctor" />
          <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String)" />
          <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" />
      </containers>
      <file name="ee616887-103a-3582-2e08-1f18279d3495" />
    </api>
    <api id="Methods.T:System.Data.ProviderIncompatibleException">
      <topicdata name="ProviderIncompatibleException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" />
      </containers>
      <file name="133ace6d-51db-275b-c4c4-0ad5cadf3147" />
    </api>
    <api id="Properties.T:System.Data.ProviderIncompatibleException">
      <topicdata name="ProviderIncompatibleException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" />
      </containers>
      <file name="f08df4f3-4aff-27a5-021b-cf2494812a3a" />
    </api>
    <api id="Overload:System.Data.ProviderIncompatibleException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ProviderIncompatibleException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ProviderIncompatibleException.#ctor" />
        <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String)" />
        <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
      <file name="c79b10e8-30a8-18ff-0b57-baacae3ca886" />
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
      <file name="a75dd06b-7ccf-e005-57cf-04a48df48e30" />
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
      <file name="51bc31b2-77a8-e33a-030e-bf6966cad303" />
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
      <file name="97d36ae0-d671-78d8-d736-1ae8377d1a27" />
    </api>
    <api id="T:System.Data.ReadOnlyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="d4d6a795-73a1-73c9-ad80-beef803a6c7b" />
    </api>
    <api id="AllMembers.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="members" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.ReadOnlyException.#ctor">
          <element api="M:System.Data.ReadOnlyException.#ctor" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.String)" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
      <file name="14fd6591-71a7-0656-430f-88d7c8da7890" />
    </api>
    <api id="Methods.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
      <file name="f2725ae3-da01-15bc-4636-af981f095a68" />
    </api>
    <api id="Properties.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
      <file name="1ca9a788-fc98-40e9-2ab1-f8dab1ad2c7b" />
    </api>
    <api id="Events.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Events" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
      <file name="7e8a7e3a-5b84-7e86-9a76-34b1c5a28e0b" />
    </api>
    <api id="Overload:System.Data.ReadOnlyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.ReadOnlyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ReadOnlyException.#ctor" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.String)" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
      <file name="7e4fd3e1-4ac8-8494-4b93-ea65e7b67e78" />
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
      <file name="1c4f2a6c-2b9c-3043-2bed-0584df1160cd" />
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
      <file name="bcb8dfe1-647e-8e33-6103-f54b59949cd0" />
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
      <file name="9cd536be-1590-f959-12d7-ce61350164ff" />
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
      <file name="8357e0ee-8c1d-1f2e-7da3-f961685afca8" />
    </api>
    <api id="T:System.Data.RowNotInTableException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="8287381c-3285-5532-34ed-58782617e116" />
    </api>
    <api id="AllMembers.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="members" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.RowNotInTableException.#ctor">
          <element api="M:System.Data.RowNotInTableException.#ctor" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.String)" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
      <file name="392adf7f-877b-40d0-9a3d-46b7d7f74fb4" />
    </api>
    <api id="Methods.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Methods" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
      <file name="815bfe5c-9e25-d2cb-3166-e63ae22beeff" />
    </api>
    <api id="Properties.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Properties" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
      <file name="4683cdfe-6057-1296-a9d4-ad337fc54cd5" />
    </api>
    <api id="Events.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Events" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
      <file name="0f466ae3-b470-6b6e-8786-0e49547e018e" />
    </api>
    <api id="Overload:System.Data.RowNotInTableException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.RowNotInTableException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.RowNotInTableException.#ctor" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.String)" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
      <file name="13417506-31c7-d3b3-9776-b1dd3b6a6ea4" />
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
      <file name="13d23f26-a8c3-4526-8040-a09871ccc1cd" />
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
      <file name="51701dce-e5d9-7233-b34a-0fcf2f7a0546" />
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
      <file name="184342e8-889e-c0f6-e25b-98245886fc47" />
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
      <file name="68c7c8b6-562d-fc9d-3008-fcbd4b689121" />
    </api>
    <api id="T:System.Data.Rule">
      <topicdata group="api" />
      <apidata name="Rule" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Rule.None" />
        <element api="F:System.Data.Rule.Cascade" />
        <element api="F:System.Data.Rule.SetNull" />
        <element api="F:System.Data.Rule.SetDefault" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="aff9b8c0-b28b-990a-bfc5-27543b48a067" />
    </api>
    <api id="F:System.Data.Rule.Cascade">
      <topicdata group="api" notopic="" />
      <apidata name="Cascade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
      <file name="477488cd-87f2-ff18-1280-59610f75924f" />
    </api>
    <api id="F:System.Data.Rule.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
      <file name="32bc6be8-cbc6-badf-cde6-7bad4119cc0e" />
    </api>
    <api id="F:System.Data.Rule.SetDefault">
      <topicdata group="api" notopic="" />
      <apidata name="SetDefault" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
      <file name="dd48b7cc-8289-faa2-c888-024c2cdffb9e" />
    </api>
    <api id="F:System.Data.Rule.SetNull">
      <topicdata group="api" notopic="" />
      <apidata name="SetNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
      <file name="61a8dddd-9183-440b-bc00-9c7c4da5da9f" />
    </api>
    <api id="T:System.Data.SchemaSerializationMode">
      <topicdata group="api" />
      <apidata name="SchemaSerializationMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SchemaSerializationMode.IncludeSchema" />
        <element api="F:System.Data.SchemaSerializationMode.ExcludeSchema" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="78538c08-b944-9d67-289b-4f211b59b1d9" />
    </api>
    <api id="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <topicdata group="api" notopic="" />
      <apidata name="ExcludeSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </containers>
      <file name="dd16c38c-4cd9-2dfb-b484-7ad40ad1b6e9" />
    </api>
    <api id="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IncludeSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </containers>
      <file name="12313368-389c-02b8-8c02-72e541f357ea" />
    </api>
    <api id="T:System.Data.SchemaType">
      <topicdata group="api" />
      <apidata name="SchemaType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SchemaType.Source" />
        <element api="F:System.Data.SchemaType.Mapped" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="3ff388e0-8124-f594-b528-ce50719de43c" />
    </api>
    <api id="F:System.Data.SchemaType.Mapped">
      <topicdata group="api" notopic="" />
      <apidata name="Mapped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaType" ref="false" />
      </containers>
      <file name="6abbf2d2-3945-1b7b-2dbf-be355db2ff43" />
    </api>
    <api id="F:System.Data.SchemaType.Source">
      <topicdata group="api" notopic="" />
      <apidata name="Source" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaType" ref="false" />
      </containers>
      <file name="0f18dfdf-e22b-6e1f-a369-2f4148c26c79" />
    </api>
    <api id="T:System.Data.SerializationFormat">
      <topicdata group="api" />
      <apidata name="SerializationFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SerializationFormat.Xml" />
        <element api="F:System.Data.SerializationFormat.Binary" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="eee255cb-66af-b61a-addd-ed0a45714207" />
    </api>
    <api id="F:System.Data.SerializationFormat.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </containers>
      <file name="6e769f65-b2ea-26be-0844-572fd9edc323" />
    </api>
    <api id="F:System.Data.SerializationFormat.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </containers>
      <file name="f7302ea5-b677-e7f8-e2a5-01f533dede6a" />
    </api>
    <api id="T:System.Data.SqlDbType">
      <topicdata group="api" />
      <apidata name="SqlDbType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SqlDbType.BigInt" />
        <element api="F:System.Data.SqlDbType.Binary" />
        <element api="F:System.Data.SqlDbType.Bit" />
        <element api="F:System.Data.SqlDbType.Char" />
        <element api="F:System.Data.SqlDbType.DateTime" />
        <element api="F:System.Data.SqlDbType.Decimal" />
        <element api="F:System.Data.SqlDbType.Float" />
        <element api="F:System.Data.SqlDbType.Image" />
        <element api="F:System.Data.SqlDbType.Int" />
        <element api="F:System.Data.SqlDbType.Money" />
        <element api="F:System.Data.SqlDbType.NChar" />
        <element api="F:System.Data.SqlDbType.NText" />
        <element api="F:System.Data.SqlDbType.NVarChar" />
        <element api="F:System.Data.SqlDbType.Real" />
        <element api="F:System.Data.SqlDbType.UniqueIdentifier" />
        <element api="F:System.Data.SqlDbType.SmallDateTime" />
        <element api="F:System.Data.SqlDbType.SmallInt" />
        <element api="F:System.Data.SqlDbType.SmallMoney" />
        <element api="F:System.Data.SqlDbType.Text" />
        <element api="F:System.Data.SqlDbType.Timestamp" />
        <element api="F:System.Data.SqlDbType.TinyInt" />
        <element api="F:System.Data.SqlDbType.VarBinary" />
        <element api="F:System.Data.SqlDbType.VarChar" />
        <element api="F:System.Data.SqlDbType.Variant" />
        <element api="F:System.Data.SqlDbType.Xml" />
        <element api="F:System.Data.SqlDbType.Udt" />
        <element api="F:System.Data.SqlDbType.Structured" />
        <element api="F:System.Data.SqlDbType.Date" />
        <element api="F:System.Data.SqlDbType.Time" />
        <element api="F:System.Data.SqlDbType.DateTime2" />
        <element api="F:System.Data.SqlDbType.DateTimeOffset" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="eff59424-cdf6-8afe-1754-a0142b39b170" />
    </api>
    <api id="F:System.Data.SqlDbType.BigInt">
      <topicdata group="api" notopic="" />
      <apidata name="BigInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="6ecef06e-2be4-337d-f0ab-7fcf4dcdd0ee" />
    </api>
    <api id="F:System.Data.SqlDbType.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="e632caa2-828a-64c7-5ceb-e3472c8c31b3" />
    </api>
    <api id="F:System.Data.SqlDbType.Bit">
      <topicdata group="api" notopic="" />
      <apidata name="Bit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="2ac5a484-0274-c3d7-c57d-48a396df183a" />
    </api>
    <api id="F:System.Data.SqlDbType.Char">
      <topicdata group="api" notopic="" />
      <apidata name="Char" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="6a669fb7-8d1b-8b0a-4747-5df0e9a94e1f" />
    </api>
    <api id="F:System.Data.SqlDbType.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="73c959da-1836-c21a-edbe-c61a4c0cbfed" />
    </api>
    <api id="F:System.Data.SqlDbType.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="c3d9b597-eb4d-47cd-4e4f-a2f3918ea89c" />
    </api>
    <api id="F:System.Data.SqlDbType.DateTime2">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="4ec0814a-2771-8b0f-ef6c-9ef213f32c0b" />
    </api>
    <api id="F:System.Data.SqlDbType.DateTimeOffset">
      <topicdata group="api" notopic="" />
      <apidata name="DateTimeOffset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="bb1ee9a1-d37a-0ade-0167-c1b5217a2e7f" />
    </api>
    <api id="F:System.Data.SqlDbType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="67cf5975-3a42-760f-ae8e-2c2cbc4bffd2" />
    </api>
    <api id="F:System.Data.SqlDbType.Float">
      <topicdata group="api" notopic="" />
      <apidata name="Float" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="d5ab165f-1e83-f124-d2c3-4ebca85f1b3c" />
    </api>
    <api id="F:System.Data.SqlDbType.Image">
      <topicdata group="api" notopic="" />
      <apidata name="Image" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="268cb807-18fc-e120-118b-d94aaf188b29" />
    </api>
    <api id="F:System.Data.SqlDbType.Int">
      <topicdata group="api" notopic="" />
      <apidata name="Int" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="1ca106c5-b795-4fb4-9cd2-4129c03863a9" />
    </api>
    <api id="F:System.Data.SqlDbType.Money">
      <topicdata group="api" notopic="" />
      <apidata name="Money" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="4a9c16e6-a23c-7569-5723-6c24c48197c3" />
    </api>
    <api id="F:System.Data.SqlDbType.NChar">
      <topicdata group="api" notopic="" />
      <apidata name="NChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="e2cf9f85-ac26-774a-0037-7271919e7e45" />
    </api>
    <api id="F:System.Data.SqlDbType.NText">
      <topicdata group="api" notopic="" />
      <apidata name="NText" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="148d442a-e2b4-b03b-ddfc-01146abd2cb7" />
    </api>
    <api id="F:System.Data.SqlDbType.NVarChar">
      <topicdata group="api" notopic="" />
      <apidata name="NVarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="da6538b7-c6a7-b701-66ad-c4fc60a74d7c" />
    </api>
    <api id="F:System.Data.SqlDbType.Real">
      <topicdata group="api" notopic="" />
      <apidata name="Real" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="73b8849a-a238-ad48-4f3f-c3b0dde9e40a" />
    </api>
    <api id="F:System.Data.SqlDbType.SmallDateTime">
      <topicdata group="api" notopic="" />
      <apidata name="SmallDateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="edf5070b-b60b-3694-05d3-09c73ac9f039" />
    </api>
    <api id="F:System.Data.SqlDbType.SmallInt">
      <topicdata group="api" notopic="" />
      <apidata name="SmallInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="b5410d11-b449-a6e6-a275-a482fdd046c1" />
    </api>
    <api id="F:System.Data.SqlDbType.SmallMoney">
      <topicdata group="api" notopic="" />
      <apidata name="SmallMoney" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="cbf14646-d8f2-1979-3cb7-cd2282b70e85" />
    </api>
    <api id="F:System.Data.SqlDbType.Structured">
      <topicdata group="api" notopic="" />
      <apidata name="Structured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="7cb8d4ce-41da-e14c-e6f5-1e910d3fc07a" />
    </api>
    <api id="F:System.Data.SqlDbType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="f6f13dc2-4ca9-ad2b-ec4a-0cb3480f0dd1" />
    </api>
    <api id="F:System.Data.SqlDbType.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="34371439-7bcf-8379-9f59-a78d7f09d84e" />
    </api>
    <api id="F:System.Data.SqlDbType.Timestamp">
      <topicdata group="api" notopic="" />
      <apidata name="Timestamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="a819e05a-bda5-56cb-0e41-82253bca66a6" />
    </api>
    <api id="F:System.Data.SqlDbType.TinyInt">
      <topicdata group="api" notopic="" />
      <apidata name="TinyInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="853fd76d-84a5-5223-280e-1f25cc689f4f" />
    </api>
    <api id="F:System.Data.SqlDbType.Udt">
      <topicdata group="api" notopic="" />
      <apidata name="Udt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="9e581d03-f98d-b94f-ca19-b87d3e45c011" />
    </api>
    <api id="F:System.Data.SqlDbType.UniqueIdentifier">
      <topicdata group="api" notopic="" />
      <apidata name="UniqueIdentifier" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="38cd52c1-b645-5240-523a-6c6cf052a0a4" />
    </api>
    <api id="F:System.Data.SqlDbType.VarBinary">
      <topicdata group="api" notopic="" />
      <apidata name="VarBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="34399b2a-0803-cf10-f249-a22e47a4abe3" />
    </api>
    <api id="F:System.Data.SqlDbType.VarChar">
      <topicdata group="api" notopic="" />
      <apidata name="VarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="d3941909-3de7-ce8a-301f-666c27ec3147" />
    </api>
    <api id="F:System.Data.SqlDbType.Variant">
      <topicdata group="api" notopic="" />
      <apidata name="Variant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="3feff3be-cd07-2932-4292-f3c81d45040d" />
    </api>
    <api id="F:System.Data.SqlDbType.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
      <file name="fabad733-4cb2-c4a7-9bda-27788d29dbc9" />
    </api>
    <api id="T:System.Data.StateChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="a044a945-adc1-70fd-3ac5-f6ed16a02913" />
    </api>
    <api id="AllMembers.T:System.Data.StateChangeEventArgs">
      <topicdata name="StateChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)" />
        <element api="P:System.Data.StateChangeEventArgs.CurrentState" />
        <element api="P:System.Data.StateChangeEventArgs.OriginalState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" />
      </containers>
      <file name="d98fda58-4391-e353-afa5-50750cac99a1" />
    </api>
    <api id="Methods.T:System.Data.StateChangeEventArgs">
      <topicdata name="StateChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" />
      </containers>
      <file name="d1203447-649f-1e60-09d3-b6baed0534f6" />
    </api>
    <api id="Properties.T:System.Data.StateChangeEventArgs">
      <topicdata name="StateChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.StateChangeEventArgs.CurrentState" />
        <element api="P:System.Data.StateChangeEventArgs.OriginalState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" />
      </containers>
      <file name="77d2da6b-ef47-5e4b-c551-f69fbeeafde4" />
    </api>
    <api id="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="originalState">
          <type api="T:System.Data.ConnectionState" ref="false" />
        </parameter>
        <parameter name="currentState">
          <type api="T:System.Data.ConnectionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
      <file name="d787a88f-5a04-978e-1974-d8dd9ce6f511" />
    </api>
    <api id="P:System.Data.StateChangeEventArgs.CurrentState">
      <topicdata group="api" />
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentState" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
      <file name="943413d6-4be1-c150-90d4-632c390876a1" />
    </api>
    <api id="P:System.Data.StateChangeEventArgs.OriginalState">
      <topicdata group="api" />
      <apidata name="OriginalState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalState" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
      <file name="ab016d80-b316-b38f-6abb-bf1847ed91ba" />
    </api>
    <api id="T:System.Data.StateChangeEventHandler">
      <topicdata group="api" />
      <apidata name="StateChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.StateChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="097b5a66-f0ad-2ef4-1e6c-b93dd362f3cd" />
    </api>
    <api id="T:System.Data.StatementCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="d5c77d76-7db5-c1ed-8855-2716f0648ec3" />
    </api>
    <api id="AllMembers.T:System.Data.StatementCompletedEventArgs">
      <topicdata name="StatementCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)" />
        <element api="P:System.Data.StatementCompletedEventArgs.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" />
      </containers>
      <file name="6949d2ed-180d-5e98-ad1e-0bcdba6b4b69" />
    </api>
    <api id="Methods.T:System.Data.StatementCompletedEventArgs">
      <topicdata name="StatementCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" />
      </containers>
      <file name="a8202bbb-bb68-ef8f-891d-51782b9f4f30" />
    </api>
    <api id="Properties.T:System.Data.StatementCompletedEventArgs">
      <topicdata name="StatementCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.StatementCompletedEventArgs.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" />
      </containers>
      <file name="bd025bd8-c2dd-576e-eac4-5b4cbab7c0df" />
    </api>
    <api id="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="recordCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
      </containers>
      <file name="37148c11-52c9-d3a4-f96a-fec242d36adf" />
    </api>
    <api id="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <topicdata group="api" />
      <apidata name="RecordCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecordCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
      </containers>
      <file name="93711167-0d1e-bfbd-7471-d7a83c472fa1" />
    </api>
    <api id="T:System.Data.StatementCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="StatementCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="61134037-1aec-82f0-f9e0-031a2d6c4992" />
    </api>
    <api id="T:System.Data.StatementType">
      <topicdata group="api" />
      <apidata name="StatementType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.StatementType.Select" />
        <element api="F:System.Data.StatementType.Insert" />
        <element api="F:System.Data.StatementType.Update" />
        <element api="F:System.Data.StatementType.Delete" />
        <element api="F:System.Data.StatementType.Batch" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="a04c6670-1a17-33e7-26e8-3463db7c3046" />
    </api>
    <api id="F:System.Data.StatementType.Batch">
      <topicdata group="api" notopic="" />
      <apidata name="Batch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
      <file name="3471a23e-6962-6a9f-32f6-2fe076771ec0" />
    </api>
    <api id="F:System.Data.StatementType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
      <file name="4dbc54d8-c400-3f9e-d3cb-9788b58b5c8c" />
    </api>
    <api id="F:System.Data.StatementType.Insert">
      <topicdata group="api" notopic="" />
      <apidata name="Insert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
      <file name="f784533a-c542-84c9-0cbf-d3eee7b9b759" />
    </api>
    <api id="F:System.Data.StatementType.Select">
      <topicdata group="api" notopic="" />
      <apidata name="Select" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
      <file name="28860c80-9d6b-3563-6e61-3a03b526c68f" />
    </api>
    <api id="F:System.Data.StatementType.Update">
      <topicdata group="api" notopic="" />
      <apidata name="Update" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
      <file name="81a54eaf-375e-7df0-57d1-40eba597edbe" />
    </api>
    <api id="T:System.Data.StrongTypingException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b163e0f8-aa0b-a9ee-2b51-e2d63914615e" />
    </api>
    <api id="AllMembers.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="members" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.StrongTypingException.#ctor">
          <element api="M:System.Data.StrongTypingException.#ctor" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.String)" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
      <file name="2cac8309-5dee-c109-f201-8fa098950766" />
    </api>
    <api id="Methods.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Methods" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
      <file name="db02d21a-49ba-c7e7-81b7-1bb428960874" />
    </api>
    <api id="Properties.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Properties" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
      <file name="b92cde11-f158-6d39-3685-587c0f966ab1" />
    </api>
    <api id="Events.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Events" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
      <file name="7697cba3-4520-5ed5-1760-62a7bab768cb" />
    </api>
    <api id="Overload:System.Data.StrongTypingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.StrongTypingException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.StrongTypingException.#ctor" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.String)" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
      <file name="af6d4980-6722-5111-72d8-56fcf632b661" />
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
      <file name="d41012b0-fe09-3b38-5ff1-d31548f612e7" />
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
      <file name="e9004024-0150-11ef-dc61-b4a4fa8c8cf1" />
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
      <file name="6c25a4e5-f841-3a76-9c48-610a685ba1c4" />
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
      <file name="42d85f78-fb31-4ff2-bc97-8d5f3da49187" />
    </api>
    <api id="T:System.Data.SyntaxErrorException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="7382a062-6748-d7e1-9ba6-a4ded1410d6e" />
    </api>
    <api id="AllMembers.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="members" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.SyntaxErrorException.#ctor">
          <element api="M:System.Data.SyntaxErrorException.#ctor" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.String)" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
      <file name="1c0a9d30-976b-0d4a-e988-75cdff4f4622" />
    </api>
    <api id="Methods.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Methods" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
      <file name="dc99db20-c0db-7888-40cb-d5c42eda0818" />
    </api>
    <api id="Properties.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Properties" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
      <file name="3326b70f-4d83-28d7-e272-0979c658961a" />
    </api>
    <api id="Events.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Events" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
      <file name="5c4cd966-bca9-a78f-27e5-87d423a357aa" />
    </api>
    <api id="Overload:System.Data.SyntaxErrorException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.SyntaxErrorException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.SyntaxErrorException.#ctor" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.String)" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
      <file name="ba951398-8513-a2ec-82d6-c99144ac7ebc" />
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
      <file name="10f89927-756e-8f71-ebdc-5f2745ba6930" />
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
      <file name="410a8e2a-d2e6-065f-3855-51ccf4e08432" />
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
      <file name="f9295185-5161-4157-9553-a56d3920b7d6" />
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
      <file name="3d58b4e4-b260-9189-9ed6-3659ea9e0232" />
    </api>
    <api id="T:System.Data.TypedDataSetGenerator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.TypedDataSetGenerator" />
      <apidata name="TypedDataSetGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.TypedDataSetGenerator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TypedDataSetGenerator class will be removed in a future release. Please use System.Data.Design.TypedDataSetGenerator in System.Design.dll.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e17a495a-e12a-3581-881e-a1435300825d" />
    </api>
    <api id="AllMembers.T:System.Data.TypedDataSetGenerator">
      <topicdata name="TypedDataSetGenerator" group="list" subgroup="members" typeTopicId="T:System.Data.TypedDataSetGenerator" />
      <apidata name="TypedDataSetGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.TypedDataSetGenerator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.TypedDataSetGenerator.#ctor" />
        <element api="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" />
      </containers>
      <file name="2558063f-85c6-c153-b383-9c8a5e4f9eba" />
    </api>
    <api id="Methods.T:System.Data.TypedDataSetGenerator">
      <topicdata name="TypedDataSetGenerator" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedDataSetGenerator" />
      <apidata name="TypedDataSetGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.TypedDataSetGenerator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" />
      </containers>
      <file name="c501c1db-f896-ba3c-6034-b15a8d52e82d" />
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
      <file name="95a07577-6ee8-c527-3901-747189971fab" />
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeGen">
          <type api="T:System.CodeDom.Compiler.ICodeGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
      <file name="15355375-8180-4905-f64a-609a4efbd731" />
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <topicdata group="api" />
      <apidata name="GenerateIdName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="codeGen">
          <type api="T:System.CodeDom.Compiler.ICodeGenerator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
      <file name="ae5d56c2-6055-aa7c-5cbf-07dd2db2440f" />
    </api>
    <api id="T:System.Data.TypedDataSetGeneratorException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="1238183f-63da-894c-ceaf-a806f84062a7" />
    </api>
    <api id="AllMembers.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="members" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.TypedDataSetGeneratorException.#ctor">
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Data.TypedDataSetGeneratorException.ErrorList" />
        <element api="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
      <file name="29a7622b-2dd7-a7e7-ace8-acbdbb0d77c5" />
    </api>
    <api id="Methods.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
      <file name="4e98afa5-0ebe-fdc8-4335-e740519b4b22" />
    </api>
    <api id="Properties.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Properties" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.TypedDataSetGeneratorException.ErrorList" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
      <file name="68ee3fa9-bd87-29a3-136e-2cd79a8878ab" />
    </api>
    <api id="Events.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Events" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
      <file name="1a4ceab7-f9e9-fa2d-e29b-4a3c152ea543" />
    </api>
    <api id="Overload:System.Data.TypedDataSetGeneratorException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.TypedDataSetGeneratorException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="cccbc484-3390-a3d2-14e3-f0c3a1788f75" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="11a86438-0106-0f2d-1acf-765faeabd483" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.ArrayList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="f431c606-42d7-3e18-6a28-ed967d8d30c6" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="eba4502e-45db-a716-c808-ae760b7b55d6" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="198aae9a-66f3-b25c-7459-3f898ac164dc" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="1f57fb54-ae1d-17dc-6d0f-05b2f9a8df63" />
    </api>
    <api id="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <topicdata group="api" />
      <apidata name="ErrorList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorList" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="f3f92cae-012a-86bf-8779-cb6e93ae41ea" />
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
      <file name="68206afe-3112-3c89-f75d-0989eedb9848" />
    </api>
    <api id="T:System.Data.TypedTableBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataTable" ref="true" />
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="c1df5f36-79da-e3fc-87f9-32fa441f29f9" />
    </api>
    <api id="AllMembers.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="members" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Data.TypedTableBase`1.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="F:System.Data.DataTable.fInitInProgress" />
        <element api="Overload:System.Data.TypedTableBase`1.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="Overload:System.Data.TypedTableBase`1.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="P:System.Data.DataTable.Locale" />
        <element api="Overload:System.Data.TypedTableBase`1.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="Overload:System.Data.TypedTableBase`1.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="Overload:System.Data.TypedTableBase`1.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="P:System.Data.DataTable.TableName" />
        <element api="E:System.Data.DataTable.TableNewRow" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.TypedTableBase`1.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Data.DataTable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
            <parameter name="errorHandler">
              <type api="T:System.Data.FillErrorEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.#ctor">
          <element api="M:System.Data.TypedTableBase`1.#ctor" />
          <element api="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.TypedTableBase`1.Cast``1" />
        <element api="M:System.Data.TypedTableBase`1.GetEnumerator" />
        <element api="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
      <file name="380434b1-90f6-a5d0-0496-cc97b1aa214d" />
    </api>
    <api id="Methods.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.TypedTableBase`1.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.TypedTableBase`1.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.TypedTableBase`1.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.TypedTableBase`1.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.TypedTableBase`1.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.TypedTableBase`1.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Data.DataTable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
            <parameter name="errorHandler">
              <type api="T:System.Data.FillErrorEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBase`1.Cast``1" />
        <element api="M:System.Data.TypedTableBase`1.GetEnumerator" />
        <element api="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
      <file name="e5c763c6-812d-05c1-0d79-ec009948899b" />
    </api>
    <api id="Properties.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Properties" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
      <file name="18605fd1-0f9e-d54f-e911-bf015a7992f5" />
    </api>
    <api id="Events.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Events" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
      <file name="cdc6d01f-167c-2a61-78ce-af8845819e49" />
    </api>
    <api id="Fields.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Fields" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:System.Data.DataTable.fInitInProgress" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
      <file name="73165baa-a9ba-a659-c506-4c82fb4700c5" />
    </api>
    <api id="Overload:System.Data.TypedTableBase`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.TypedTableBase`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.TypedTableBase`1.#ctor" />
        <element api="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="5a40fb8e-d330-1a03-801e-14235b30614d" />
    </api>
    <api id="M:System.Data.TypedTableBase`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedTableBase`1.#ctor" />
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="0ee4ed8d-7b70-4d6d-bd17-c212d4b8bb3d" />
    </api>
    <api id="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedTableBase`1.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="7903d1a5-2ff7-7d03-8fbc-6b75d8898c46" />
    </api>
    <api id="M:System.Data.TypedTableBase`1.Cast``1">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Data.TypedTableBase`1.Cast``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="176a2e21-b4d5-5d11-a74f-88f58c1ae9a0" />
    </api>
    <api id="M:System.Data.TypedTableBase`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="81409d42-4e19-5ff5-bac9-bda044d24fdb" />
    </api>
    <api id="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
      <file name="dab1762e-638e-1f3c-0a8d-1b598c2846e8" />
    </api>
    <api id="T:System.Data.TypedTableBaseExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.TypedTableBaseExtensions" />
      <apidata name="TypedTableBaseExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="24cce52f-cc50-661d-6d0a-c109a3744164" />
    </api>
    <api id="AllMembers.T:System.Data.TypedTableBaseExtensions">
      <topicdata name="TypedTableBaseExtensions" group="list" subgroup="members" typeTopicId="T:System.Data.TypedTableBaseExtensions" />
      <apidata name="TypedTableBaseExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" />
      </containers>
      <file name="1e0e5c06-948c-4dbd-eaaf-b6a3caf4c374" />
    </api>
    <api id="Methods.T:System.Data.TypedTableBaseExtensions">
      <topicdata name="TypedTableBaseExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedTableBaseExtensions" />
      <apidata name="TypedTableBaseExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" />
      </containers>
      <file name="321ba3ed-919b-d22f-f9cc-2f9d5287c4c5" />
    </api>
    <api id="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.TypedTableBaseExtensions" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <file name="e1125081-519b-2d66-6ca9-b9623ac9135e" />
    </api>
    <api id="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.TypedTableBaseExtensions" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <file name="c4205cc4-bc60-de50-8cdb-1a3822db7c87" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <topicdata group="api" />
      <apidata name="AsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="338a7e1c-3c80-a598-bf9f-2a705dccd2cb" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAtOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b49b7107-356e-ba63-7e91-74b17956c89d" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3f4188e7-1520-2a40-610d-e1f896957134" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="895da199-5796-ba35-abf0-f5134143c66c" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="98794c52-9c45-7c25-453b-1b70f312d01e" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="59482097-fc45-0fe0-d94e-e2a4195c4c19" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="S" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bc0b9cc8-abcc-4fde-a2f9-3c50ff3c953e" />
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="60f13d70-874c-6d0d-e450-5d3df078fbcc" />
    </api>
    <api id="T:System.Data.UniqueConstraint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Constraint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.UniqueConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="20f7f12b-15a2-e868-27cc-46d3e625e909" />
    </api>
    <api id="AllMembers.T:System.Data.UniqueConstraint">
      <topicdata name="UniqueConstraint" group="list" subgroup="members" typeTopicId="T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="Overload:System.Data.UniqueConstraint.#ctor">
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)" />
        </element>
        <element api="P:System.Data.UniqueConstraint.Columns" />
        <element api="M:System.Data.UniqueConstraint.Equals(System.Object)" />
        <element api="M:System.Data.UniqueConstraint.GetHashCode" />
        <element api="P:System.Data.UniqueConstraint.IsPrimaryKey" />
        <element api="P:System.Data.UniqueConstraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" />
      </containers>
      <file name="80d62cca-d81c-839a-5cc2-bf39fc46efa3" />
    </api>
    <api id="Methods.T:System.Data.UniqueConstraint">
      <topicdata name="UniqueConstraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Data.UniqueConstraint.Equals(System.Object)" />
        <element api="M:System.Data.UniqueConstraint.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" />
      </containers>
      <file name="c0da2666-a5de-ac19-3951-05f332224e2c" />
    </api>
    <api id="Properties.T:System.Data.UniqueConstraint">
      <topicdata name="UniqueConstraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.UniqueConstraint.Columns" />
        <element api="P:System.Data.UniqueConstraint.IsPrimaryKey" />
        <element api="P:System.Data.UniqueConstraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" />
      </containers>
      <file name="c1e00618-2fe8-8cd0-b8e2-898bcd108257" />
    </api>
    <api id="Overload:System.Data.UniqueConstraint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.UniqueConstraint" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="f8ccf757-28ca-af1a-6f61-368a9a80dd77" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="755a9d64-fd28-b0e5-3ae8-2209edcb9054" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="06608020-a0be-99eb-2d09-c981ae1216cc" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="1ac7c17a-d858-67db-73c4-e44c91f0bfb4" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="055872a6-1e38-d9b7-35e2-4e8e77325e10" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="e2b2cac9-f568-27a6-4400-f66dc218dc70" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="f348ef56-a7a1-4d11-b9ea-475d285e5192" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="5b07993c-4d21-4ce4-7c78-fa51c4ba59af" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="f980faee-9526-658b-a1b1-9381d9af1432" />
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c8d862f-15f7-e986-d4a4-8b60e024ad31" />
    </api>
    <api id="P:System.Data.UniqueConstraint.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="098f08fd-86ce-0fb8-b23c-976e9e65ff02" />
    </api>
    <api id="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key2">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="8897e146-b552-eb2a-b221-fd6ca601fab1" />
    </api>
    <api id="M:System.Data.UniqueConstraint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="ab28bceb-82d2-de8f-3777-f773993b5195" />
    </api>
    <api id="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <topicdata group="api" />
      <apidata name="IsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="d69e288c-f347-452f-766d-34ebbbbd4b6c" />
    </api>
    <api id="P:System.Data.UniqueConstraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Constraint.Table">
          <type api="T:System.Data.Constraint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <file name="346250d2-0691-bcb0-7d85-62296c22bd72" />
    </api>
    <api id="T:System.Data.UpdateException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="b2608b2d-a707-a32b-e167-5467314a4c6a" />
    </api>
    <api id="AllMembers.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="members" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.UpdateException.#ctor">
          <element api="M:System.Data.UpdateException.#ctor" />
          <element api="M:System.Data.UpdateException.#ctor(System.String)" />
          <element api="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
        </element>
        <element api="P:System.Data.UpdateException.StateEntries" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
      <file name="2c5e43fd-779d-d03c-3346-651fb8881267" />
    </api>
    <api id="Methods.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Methods" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
      <file name="c90c2f1b-ed7c-8138-e636-bae07e0733a7" />
    </api>
    <api id="Properties.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Properties" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Data.UpdateException.StateEntries" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
      <file name="bded65ef-65e4-edb6-680e-955218fb0121" />
    </api>
    <api id="Events.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Events" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
      <file name="afec6529-b7f9-96df-8d1f-47fe3a1017b3" />
    </api>
    <api id="Overload:System.Data.UpdateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.UpdateException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.UpdateException.#ctor" />
        <element api="M:System.Data.UpdateException.#ctor(System.String)" />
        <element api="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="58b53afb-2ac8-fe50-0d9a-7280590840bb" />
    </api>
    <api id="M:System.Data.UpdateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="422b58eb-395e-81e9-d4a5-040e6555ce4b" />
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="c3c954e5-d46a-197c-1b02-4a785a0dcec6" />
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="b7c5bb77-a297-44f5-763d-e0daa2aeb48c" />
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="70fbe342-1d31-46f8-c955-4c14b88b3cab" />
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="stateEntries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="02ea2e7f-9773-7ec5-16fe-d0199d61cf39" />
    </api>
    <api id="P:System.Data.UpdateException.StateEntries">
      <topicdata group="api" />
      <apidata name="StateEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StateEntries" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
      <file name="e32b8423-ce91-398b-2a0b-ece92a173e5c" />
    </api>
    <api id="T:System.Data.UpdateRowSource">
      <topicdata group="api" />
      <apidata name="UpdateRowSource" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.UpdateRowSource.None" />
        <element api="F:System.Data.UpdateRowSource.OutputParameters" />
        <element api="F:System.Data.UpdateRowSource.FirstReturnedRecord" />
        <element api="F:System.Data.UpdateRowSource.Both" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="f6101fa5-6a42-f990-dcd6-31938a8a04b2" />
    </api>
    <api id="F:System.Data.UpdateRowSource.Both">
      <topicdata group="api" notopic="" />
      <apidata name="Both" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
      <file name="ca2c4ed1-870d-fcf0-c3ce-ef395a634f94" />
    </api>
    <api id="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <topicdata group="api" notopic="" />
      <apidata name="FirstReturnedRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
      <file name="af70b6e1-e1c1-18f2-d121-492e2338fd87" />
    </api>
    <api id="F:System.Data.UpdateRowSource.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
      <file name="a2594f58-7fd9-d444-76db-d23df68b3f4c" />
    </api>
    <api id="F:System.Data.UpdateRowSource.OutputParameters">
      <topicdata group="api" notopic="" />
      <apidata name="OutputParameters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
      <file name="d4c6beda-4081-b2ee-10e3-6bcd738b7e06" />
    </api>
    <api id="T:System.Data.UpdateStatus">
      <topicdata group="api" />
      <apidata name="UpdateStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.UpdateStatus.Continue" />
        <element api="F:System.Data.UpdateStatus.ErrorsOccurred" />
        <element api="F:System.Data.UpdateStatus.SkipCurrentRow" />
        <element api="F:System.Data.UpdateStatus.SkipAllRemainingRows" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="1d7b6622-de77-cdcd-a363-5fa9900f7b55" />
    </api>
    <api id="F:System.Data.UpdateStatus.Continue">
      <topicdata group="api" notopic="" />
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
      <file name="7e430c44-14ec-ffe9-f9c8-69ea8519ebca" />
    </api>
    <api id="F:System.Data.UpdateStatus.ErrorsOccurred">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorsOccurred" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
      <file name="67fd261a-c194-9dac-5d89-d281bc2a01b8" />
    </api>
    <api id="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <topicdata group="api" notopic="" />
      <apidata name="SkipAllRemainingRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
      <file name="4aac5d40-3eb5-221a-e68e-5c04df9253f0" />
    </api>
    <api id="F:System.Data.UpdateStatus.SkipCurrentRow">
      <topicdata group="api" notopic="" />
      <apidata name="SkipCurrentRow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
      <file name="1321fa82-95cb-2a7b-f773-9f4509b3002c" />
    </api>
    <api id="T:System.Data.VersionNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="c5bd8319-8c88-3903-8cfe-9ca12341ae96" />
    </api>
    <api id="AllMembers.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="members" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Data.VersionNotFoundException.#ctor">
          <element api="M:System.Data.VersionNotFoundException.#ctor" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.String)" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
      <file name="bca3653c-759c-c806-baaa-d4ce38578194" />
    </api>
    <api id="Methods.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
      <file name="75b67e6f-467f-4878-7fc3-d1d4cba086a4" />
    </api>
    <api id="Properties.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
      <file name="fcc93294-fc69-9457-8fcb-ece26bbefff7" />
    </api>
    <api id="Events.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
      <file name="6728dff7-183f-2085-3a07-4f08e6ab86c4" />
    </api>
    <api id="Overload:System.Data.VersionNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.VersionNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.VersionNotFoundException.#ctor" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.String)" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
      <file name="c35a51d4-0b9b-3678-4a78-20036b2ccebe" />
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
      <file name="6d47c326-8049-1e82-adc0-8b0fe3b5f5da" />
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
      <file name="3726e8cf-6a17-1158-10b2-808650a8320c" />
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
      <file name="30d8c8a8-d9e8-314d-1bf3-6bf4c7fdad99" />
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
      <file name="424a1ea3-1e3b-f7d8-444b-7c940ca1b3fb" />
    </api>
    <api id="T:System.Data.XmlReadMode">
      <topicdata group="api" />
      <apidata name="XmlReadMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.XmlReadMode.Auto" />
        <element api="F:System.Data.XmlReadMode.ReadSchema" />
        <element api="F:System.Data.XmlReadMode.IgnoreSchema" />
        <element api="F:System.Data.XmlReadMode.InferSchema" />
        <element api="F:System.Data.XmlReadMode.DiffGram" />
        <element api="F:System.Data.XmlReadMode.Fragment" />
        <element api="F:System.Data.XmlReadMode.InferTypedSchema" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="dc29393e-3ca4-e2ca-13c4-720f069d5cf0" />
    </api>
    <api id="F:System.Data.XmlReadMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="d39133c4-048a-fc6e-de3e-f1f0dffbf07d" />
    </api>
    <api id="F:System.Data.XmlReadMode.DiffGram">
      <topicdata group="api" notopic="" />
      <apidata name="DiffGram" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="155645ca-bc1c-4646-6392-0615259b0114" />
    </api>
    <api id="F:System.Data.XmlReadMode.Fragment">
      <topicdata group="api" notopic="" />
      <apidata name="Fragment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="04c0cbaf-ba86-c1a7-7218-9a67561360a1" />
    </api>
    <api id="F:System.Data.XmlReadMode.IgnoreSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="7bf2d6e7-b16c-01bc-6194-9dc569557cda" />
    </api>
    <api id="F:System.Data.XmlReadMode.InferSchema">
      <topicdata group="api" notopic="" />
      <apidata name="InferSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="3cd8ab98-fe73-d87c-1f62-9da40418c5a0" />
    </api>
    <api id="F:System.Data.XmlReadMode.InferTypedSchema">
      <topicdata group="api" notopic="" />
      <apidata name="InferTypedSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="f63c86aa-58aa-c1a7-c0ed-576727ed8173" />
    </api>
    <api id="F:System.Data.XmlReadMode.ReadSchema">
      <topicdata group="api" notopic="" />
      <apidata name="ReadSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
      <file name="b50c9d5a-fbbe-6106-d138-40b9bd77b29c" />
    </api>
    <api id="T:System.Data.XmlWriteMode">
      <topicdata group="api" />
      <apidata name="XmlWriteMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.XmlWriteMode.WriteSchema" />
        <element api="F:System.Data.XmlWriteMode.IgnoreSchema" />
        <element api="F:System.Data.XmlWriteMode.DiffGram" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <file name="fd6a0d7d-7cea-9c09-6c75-50ff92e835fd" />
    </api>
    <api id="F:System.Data.XmlWriteMode.DiffGram">
      <topicdata group="api" notopic="" />
      <apidata name="DiffGram" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
      <file name="2f0d88d9-8797-9b1e-c4c0-39127d94801d" />
    </api>
    <api id="F:System.Data.XmlWriteMode.IgnoreSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
      <file name="1ce20f08-1b41-a321-cd14-3bb70666be1a" />
    </api>
    <api id="F:System.Data.XmlWriteMode.WriteSchema">
      <topicdata group="api" notopic="" />
      <apidata name="WriteSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
      <file name="8da53a8f-2ee3-bede-5fe5-f70b98765ddd" />
    </api>
  </apis>
</reflection>