<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.WorkflowServices">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Persistence">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Persistence" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Persistence.InstanceLockException" />
        <element api="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
        <element api="T:System.ServiceModel.Persistence.PersistenceException" />
        <element api="T:System.ServiceModel.Persistence.PersistenceProvider" />
        <element api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
        <element api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
        <element api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      </elements>
      <file name="6b38ab84-ac64-d950-69b0-9f2eccf65cc8" />
    </api>
    <api id="T:System.ServiceModel.Persistence.InstanceLockException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name="InstanceLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dd76f30a-b264-2f32-5439-c54a9396d6aa" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.InstanceLockException">
      <topicdata name="InstanceLockException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name="InstanceLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor">
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.Exception)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String,System.Exception)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.ServiceModel.Persistence.InstanceLockException.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" />
      </containers>
      <file name="a925756e-7c37-0879-3e24-e09d24666814" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.InstanceLockException">
      <topicdata name="InstanceLockException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name="InstanceLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" />
      </containers>
      <file name="bd579618-d209-03c4-7f9f-f9f78b59ceb0" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.InstanceLockException">
      <topicdata name="InstanceLockException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name="InstanceLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.Persistence.InstanceLockException.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" />
      </containers>
      <file name="231cef7f-3440-6f3d-f758-4afbe11d4a1e" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.InstanceLockException">
      <topicdata name="InstanceLockException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name="InstanceLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" />
      </containers>
      <file name="c86a8312-3516-fbfa-2fe2-80617008a68f" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.InstanceLockException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.Exception)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="06821027-ffb6-fbf3-26cf-f3cf7e5c1e5c" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="43f54b3f-1eee-0577-9c26-870791087152" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="3ccf7f72-e280-976e-2b7a-80b67b5b33dc" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="7ed9dfd7-21bb-7ce0-e6b4-e16046832dac" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="84906d40-19dc-d7c6-8a88-105d13bdf82d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Guid,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="7952a4f1-6e73-57a6-ef00-d6f74113446e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="6d72139d-883e-1e5c-f1b6-f32910ee391e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="717ed84e-98d8-39ad-0881-434c5fc44b0d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceLockException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="fbbbc839-266a-ef5d-f5ab-5046e2e7660d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="0b53d416-bcf1-b5c7-36fb-2351400dffad" />
    </api>
    <api id="P:System.ServiceModel.Persistence.InstanceLockException.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
      </containers>
      <file name="25ac39a1-ad66-d586-9ca5-ea9bcb33e957" />
    </api>
    <api id="T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3a5e2bd6-7841-fa72-6459-d8aa4fe6551d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor">
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.Exception)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String,System.Exception)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.ServiceModel.Persistence.InstanceNotFoundException.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      </containers>
      <file name="db6102e9-e3d7-68f6-f04e-b9bda502b9bf" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      </containers>
      <file name="1e268186-7934-1680-1837-ed5cf1697cf3" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.Persistence.InstanceNotFoundException.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      </containers>
      <file name="942a307e-9876-0ff8-6e07-9ce66e8bc642" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      </containers>
      <file name="22515f8e-62e9-6b2a-bba2-fdecdaf75ae9" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.InstanceNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.Exception)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="c7dd47c2-653a-2f75-ca6a-dcb0ab5f5d1c" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="8bac6ce8-89b5-b2ff-545d-f1282853bf6e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="fa8b6b1e-4dfa-e840-34ad-f3c9c7bfed27" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="93e23883-c71f-66d8-7364-ba5f7fc478f2" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="4143450a-8fbd-29d4-d5e0-64ea1a7039dc" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Guid,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="b6c121b9-f983-8e17-84c9-865b56b2de47" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="90db4571-d6b6-010f-fd9e-96223d474f2e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="31f3e457-0cca-647b-a6d2-378bb22a1529" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="d7508d58-893c-213e-3447-26158b0cbe10" />
    </api>
    <api id="M:System.ServiceModel.Persistence.InstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="7c675312-d6f2-e12e-e7f0-5219899ba2a6" />
    </api>
    <api id="P:System.ServiceModel.Persistence.InstanceNotFoundException.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="ee2fed8a-cb7e-e7a9-1228-760e56114b0e" />
    </api>
    <api id="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LockingPersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e714987-0e6d-9663-47a0-f6764b5022b0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <topicdata name="LockingPersistenceProvider" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LockingPersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Create">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Load">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Update">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      </containers>
      <file name="a7d5cd2c-f13a-4fcf-a170-10f055439edc" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <topicdata name="LockingPersistenceProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LockingPersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Create">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Load">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
        <element api="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Update">
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
          <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      </containers>
      <file name="683a12cc-b1c6-0dd0-a4d8-3457f8893cee" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <topicdata name="LockingPersistenceProvider" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LockingPersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      </containers>
      <file name="e432ed2a-e1b2-04e1-fc02-78d112db7746" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.LockingPersistenceProvider">
      <topicdata name="LockingPersistenceProvider" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LockingPersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      </containers>
      <file name="3b5d903c-c7cc-d08f-a3ec-b2084b374e86" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate">
      <topicdata name="BeginCreate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="BeginCreate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="02d6f5b9-cbb6-484f-1d41-f183e9ddac6c" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad">
      <topicdata name="BeginLoad" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="77569043-0730-592a-1672-11f3cb1669d2" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged">
      <topicdata name="BeginLoadIfChanged" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="BeginLoadIfChanged" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="e8fbf150-73f2-eb67-6f50-045f4f4aa585" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate">
      <topicdata name="BeginUpdate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="35b80aab-8328-fba4-ae80-eed59ae47b49" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="12272bdd-2a38-9f04-238d-5731aebc5774" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="9b3e2cd5-f22f-5ab9-eb3f-86018610572c" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged">
      <topicdata name="LoadIfChanged" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="LoadIfChanged" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="b0b33817-8936-7b3d-2e0a-8aa605b690ba" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="ce02ebb7-7f00-3b61-5c41-2cea22e236fa" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="15a3c581-0b4f-80ec-de0f-4d3d4d0bbcee" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCreate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="b09b23e3-4b50-d8c1-2f0f-eedc83b80bda" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCreate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="unlockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="234873a0-3ffe-547d-fd0c-628a39e39684" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="aa4f69b9-d43d-3435-4911-239784f89811" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="lockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="49a77526-98c1-a08f-2f10-6ad20e38dcd4" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="81479585-3fbb-4aae-2dd0-e57ee6fff4ac" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="4d5a98c3-5170-6857-f59b-d81d9be88a7e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="3458f507-5f54-edaf-0293-94cff43ff672" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="8cf424ad-0c68-dfd7-4af8-718721b0a55f" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="unlockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="524c77c9-c618-650a-5c72-94ac6f8f27de" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Create" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="cd0dada0-1d24-f7ca-486b-a2ef946a0962" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="unlockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="e424a4d2-8c30-1f68-ce4e-891d2fac9de9" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUnlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="4f459be2-3e52-c303-3d6c-ba97680db92a" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Load" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="2bdfa98a-2e20-956c-4ad0-36c141af9ca6" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Load" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="lockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="f5fb1ed6-e2a4-1739-85ed-23fc6c20b5a1" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
      <topicdata group="api" />
      <apidata name="LoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="75cd1226-95f7-744e-1338-c547717065a8" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
      <topicdata group="api" />
      <apidata name="LoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="3d37b11a-a150-8462-5f95-73c1fbf1e3d5" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Unlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="ec13e0f8-a51c-0ccc-fb99-05ec2f994413" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Update" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="3f3c1c53-b39b-e751-162a-1f9ebba02a7c" />
    </api>
    <api id="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Persistence.LockingPersistenceProvider.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="unlockInstance">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
      </containers>
      <file name="cd130609-5bc7-1868-0d8d-9ebf2718c236" />
    </api>
    <api id="T:System.ServiceModel.Persistence.PersistenceException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name="PersistenceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Persistence.InstanceLockException" ref="true" />
          <type api="T:System.ServiceModel.Persistence.InstanceNotFoundException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1d06c4a6-0504-077e-6be1-7731d1fc9348" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.PersistenceException">
      <topicdata name="PersistenceException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name="PersistenceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor">
          <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
          <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" />
      </containers>
      <file name="975f3ba8-fb00-5caa-7600-e86067044779" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.PersistenceException">
      <topicdata name="PersistenceException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name="PersistenceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" />
      </containers>
      <file name="ab5793bf-659c-ba0b-0eba-bf302fd70f6f" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.PersistenceException">
      <topicdata name="PersistenceException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name="PersistenceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" />
      </containers>
      <file name="efe037f5-f6e1-034e-3dd7-51639b2a2c1d" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.PersistenceException">
      <topicdata name="PersistenceException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name="PersistenceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" />
      </containers>
      <file name="0cdec787-40d4-f6fc-2bb9-13abd5129d19" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.PersistenceException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor" />
        <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
      </containers>
      <file name="3c49c1de-852c-4527-8aa2-afd393376f4f" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
      </containers>
      <file name="4e938ee8-03ec-cd6f-ce91-d47d6d4cc01d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
      </containers>
      <file name="e32d87e8-2e6d-388c-96e4-a2f733e1734e" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
      </containers>
      <file name="8d248197-b60f-3251-a843-0e635f6d4523" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.PersistenceException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
      </containers>
      <file name="823bcd09-81c0-4373-6db7-7861e8b89706" />
    </api>
    <api id="T:System.ServiceModel.Persistence.PersistenceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.PersistenceProvider" />
      <apidata name="PersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Persistence.LockingPersistenceProvider" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ccf79684-91fc-f360-5408-a78eafd8970c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.PersistenceProvider">
      <topicdata name="PersistenceProvider" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProvider" />
      <apidata name="PersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" />
      </containers>
      <file name="5af9ebcb-fcee-afaa-dc13-38bb58a0c9f4" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.PersistenceProvider">
      <topicdata name="PersistenceProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProvider" />
      <apidata name="PersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProvider.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" />
      </containers>
      <file name="2c440452-4668-7e21-4ac7-2600a0afe956" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.PersistenceProvider">
      <topicdata name="PersistenceProvider" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProvider" />
      <apidata name="PersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" />
      </containers>
      <file name="abb6bc37-8156-34e2-06e0-18e5c9f36102" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.PersistenceProvider">
      <topicdata name="PersistenceProvider" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProvider" />
      <apidata name="PersistenceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" />
      </containers>
      <file name="f760e560-32c2-1545-2cfa-8eba13f69fcb" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="80549bf3-4132-fbbb-86d3-fe3f080d78b3" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="4c0370a2-564d-b707-a5ab-3ef7e069736a" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDelete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="fef23e6e-3eef-c3e6-cb69-d6031a380791" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="4da6f5ee-acac-70b8-6135-b1449e0d2116" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="599ddc59-f9f3-7f28-7ff9-3b5bbd17f64a" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="762fd449-1d3d-823a-81d8-d0ddf663a511" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="d65e278a-7cee-6985-b35c-0d468e4cde97" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="f8986a1a-1004-1db5-7109-5169a346bd7b" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="7e3efd00-5f95-5454-f829-c68eab4970e7" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDelete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="0c7a700c-bdbe-42fe-7a11-412c29b36e2f" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndLoad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="3fcf4f7d-e816-ecf5-6f27-7e1541667eef" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)">
      <topicdata group="api" />
      <apidata name="EndLoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="c8fe2d4f-e327-b5a0-0681-e312299b3e65" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="4e708903-6ed8-f4e5-dae2-bd2e23e30f0e" />
    </api>
    <api id="P:System.ServiceModel.Persistence.PersistenceProvider.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="b08552ae-a0c7-2294-3bb4-f70ea1fe7b9a" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="53146134-4cbc-69fe-703c-25da21b01c93" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
      <topicdata group="api" />
      <apidata name="LoadIfChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="instanceToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="cce1b578-9bbd-6964-aab4-7cbf124f0101" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </containers>
      <file name="ed1a03df-03e3-ed6c-d014-d9f565babf8b" />
    </api>
    <api id="T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      <apidata name="PersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="64fb8eb3-b5c1-7a43-3f74-d9dd7a0d9f0c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <topicdata name="PersistenceProviderFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      <apidata name="PersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProviderFactory.#ctor" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProviderFactory.CreateProvider(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      </containers>
      <file name="cb4726e4-5882-e8f8-dc36-8165d9aa381c" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <topicdata name="PersistenceProviderFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      <apidata name="PersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.PersistenceProviderFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.PersistenceProviderFactory.CreateProvider(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      </containers>
      <file name="7e4118d4-549e-e519-5d91-37863b0dea35" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <topicdata name="PersistenceProviderFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      <apidata name="PersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      </containers>
      <file name="2b52b593-fead-bcc2-fe0e-ced63e387fd4" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.PersistenceProviderFactory">
      <topicdata name="PersistenceProviderFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      <apidata name="PersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />
      </containers>
      <file name="796c4818-be74-c4e6-b36f-8204d6da711b" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProviderFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" ref="true" />
      </containers>
      <file name="17965538-9bff-8c52-4e20-2aafb154fdd8" />
    </api>
    <api id="M:System.ServiceModel.Persistence.PersistenceProviderFactory.CreateProvider(System.Guid)">
      <topicdata group="api" />
      <apidata name="CreateProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" ref="true" />
      </containers>
      <file name="a21a46ab-e783-d7a4-aedd-5a06e09cd578" />
    </api>
    <api id="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name="SqlPersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8cf5293f-e39f-0471-634f-fbc8631db5b4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <topicdata name="SqlPersistenceProviderFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name="SqlPersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor">
          <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
          <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      </containers>
      <file name="a3400b46-f5e6-27c7-0bdf-1389501b1347" />
    </api>
    <api id="Methods.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <topicdata name="SqlPersistenceProviderFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name="SqlPersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      </containers>
      <file name="f293fdbf-d9df-7c96-df9a-ba81d9884de1" />
    </api>
    <api id="Properties.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <topicdata name="SqlPersistenceProviderFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name="SqlPersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
        <element api="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      </containers>
      <file name="15b9c04d-c7a7-c95d-34fb-37a688d5552b" />
    </api>
    <api id="Events.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
      <topicdata name="SqlPersistenceProviderFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name="SqlPersistenceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      </containers>
      <file name="350ce141-3301-8e10-0344-70ab5a622758" />
    </api>
    <api id="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
        <element api="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="16a7c48d-6874-731a-f75b-8c007903628d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="880cb0f3-0eea-a5c1-2ea1-a04895c41b43" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="d93ad633-b56c-f40f-b4a3-4e08989ce2a4" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serializeAsText">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="4e963138-35dd-9e3a-ffd0-9d0731380f4d" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serializeAsText">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lockTimeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="4b125ec3-55dd-6e7b-d4df-184b61b80c23" />
    </api>
    <api id="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
      <topicdata group="api" />
      <apidata name="ConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionString" />
      <setter name="set_ConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="a42a9790-3f57-7821-5384-e7bac203dce4" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
      <topicdata group="api" />
      <apidata name="CreateProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Persistence.PersistenceProviderFactory.CreateProvider(System.Guid)">
          <type api="T:System.ServiceModel.Persistence.PersistenceProviderFactory" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Persistence.PersistenceProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="98613bd4-2642-8278-4cdd-cdb8fe9d8ad7" />
    </api>
    <api id="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
      <topicdata group="api" />
      <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="91cee2fb-43bd-e0d3-f545-785bb7d7ab13" />
    </api>
    <api id="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
      <topicdata group="api" />
      <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultOpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="b370a08b-ba2a-433b-d636-98ac20f8aa86" />
    </api>
    <api id="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
      <topicdata group="api" />
      <apidata name="LockTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LockTimeout" />
      <setter name="set_LockTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="c181a7ff-9d54-e04e-74b4-59d1f9816648" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="e26be8b2-cf8f-b641-0aa7-80a589aed199" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="2dae1be9-3167-1661-53fd-5992db8e07c2" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="f678d51a-7a84-171a-665f-0466b32ed7e0" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="55d54ab6-5152-08af-bed2-36f3a09d55dc" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="a58d7416-9ef4-4a10-c50e-222be2758ad9" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="52abb57d-d99c-1b72-c77d-d4d45f1e7d44" />
    </api>
    <api id="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="b20bb44d-af65-0740-0e4a-2dfff11b5186" />
    </api>
    <api id="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
      <topicdata group="api" />
      <apidata name="SerializeAsText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializeAsText" />
      <setter name="set_SerializeAsText" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Persistence" />
        <type api="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" ref="true" />
      </containers>
      <file name="34814d01-cdc5-8198-fa92-50eb183d775a" />
    </api>
  </apis>
</reflection>