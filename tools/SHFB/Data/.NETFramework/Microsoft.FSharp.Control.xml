<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="FSharp.Core">
      <assemblydata version="4.4.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Collections</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Control</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Visual Studio® [Version] [Release]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.40.23020.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.FSharp.Control">
      <topicdata group="api" />
      <apidata name="Microsoft.FSharp.Control" group="namespace" />
      <elements>
        <element api="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
        <element api="T:Microsoft.FSharp.Control.IEvent`2" />
        <element api="T:Microsoft.FSharp.Control.FSharpHandler`1" />
        <element api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
        <element api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
        <element api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
        <element api="T:Microsoft.FSharp.Control.FSharpAsync`1" />
        <element api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
        <element api="T:Microsoft.FSharp.Control.FSharpAsync" />
        <element api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
        <element api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
        <element api="T:Microsoft.FSharp.Control.ObservableModule" />
        <element api="T:Microsoft.FSharp.Control.EventModule" />
        <element api="T:Microsoft.FSharp.Control.WebExtensions" />
        <element api="T:Microsoft.FSharp.Control.CommonExtensions" />
        <element api="T:Microsoft.FSharp.Control.LazyExtensions" />
      </elements>
      <file name="ed5b870d-49ac-920b-63b3-33c8a3c3037d" />
    </api>
    <api id="T:Microsoft.FSharp.Control.CommonExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.CommonExtensions" />
      <apidata name="CommonExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="931a70d4-dbb7-7fa1-0a03-4257dd338225" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.CommonExtensions">
      <topicdata name="CommonExtensions" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.CommonExtensions" />
      <apidata name="CommonExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncRead(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncReadBytes(System.IO.Stream,System.Int32)" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncWrite(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" />
      </containers>
      <file name="5f8ccdf7-5960-970d-c603-daa500faeefb" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.CommonExtensions">
      <topicdata name="CommonExtensions" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.CommonExtensions" />
      <apidata name="CommonExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncRead(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncReadBytes(System.IO.Stream,System.Int32)" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.AsyncWrite(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" />
      </containers>
      <file name="7ad06d65-b220-58bd-982a-391b07683130" />
    </api>
    <api id="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="AddToObservable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Add</value>
          </argument>
        </attribute>
      </attributes>
      <file name="05b3685c-63c4-de18-0f6f-1661af72a9ab" />
    </api>
    <api id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncRead(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="AsyncRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="count">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncRead</value>
          </argument>
        </attribute>
      </attributes>
      <file name="95781260-b197-a1d8-d391-07601860bdae" />
    </api>
    <api id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncReadBytes(System.IO.Stream,System.Int32)">
      <topicdata group="api" />
      <apidata name="AsyncReadBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncRead</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bea412fa-6e6b-9f68-6722-8364a823a855" />
    </api>
    <api id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncWrite(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="AsyncWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="count">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncWrite</value>
          </argument>
        </attribute>
      </attributes>
      <file name="96d65045-050c-b7fa-97ec-f6a36615b875" />
    </api>
    <api id="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="SubscribeToObservable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.CommonExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Subscribe</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a5d36602-6e9f-1717-2d5a-dddec70a1282" />
    </api>
    <api id="T:Microsoft.FSharp.Control.EventModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.EventModule" />
      <apidata name="EventModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="591f2933-829a-23c6-5886-fba027645131" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.EventModule">
      <topicdata name="EventModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.EventModule" />
      <apidata name="EventModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" />
      </containers>
      <file name="995b5eac-316d-7ae4-54c6-8bc05b739e3d" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.EventModule">
      <topicdata name="EventModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.EventModule" />
      <apidata name="EventModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
        <element api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" />
      </containers>
      <file name="d2c0f72b-c6f9-12f0-4cb9-9620e8263aed" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="1" api="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>add</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7f332c15-3106-079c-39f1-740ac36c60b8" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})">
      <topicdata group="api" />
      <apidata name="Choose" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="chooser">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="2" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>choose</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e57e6bd1-3533-c172-9099-b8133a136f30" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="1" api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              </specialization>
            </type>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e88ccaf7-ccae-72c3-fab9-9701f2359b6d" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})">
      <topicdata group="api" />
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="2" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>map</value>
          </argument>
        </attribute>
      </attributes>
      <file name="46879a26-799e-173a-96ba-ef4ce0570fd8" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDel1">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="T" />
        <template name="TDel2">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="event1">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel1" index="0" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="event2">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel2" index="2" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
              </specialization>
            </type>
            <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>merge</value>
          </argument>
        </attribute>
      </attributes>
      <file name="062a5e26-4b76-522c-5ce1-5dbb14bfd7bc" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})">
      <topicdata group="api" />
      <apidata name="Pairwise" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="0" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <type api="T:System.Tuple`2" ref="true">
                  <specialization>
                    <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
                    <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
                <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>pairwise</value>
          </argument>
        </attribute>
      </attributes>
      <file name="67caab56-9026-a4f7-9833-7adf58854724" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})">
      <topicdata group="api" />
      <apidata name="Partition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="1" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
                  </specialization>
                </type>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              </specialization>
            </type>
            <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
                  </specialization>
                </type>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>partition</value>
          </argument>
        </attribute>
      </attributes>
      <file name="038dbdd3-d483-c9ce-db5e-36fa2fcc5d4c" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})">
      <topicdata group="api" />
      <apidata name="Scan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="collector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
                  <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="2" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
              </specialization>
            </type>
            <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scan</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f717245f-1a87-834d-659c-c38f60495fa8" />
    </api>
    <api id="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})">
      <topicdata group="api" />
      <apidata name="Split" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult1" />
        <template name="TResult2" />
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="splitter">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
                <specialization>
                  <template name="TResult1" index="1" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
                  <template name="TResult2" index="2" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="sourceEvent">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="3" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
                  <specialization>
                    <template name="TResult1" index="1" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
                  </specialization>
                </type>
                <template name="TResult1" index="1" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
              </specialization>
            </type>
            <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
                  <specialization>
                    <template name="TResult2" index="2" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
                  </specialization>
                </type>
                <template name="TResult2" index="2" api="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.EventModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>split</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0fc59cda-57e8-e26c-f7ba-b45ed1301c3f" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpAsync">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpAsync</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7497d2fd-16fd-bd76-56bb-72fccea55f61" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync">
      <topicdata name="FSharpAsync" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitIAsyncResult(System.IAsyncResult,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpAsync.AwaitTask">
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask(System.Threading.Tasks.Task)" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitWaitHandle(System.Threading.WaitHandle,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.CancelDefaultToken" />
        <element api="P:Microsoft.FSharp.Control.FSharpAsync.CancellationToken" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="P:Microsoft.FSharp.Control.FSharpAsync.DefaultCancellationToken" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd">
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Ignore``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.OnCancel(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Sleep(System.Int32)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Start(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartImmediate(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToContext(System.Threading.SynchronizationContext)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToNewThread" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToThreadPool" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" />
      </containers>
      <file name="12eeb586-fdeb-9f9c-dd77-44b02a3ebbe9" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpAsync">
      <topicdata name="FSharpAsync" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitIAsyncResult(System.IAsyncResult,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpAsync.AwaitTask">
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask(System.Threading.Tasks.Task)" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitWaitHandle(System.Threading.WaitHandle,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.CancelDefaultToken" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd">
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Ignore``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.OnCancel(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Sleep(System.Int32)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.Start(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartImmediate(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToContext(System.Threading.SynchronizationContext)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToNewThread" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToThreadPool" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" />
      </containers>
      <file name="f8c65cb9-4900-fef5-987e-fc23ef9e0dc2" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Control.FSharpAsync">
      <topicdata name="FSharpAsync" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Control.FSharpAsync.CancellationToken" />
        <element api="P:Microsoft.FSharp.Control.FSharpAsync.DefaultCancellationToken" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" />
      </containers>
      <file name="c1155f39-bc25-628b-1787-09b4f9bc0bc5" />
    </api>
    <api id="Overload:Microsoft.FSharp.Control.FSharpAsync.AwaitTask">
      <topicdata name="AwaitTask" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="AwaitTask" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask(System.Threading.Tasks.Task)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="2f198413-8f82-6686-989c-af474293914b" />
    </api>
    <api id="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd">
      <topicdata name="FromBeginEnd" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync" />
      <apidata name="FromBeginEnd" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="76f42c81-90d3-ca27-f5af-81347bc2ecee" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})">
      <topicdata group="api" />
      <apidata name="AsBeginEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TArg" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`3" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <type api="T:System.Tuple`3" ref="true">
                  <specialization>
                    <template name="TArg" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
                    <type api="T:System.AsyncCallback" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.IAsyncResult" ref="true" />
              </specialization>
            </type>
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <type api="T:System.IAsyncResult" ref="true" />
                <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
              </specialization>
            </type>
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <type api="T:System.IAsyncResult" ref="true" />
                <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="6dbb8eb1-3369-eebb-9e8c-f01ea6353aa2" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="AwaitEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDel">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="event">
          <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
            <specialization>
              <template name="TDel" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancelAction">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="a230a159-1bc9-bfee-1bd4-e160855b217f" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitIAsyncResult(System.IAsyncResult,Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="AwaitIAsyncResult" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="30abfd05-3ace-37f3-7f9c-cd82ee307961" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask(System.Threading.Tasks.Task)">
      <topicdata group="api" />
      <apidata name="AwaitTask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.AwaitTask" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="14f9ed16-f538-560c-eec3-6323c11ea42a" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})">
      <topicdata group="api" />
      <apidata name="AwaitTask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.AwaitTask" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="3131e611-8111-bd7d-e3d7-815d645cded3" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitWaitHandle(System.Threading.WaitHandle,Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="AwaitWaitHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="ce013791-8a78-4f22-8b8b-355ba16bac5d" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.CancelDefaultToken">
      <topicdata group="api" />
      <apidata name="CancelDefaultToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="817ac00d-7487-ecb8-ffb0-0a7c99727edc" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpAsync.CancellationToken">
      <topicdata group="api" />
      <apidata name="CancellationToken" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CancellationToken" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Threading.CancellationToken" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="4dd606d9-78ed-98d1-e6c8-45f924b0e127" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
      <topicdata group="api" />
      <apidata name="Catch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
                <type api="T:System.Exception" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="38237c8f-5e14-d589-0ed1-c10f92969fea" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpAsync.DefaultCancellationToken">
      <topicdata group="api" />
      <apidata name="DefaultCancellationToken" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultCancellationToken" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="d136f84d-46b7-2975-b3d7-54f847cefcb5" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="FromBeginEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="beginAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`2" ref="true">
                <specialization>
                  <type api="T:System.AsyncCallback" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancelAction">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="5ef4a6cc-c36b-e9bc-95e5-2b584c2acb5c" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="FromBeginEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="beginAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`3" ref="true">
                <specialization>
                  <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <type api="T:System.AsyncCallback" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancelAction">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="f18d3690-e584-b5b5-1802-85f231eec5dd" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="FromBeginEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="beginAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`4" ref="true">
                <specialization>
                  <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <template name="TArg2" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <type api="T:System.AsyncCallback" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="T" index="2" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancelAction">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="2" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="16423474-e021-7883-a6f8-cd0d4bb2993d" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="FromBeginEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
        </parameter>
        <parameter name="beginAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`5" ref="true">
                <specialization>
                  <template name="TArg1" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <template name="TArg2" index="1" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <template name="TArg3" index="2" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
                  <type api="T:System.AsyncCallback" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endAction">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="T" index="3" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancelAction">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="3" api="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="6d21303f-cc4f-56e5-0e56-4078ae7d2111" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="FromContinuations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})" />
                      <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <type api="T:System.Exception" ref="true" />
                      <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <type api="T:System.OperationCanceledException" ref="true" />
                      <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="88db1731-a42e-7cc8-3352-c781eaad2be1" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.Ignore``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
      <topicdata group="api" />
      <apidata name="Ignore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.Ignore``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="f5e3e254-ad69-b02b-2f60-efc542c2fdf0" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.OnCancel(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="OnCancel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interruption">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.IDisposable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="f6fe20af-6450-ef6a-972b-3b4655f273c4" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})">
      <topicdata group="api" />
      <apidata name="Parallel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="7250477a-2003-c340-4e00-550185f0571a" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="RunSynchronously" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="7168bc3e-5975-6798-044b-b245317008c1" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.Sleep(System.Int32)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsDueTime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="942560c2-5d5c-5073-4857-e2a49c44f2b2" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.Start(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="913c1556-3ca6-b4df-19df-9cb63b4dd27f" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="StartAsTask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="taskCreationOptions">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="711147f3-44b5-7a96-e3e9-d7faca267120" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="StartChild" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="171f22a6-3b9f-9b48-21cb-90f12f80c31c" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})">
      <topicdata group="api" />
      <apidata name="StartChildAsTask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="taskCreationOptions">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="1f7256f9-bbd8-2eb9-6acd-1591167c2dfa" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.StartImmediate(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="StartImmediate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="7e80457e-47a3-4839-6ec2-cc05608e7979" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="StartWithContinuations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exceptionContinuation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationContinuation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.OperationCanceledException" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="d3bbf3a6-414e-6e20-7067-f169ea11b7bb" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToContext(System.Threading.SynchronizationContext)">
      <topicdata group="api" />
      <apidata name="SwitchToContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="syncContext">
          <type api="T:System.Threading.SynchronizationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="fa842f46-a572-9c90-84bf-fc27f176746b" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToNewThread">
      <topicdata group="api" />
      <apidata name="SwitchToNewThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="3cfe166d-1179-6efe-02d2-2313729046f1" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToThreadPool">
      <topicdata group="api" />
      <apidata name="SwitchToThreadPool" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="da17a9af-9402-d8fc-698d-7ce143e2e542" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="TryCancelled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="compensation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.OperationCanceledException" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync" ref="true" />
      </containers>
      <file name="a75c33c9-af0a-2871-c195-729cfc05b85d" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpAsync`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync`1" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpAsync`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="SumType" />
              <field name="NonPublicRepresentation" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3d0a6a1d-2a5e-1a5c-932d-cb952a415481" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpAsync`1">
      <topicdata name="FSharpAsync" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsync`1" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" />
      </containers>
      <file name="2c9e096f-5e0b-b418-b80a-53dcff94246b" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpAsync`1">
      <topicdata name="FSharpAsync" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsync`1" />
      <apidata name="FSharpAsync" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" />
      </containers>
      <file name="9918c103-299a-bfd9-acf3-352a2c0f5e75" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpAsyncBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
      <apidata name="FSharpAsyncBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpAsyncBuilder</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b42781db-284c-fd6b-afc4-fe30e23cebd9" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpAsyncBuilder">
      <topicdata name="FSharpAsyncBuilder" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
      <apidata name="FSharpAsyncBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
      </containers>
      <file name="44ce7c4f-4768-0fb0-4515-e91dd47ba132" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpAsyncBuilder">
      <topicdata name="FSharpAsyncBuilder" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
      <apidata name="FSharpAsyncBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" />
      </containers>
      <file name="927c5516-aab9-190d-f714-dca7dca55a96" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="binder">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="68d0376a-16d6-265f-f195-7e99649f4f27" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})">
      <topicdata group="api" />
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation1">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="computation2">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="5c4d1f38-20b6-1395-d9ab-32535ec4807f" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="generator">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="84954e66-499f-4773-d426-d7473884b5ff" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sequence">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="2aa97749-f78b-a019-d9d7-599324a5a6d3" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="c5b4606f-6521-39ef-1020-d4634bdfd5d2" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
      <topicdata group="api" />
      <apidata name="ReturnFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="30abd3b6-6a4f-f5c9-0f73-a3eaf5ebf671" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="TryFinally" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="compensation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="ea051751-4f18-1c69-7ac7-ba6d0427bc2a" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})">
      <topicdata group="api" />
      <apidata name="TryWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="catchHandler">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="aa993fd8-ea14-fd4c-e03a-2313e05a476c" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})">
      <topicdata group="api" />
      <apidata name="Using" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IDisposable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="resource">
          <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
        </parameter>
        <parameter name="binder">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="7f59d903-203b-f9a5-dfb2-5c4741ac2176" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="While" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guard">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="e9944d2e-b2a7-c5d5-26e0-f8a48ab6daac" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </containers>
      <file name="e812cb26-8376-363d-ea7a-19d34acbc0fc" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
      <apidata name="FSharpAsyncReplyChannel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TReply" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpAsyncReplyChannel`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c1c8d82a-fab6-1bfc-04d7-c62585ed6b3a" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1">
      <topicdata name="FSharpAsyncReplyChannel" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
      <apidata name="FSharpAsyncReplyChannel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="TReply" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1.Reply(`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
      </containers>
      <file name="14e0a4e2-d0a1-b8e9-2b81-2f29d5c7054e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1">
      <topicdata name="FSharpAsyncReplyChannel" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
      <apidata name="FSharpAsyncReplyChannel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="TReply" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1.Reply(`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
      </containers>
      <file name="1070faca-f5fc-e329-d0d2-ea0a1baee022" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1.Reply(`0)">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="TReply" index="0" api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" ref="true" />
      </containers>
      <file name="b7eb5eed-7195-c69e-7798-64b16f9d29af" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      <apidata name="FSharpDelegateEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpDelegateEvent`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="95a14be2-19ea-def7-0fdf-efa51affbb1e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpDelegateEvent`1">
      <topicdata name="FSharpDelegateEvent" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      <apidata name="FSharpDelegateEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
        <element api="P:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Publish" />
        <element api="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Trigger(System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      </containers>
      <file name="58a06192-549d-1ad6-db45-befe130552bf" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpDelegateEvent`1">
      <topicdata name="FSharpDelegateEvent" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      <apidata name="FSharpDelegateEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Trigger(System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      </containers>
      <file name="43b82d68-b148-7aba-7724-542b58acdef3" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Control.FSharpDelegateEvent`1">
      <topicdata name="FSharpDelegateEvent" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      <apidata name="FSharpDelegateEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Publish" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
      </containers>
      <file name="19fa94e6-7700-8a1b-e19d-2ed550915522" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" ref="true" />
      </containers>
      <file name="693d648e-e82f-b830-c79d-13ffc481dbdd" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Publish">
      <topicdata group="api" />
      <apidata name="Publish" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Publish" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" ref="true" />
      </containers>
      <file name="ff808844-b69d-d5be-7fa2-20e883ea7dce" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Trigger(System.Object[])">
      <topicdata group="api" />
      <apidata name="Trigger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1" ref="true" />
      </containers>
      <file name="1bc29227-bb9b-713d-edc8-0e6ba4bf2ee9" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpEvent`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpEvent`1" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpEvent`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7a3a2fa3-e345-3725-7b8d-3adeaad03644" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpEvent`1">
      <topicdata name="FSharpEvent" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
        <element api="P:Microsoft.FSharp.Control.FSharpEvent`1.Publish" />
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`1.Trigger(`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      </containers>
      <file name="e3c730cd-8743-32f9-fa09-f71a73df87ea" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpEvent`1">
      <topicdata name="FSharpEvent" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`1.Trigger(`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      </containers>
      <file name="899a5144-ef9a-1738-387f-7165c09c8452" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Control.FSharpEvent`1">
      <topicdata name="FSharpEvent" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Control.FSharpEvent`1.Publish" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
      </containers>
      <file name="b7e9820d-48ee-22c1-9004-bcbb68e45d23" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" ref="true" />
      </containers>
      <file name="f9385cfd-28ff-5894-4bfb-ba4a9e7f96c8" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpEvent`1.Publish">
      <topicdata group="api" />
      <apidata name="Publish" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Publish" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
              </specialization>
            </type>
            <template name="T" index="0" api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" ref="true" />
      </containers>
      <file name="39e2140d-3c46-f27d-4001-cd57fa9244a9" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpEvent`1.Trigger(`0)">
      <topicdata group="api" />
      <apidata name="Trigger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="T:Microsoft.FSharp.Control.FSharpEvent`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`1" ref="true" />
      </containers>
      <file name="a1bc91b7-5db6-bcc8-8b50-2c377634d4e1" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpEvent`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpEvent`2" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpEvent`2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="50410f58-7224-e52a-b1da-ada630f1bc6c" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpEvent`2">
      <topicdata name="FSharpEvent" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
        <element api="P:Microsoft.FSharp.Control.FSharpEvent`2.Publish" />
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`2.Trigger(System.Object,`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      </containers>
      <file name="3fe6abd5-4f48-efec-fb7d-7d4d0e559198" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpEvent`2">
      <topicdata name="FSharpEvent" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpEvent`2.Trigger(System.Object,`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      </containers>
      <file name="035540aa-e0cd-436b-9dac-e36af63b8b2b" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Control.FSharpEvent`2">
      <topicdata name="FSharpEvent" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      <apidata name="FSharpEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Control.FSharpEvent`2.Publish" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
      </containers>
      <file name="496fa53a-c910-2e6b-3981-6ed9aa267ac3" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" ref="true" />
      </containers>
      <file name="81acd42f-3ca9-7f8a-240e-58f881075f83" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpEvent`2.Publish">
      <topicdata group="api" />
      <apidata name="Publish" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Publish" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
            <template name="TArgs" index="1" api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" ref="true" />
      </containers>
      <file name="49ccd95b-0e30-aece-5283-99b06cb96eb0" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpEvent`2.Trigger(System.Object,`1)">
      <topicdata group="api" />
      <apidata name="Trigger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TArgs" index="1" api="T:Microsoft.FSharp.Control.FSharpEvent`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpEvent`2" ref="true" />
      </containers>
      <file name="39683416-e431-1c90-532e-0fc47f8fae79" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpHandler`1">
      <topicdata group="api" />
      <apidata name="FSharpHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="T" index="0" api="T:Microsoft.FSharp.Control.FSharpHandler`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpHandler`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c6b93c57-a5f0-3995-8d1a-1aa604a4f047" />
    </api>
    <api id="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="FSharpMailboxProcessor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TMsg" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpMailboxProcessor`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="41ee8d82-c6c0-f0ab-2ab7-810c8a2efdde" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <topicdata name="FSharpMailboxProcessor" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="FSharpMailboxProcessor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TMsg" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        <element api="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength" />
        <element api="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout" />
        <element api="E:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start">
          <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
          <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.System#IDisposable#Dispose" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      </containers>
      <file name="bd2191fd-2f37-d1c4-29a5-9df3b255a002" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <topicdata name="FSharpMailboxProcessor" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="FSharpMailboxProcessor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TMsg" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="Overload:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start">
          <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
          <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
        </element>
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.System#IDisposable#Dispose" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      </containers>
      <file name="07100be3-3643-9361-7d7a-1a7231636775" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <topicdata name="FSharpMailboxProcessor" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="FSharpMailboxProcessor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TMsg" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength" />
        <element api="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      </containers>
      <file name="ce17d1b5-4dee-c364-3e7e-9ed081100061" />
    </api>
    <api id="Events.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <topicdata name="FSharpMailboxProcessor" group="list" subgroup="Events" typeTopicId="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="FSharpMailboxProcessor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TMsg" />
      </templates>
      <elements>
        <element api="E:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      </containers>
      <file name="57dec18a-e2ee-704d-eb3c-b11b8fc4ebb6" />
    </api>
    <api id="Overload:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
        <element api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="7da79fe0-0e7b-9502-f878-c47536260aa2" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true">
                <specialization>
                  <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
                </specialization>
              </type>
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="ac0def8d-9a01-15f3-e173-4fd57ee48717" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength">
      <topicdata group="api" />
      <apidata name="CurrentQueueLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentQueueLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="b9a16825-bda3-ff70-7f76-8f23cf1bdf1d" />
    </api>
    <api id="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout">
      <topicdata group="api" />
      <apidata name="DefaultTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultTimeout" />
      <setter name="set_DefaultTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="dd7a2dd0-cd41-5dfc-ff4a-a8b470732c62" />
    </api>
    <api id="E:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Error">
        <attributes>
          <attribute>
            <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_Error">
        <attributes>
          <attribute>
            <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:Microsoft.FSharp.Control.FSharpHandler`1" ref="true">
          <specialization>
            <type api="T:System.Exception" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Exception" ref="true" />
      </eventargs>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0bf05809-5cd7-d200-1ad7-f906060fe38c" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="55e4234c-2838-eb3c-5671-1643d537c622" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="PostAndAsyncReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TReply" />
      </templates>
      <parameters>
        <parameter name="buildMessage">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" ref="true">
                <specialization>
                  <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                </specialization>
              </type>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="5c70cd28-5118-109f-a1ce-3d17cfc694ff" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="PostAndReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TReply" />
      </templates>
      <parameters>
        <parameter name="buildMessage">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" ref="true">
                <specialization>
                  <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                </specialization>
              </type>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="5c3388f3-a5ae-16c3-82e1-8ecada214ecd" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="PostAndTryAsyncReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TReply" />
      </templates>
      <parameters>
        <parameter name="buildMessage">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" ref="true">
                <specialization>
                  <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                </specialization>
              </type>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="00ea7c8e-026a-ac79-c8ab-80d1e8cab62b" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="f8ac4258-d4b9-a08b-03c0-ed96e08da3be" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="Scan" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="scanner">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="e7ae4218-985c-4332-72c5-41dadd14cc6e" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="564d9aaf-3f9b-626b-0d29-39f62af02bf8" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true">
                <specialization>
                  <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
                </specialization>
              </type>
              <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true">
          <specialization>
            <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="dd23d820-1dff-5ab6-1105-d5dc67af2cc4" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.System-IDisposable-Dispose" />
      <apidata name="System-IDisposable-Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="8c90fd3e-625b-36cf-ec66-60a0c1ba9a9b" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="TryPostAndReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TReply" />
      </templates>
      <parameters>
        <parameter name="buildMessage">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" ref="true">
                <specialization>
                  <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                </specialization>
              </type>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="TReply" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="581f5213-8630-d71d-dd28-9d761d1be794" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="TryReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="5ed622c7-956f-c078-d765-c01423cbb262" />
    </api>
    <api id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="TryScan" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="scanner">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TMsg" index="0" api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1" ref="true" />
      </containers>
      <file name="c17c1331-2829-9fc0-724b-873036720567" />
    </api>
    <api id="T:Microsoft.FSharp.Control.IDelegateEvent`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.IDelegateEvent`1" />
      <apidata name="IDelegateEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Microsoft.FSharp.Control.IEvent`2" ref="true" />
      </implementors>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1bfb3991-c46b-c584-a2ff-098f533e5848" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.IDelegateEvent`1">
      <topicdata name="IDelegateEvent" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
      <apidata name="IDelegateEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)" />
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
      </containers>
      <file name="057ec849-998c-c94a-0315-2e3bd136ba3e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.IDelegateEvent`1">
      <topicdata name="IDelegateEvent" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
      <apidata name="IDelegateEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)" />
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
      </containers>
      <file name="60046cef-cbb7-7487-6540-f0c15d77f786" />
    </api>
    <api id="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="handler">
          <template name="TDelegate" index="0" api="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" ref="true" />
      </containers>
      <file name="7d53b8fa-ee70-e876-c797-773918939c58" />
    </api>
    <api id="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="handler">
          <template name="TDelegate" index="0" api="T:Microsoft.FSharp.Control.IDelegateEvent`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" ref="true" />
      </containers>
      <file name="a4a24ebe-f812-9d3b-33ed-ea0a92765ff4" />
    </api>
    <api id="T:Microsoft.FSharp.Control.IEvent`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.IEvent`2" />
      <apidata name="IEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <implements>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="TArgs" index="1" api="T:Microsoft.FSharp.Control.IEvent`2" />
          </specialization>
        </type>
        <type api="T:Microsoft.FSharp.Control.IDelegateEvent`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="T:Microsoft.FSharp.Control.IEvent`2" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.InterfaceAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7b1c3262-ab19-2388-e3c4-e6cd9c184f9b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.IEvent`2">
      <topicdata name="IEvent" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.IEvent`2" />
      <apidata name="IEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)" />
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)" />
        <element api="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IEvent`2" />
      </containers>
      <file name="55f711d2-7618-ae2d-3513-0c43a6c3e661" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.IEvent`2">
      <topicdata name="IEvent" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.IEvent`2" />
      <apidata name="IEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="TDelegate">
          <constrained>
            <type api="T:System.Delegate" ref="true" />
          </constrained>
        </template>
        <template name="TArgs" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)" />
        <element api="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)" />
        <element api="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.IEvent`2" />
      </containers>
      <file name="40e38064-cd94-0232-53ea-1333cb3367b7" />
    </api>
    <api id="T:Microsoft.FSharp.Control.LazyExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.LazyExtensions" />
      <apidata name="LazyExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="beceed82-74f8-24a7-020d-ccdd291b4599" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.LazyExtensions">
      <topicdata name="LazyExtensions" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.LazyExtensions" />
      <apidata name="LazyExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})" />
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)" />
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.LazyExtensions" />
      </containers>
      <file name="3316d68d-03bc-8d21-5a93-992d67b575ae" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.LazyExtensions">
      <topicdata name="LazyExtensions" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.LazyExtensions" />
      <apidata name="LazyExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})" />
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)" />
        <element api="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.LazyExtensions" />
      </containers>
      <file name="64fe1dce-192d-d9d0-2398-2b6a618148a2" />
    </api>
    <api id="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="creator">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.LazyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Create</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6bffda8f-2508-a324-9fdf-59e643ca3460" />
    </api>
    <api id="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)">
      <topicdata group="api" />
      <apidata name="CreateFromValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.LazyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFromValue</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a6c11b7b-346a-6956-bd33-2b64ce860673" />
    </api>
    <api id="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})">
      <topicdata group="api" />
      <apidata name="Force" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="param0">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.LazyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Force</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4daec1fa-2a8c-56b5-6c33-e8670db2edb5" />
    </api>
    <api id="T:Microsoft.FSharp.Control.ObservableModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.ObservableModule" />
      <apidata name="ObservableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="18cf65eb-40d9-51ed-b878-b18db8e48ea4" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.ObservableModule">
      <topicdata name="ObservableModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.ObservableModule" />
      <apidata name="ObservableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" />
      </containers>
      <file name="64ce73b8-6b71-fc6e-f85f-58211327f5af" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.ObservableModule">
      <topicdata name="ObservableModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.ObservableModule" />
      <apidata name="ObservableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
        <element api="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" />
      </containers>
      <file name="47d21430-3aad-a5c5-bcde-b58e76c70dba" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>add</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ca82143b-9db3-8bb5-61e1-f296cf3d6d53" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Choose" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="chooser">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>choose</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5a31af02-6135-1489-34d4-d83aab9b2f42" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e7044063-5c08-ceb4-e749-0dec848c95e5" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>map</value>
          </argument>
        </attribute>
      </attributes>
      <file name="47fc8d22-908f-f9c6-71c3-d2c251e6ee07" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>merge</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7248828a-9e2f-9abf-1f41-1bd121c0459d" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Pairwise" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>pairwise</value>
          </argument>
        </attribute>
      </attributes>
      <file name="883060a9-1914-70ea-34bd-9f5204723b15" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Partition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`2" ref="true">
          <specialization>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
              </specialization>
            </type>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>partition</value>
          </argument>
        </attribute>
      </attributes>
      <file name="beb354dc-e17f-4032-51de-847a88feef06" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})">
      <topicdata group="api" />
      <apidata name="Scan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
                  <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scan</value>
          </argument>
        </attribute>
      </attributes>
      <file name="56569f1b-6b3d-15a6-f678-fc5392f1f462" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Split" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult1" />
        <template name="TResult2" />
      </templates>
      <parameters>
        <parameter name="splitter">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
                <specialization>
                  <template name="TResult1" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
                  <template name="TResult2" index="2" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`2" ref="true">
          <specialization>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="TResult1" index="1" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
              </specialization>
            </type>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="TResult2" index="2" api="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>split</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ffbf681e-5455-e84e-a271-237c73b52d59" />
    </api>
    <api id="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="callback">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.ObservableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>subscribe</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1e350b30-c7e3-1709-8e12-4432844d6632" />
    </api>
    <api id="T:Microsoft.FSharp.Control.WebExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Control.WebExtensions" />
      <apidata name="WebExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="95e909d3-1056-adea-213d-3e82f1222cc5" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Control.WebExtensions">
      <topicdata name="WebExtensions" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Control.WebExtensions" />
      <apidata name="WebExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadData(System.Net.WebClient,System.Uri)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadFile(System.Net.WebClient,System.Uri,System.String)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadString(System.Net.WebClient,System.Uri)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncGetResponse(System.Net.WebRequest)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" />
      </containers>
      <file name="4413193b-9b7b-ac7f-6aa4-4ddf43b654cd" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Control.WebExtensions">
      <topicdata name="WebExtensions" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Control.WebExtensions" />
      <apidata name="WebExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadData(System.Net.WebClient,System.Uri)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadFile(System.Net.WebClient,System.Uri,System.String)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadString(System.Net.WebClient,System.Uri)" />
        <element api="M:Microsoft.FSharp.Control.WebExtensions.AsyncGetResponse(System.Net.WebRequest)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" />
      </containers>
      <file name="9ad5044f-883b-b041-403c-5c8ce59cd326" />
    </api>
    <api id="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadData(System.Net.WebClient,System.Uri)">
      <topicdata group="api" />
      <apidata name="AsyncDownloadData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Net.WebClient" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncDownloadData</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c3afe46b-7030-ca6a-b433-6226213ebe13" />
    </api>
    <api id="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadFile(System.Net.WebClient,System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AsyncDownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Net.WebClient" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncDownloadFile</value>
          </argument>
        </attribute>
      </attributes>
      <file name="33f8baed-6ec0-9b70-31c1-4ae42f4bfc35" />
    </api>
    <api id="M:Microsoft.FSharp.Control.WebExtensions.AsyncDownloadString(System.Net.WebClient,System.Uri)">
      <topicdata group="api" />
      <apidata name="AsyncDownloadString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Net.WebClient" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncDownloadString</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b9d522e3-210c-0cba-dacf-992950074f41" />
    </api>
    <api id="M:Microsoft.FSharp.Control.WebExtensions.AsyncGetResponse(System.Net.WebRequest)">
      <topicdata group="api" />
      <apidata name="AsyncGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsync`1" ref="true">
          <specialization>
            <type api="T:System.Net.WebResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Control" />
        <type api="T:Microsoft.FSharp.Control.WebExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AsyncGetResponse</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8b40f73c-0dde-3b83-e06a-9277ffab6691" />
    </api>
  </apis>
</reflection>