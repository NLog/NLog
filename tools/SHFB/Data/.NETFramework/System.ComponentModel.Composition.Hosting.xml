<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ComponentModel.Composition">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Composition.Hosting">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Composition.Hosting" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
        <element api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
        <element api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
        <element api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
        <element api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
        <element api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionService" />
        <element api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
        <element api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
        <element api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
        <element api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      </elements>
      <file name="0a645421-119c-675c-bf27-8a840186f6b4" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="1206ac39-75b8-2b1b-0d9e-72aead1e052a" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="8728879d-279a-e831-a802-dc3a6ada2e09" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="e67ebc40-47d9-ca4b-8c13-90b9f6a74fe1" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="d2e5e9a0-64a9-b08c-cd1c-3870c109e453" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="a29b372e-8ad5-2004-d0d9-d2e10d2e392b" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="80cebbf1-7c5f-54ee-2b89-8426c374fef5" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="37955446-92b1-e2d8-896e-b2d61288b76f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="59ab00fe-29d8-ef58-25b4-3bdea26e9f5e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <parameters>
        <parameter name="catalogs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="3cb7b899-cf32-a8a9-1cc4-33105a706a96" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <parameters>
        <parameter name="catalogs" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="c49b09b9-2958-a0b1-6b0e-7f21e6f03a03" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
      <topicdata group="api" />
      <apidata name="Catalogs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalogs" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="a6a1e979-e7f6-d049-f024-27ca542c485b" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="9d0a5943-eb22-32c2-07bc-56a56a8b3761" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="84ff32a8-cbf3-f9e6-584b-7ec702ec53f4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="155a70b9-7759-2324-7f38-84d13ae97963" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="77751f0e-d4e6-3549-05a6-f1d50e9ca9ce" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="bf74d4e0-5feb-9d2e-6bce-971d6bc3f5c8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="2c67bec1-c745-d7af-982a-0aa69c92ff88" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="e66a773c-3c30-e3b6-3db2-b89757187663" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="1197bcde-4864-ce5b-e3ca-02cdaf43ba4d" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="0653fc47-4225-5633-3ba0-585f0d6b913a" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="0c769f33-cb4a-ce25-c95a-4a30b2f38757" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="a3501dc4-7fed-313d-d180-3255555c1945" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="824744fc-5253-78b2-516e-af40ae0f995b" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="b9d552e2-d4d7-96a2-5210-44426e44b888" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="eadfaf9f-2cb2-b0ac-1d55-47818cef3947" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor" />
      <parameters>
        <parameter name="providers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="5d738255-4cd9-d2b9-1ebb-4e6f52ff9f65" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor" />
      <parameters>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="e4560453-1ec2-7f6b-7b0e-f19b5a465c46" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="a10f654d-0f9e-4bc6-a42e-cb0a0433546b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="2647d0d7-c518-4928-0b2d-8fc4dfc68ee2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="a5efc6da-b85a-703c-e7b3-dcfdb5edf65e" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="7d5cf573-50d2-8745-1a2f-da2173651ccf" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name="ApplicationCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="5eee7b68-3c4d-05ed-bd0b-251766495777" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog">
      <topicdata name="ApplicationCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name="ApplicationCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.ToString" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      </containers>
      <file name="3843939e-fb23-01cf-529d-c1f7a6719613" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog">
      <topicdata name="ApplicationCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name="ApplicationCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.ToString" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      </containers>
      <file name="75f9623d-cea7-dccc-6f46-a1f523c7b197" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog">
      <topicdata name="ApplicationCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name="ApplicationCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      </containers>
      <file name="230a071d-587a-d3a9-d0d2-01e4929fa8ee" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="d9091e4f-1e92-66e7-6674-2e7379abf133" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="8510a458-dbe4-d48d-c1c6-f2d79aa7c4fc" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="9f13eff1-0f10-c0b3-2432-192a900baa5f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <parameters>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="ad22c52e-9ad1-edb9-9b35-f083be93423e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <parameters>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="fb71b9f1-cf7d-04aa-111f-2114ac9cbda7" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor(System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.#ctor" />
      <parameters>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="2d0a17a6-73d2-b19e-a770-3d0eed59086b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.ApplicationCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="848b5b3d-8d1f-95f3-456f-dd71499bd237" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="c76ea1e3-9107-f047-3ca2-9e2dd59e952b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="3904687a-5788-33d8-2e13-582baeee53c2" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="cb5d9e65-cf4e-d1d7-d097-74b9e5f109aa" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ApplicationCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="f8b65349-35ff-fb9c-da42-6bcce6b3fb5b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ApplicationCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ApplicationCatalog" ref="true" />
      </containers>
      <file name="5b9f19aa-7def-20ba-819a-06af415f8f27" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ec11fa93-ae1d-6704-bd62-b31815150d7e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="08458f0e-8179-2167-c698-506a1c14544d" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="ca572198-96fb-4ae2-d929-edea6f0b7797" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="992aa308-8499-6bf1-3f62-a530e6a75fe2" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="d72b40c7-cc63-3be9-32a4-64fa079ad9c1" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="c38662da-26b0-d9f6-3b68-ced6e1b5df81" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="e1747ba2-16c9-b6cc-554c-2558f3e566c1" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="f7bee62b-5301-0320-dc59-846b21dfc2a3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="f4d1386a-a416-377a-7bb9-d5e9c29ee7c6" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="9700b04c-28a8-dbab-f43a-5c36fd2a2950" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="codeBase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="1fda9b66-c71b-1226-5ff9-7aeb12eb55a4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="codeBase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="eaa95bbb-71c0-3385-4489-209c56ff7c60" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="codeBase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="6c5e4c60-86a7-de42-b132-6fbb196924bc" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor" />
      <parameters>
        <parameter name="codeBase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="dc878c81-e2ed-e1c5-f430-eff468720c75" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly">
      <topicdata group="api" />
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="2c5f3fa7-b2e2-459a-5dcf-6ea851a5fcd8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="7a579477-cb0b-03bd-7e2e-1c1af7510247" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="8549a85b-88e0-39cf-0d20-79f399036b9a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="057209bb-8c52-c639-80f2-fb75b81677b7" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="070c2d96-d055-54f8-9601-7873d7902b8d" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="a7def477-cdf8-f520-e51c-367348e7ed32" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="cda30b97-101a-85a8-0452-261942d69c62" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="90f4488c-ddc9-92ec-bae3-076dff4a945c" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata name="AtomicComposition" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </containers>
      <file name="261c7677-cf0f-f332-189e-ef7aa20afdab" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata name="AtomicComposition" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </containers>
      <file name="8e2d6e65-be59-9015-6a5b-4c5394ae5c95" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="ff818997-a2e1-8d52-c2a8-b08f042e508e" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="1451eedd-b445-1e82-5ef5-72e913b6da07" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
      <topicdata name="TryGetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="7a21f833-d824-c6dd-098b-b6eb741c4134" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="76b7fd27-0b54-f7a5-809e-1c11b2e5ede4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <parameters>
        <parameter name="outerAtomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="a251c2e2-aa72-1d93-27d4-3edf5daf22e2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)">
      <topicdata group="api" />
      <apidata name="AddCompleteAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="completeAction">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="bcbc70f1-298c-a18c-6bd6-2acbe0280dcb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)">
      <topicdata group="api" />
      <apidata name="AddRevertAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="revertAction">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="f9a53d58-495d-1953-581c-9ebba7cd1a8a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="d313fb4c-6b73-c2f8-2c4b-29d95c9fdd78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="de12c6a6-ccd0-1050-d2da-7f4ac59575fb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="7ff89fd4-1609-9922-0334-9a0aaf546c63" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="c14f18e4-8279-1453-c695-355fe31a3e57" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="localAtomicCompositionOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="0500713d-485a-0f93-0e11-b492309842e5" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="31f114de-8444-1470-f49f-3a2c86c12f8e" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ed7cbe48-3c63-efdd-2e81-82f2b8243ccf" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="196f069b-bd95-6d3c-34d3-38d5084e7f74" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="41765ada-a028-a801-7880-e23f8988091e" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="c4aba56a-cd90-c0fe-8505-b63f99bcf655" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="3da35101-bdc6-e614-bc9d-4ef2f58e0285" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="035dfc45-a732-e334-09bc-f546b9c94133" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="9bef10e6-15e7-1efb-b8c5-4dbde0ae2bab" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="f2ebd670-f618-21b6-e5d3-78134ed2bb18" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b39a4780-9e53-db52-0023-7b2af1be114e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="compositionOptions">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="f25dd744-5009-eaf3-91e1-8badfe993668" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog">
      <topicdata group="api" />
      <apidata name="Catalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalog" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="d5b4df5f-ba4e-491c-517c-e8751f2984c2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="d23d9657-bf3f-cb4d-d497-459c75b58078" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="7930baf2-2bbb-a546-a19f-b510b16afe87" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b5a8c582-d40d-5cdb-6ea6-37a20d8e91dd" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider">
      <topicdata group="api" />
      <apidata name="SourceProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceProvider" />
      <setter name="set_SourceProvider" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b00be86d-40b3-b75b-2cef-8a63cf6317d1" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CatalogExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
      <apidata name="CatalogExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c79e170b-ac35-619c-ec8a-95f8cba2bfff" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExtensions">
      <topicdata name="CatalogExtensions" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
      <apidata name="CatalogExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
      </containers>
      <file name="d2440719-8b0e-8ec3-318f-fe749958165e" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CatalogExtensions">
      <topicdata name="CatalogExtensions" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
      <apidata name="CatalogExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" />
      </containers>
      <file name="d9ce0f1b-5690-1655-46b4-fab5cccd396e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
      <topicdata group="api" />
      <apidata name="CreateCompositionService" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="composablePartCatalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="93833bfd-695e-eb0a-9a8a-ac708465c958" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="182f1763-10e4-a5d5-60b8-02d94886aacb" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="3e85d566-6c03-9a87-c855-7b2f104295d4" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="77b585bc-9ee9-7582-ee80-34a37eb2a019" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="b8b6cd96-bdc1-e8c1-0808-50bd52384628" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="addedDefinitions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="removedDefinitions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="d78e873b-fcd0-243d-225b-1a07ea0c06ce" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions">
      <topicdata group="api" />
      <apidata name="AddedDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedDefinitions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="ced019b1-3bfa-4beb-cd44-e9010d0fdb8b" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition">
      <topicdata group="api" />
      <apidata name="AtomicComposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AtomicComposition" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="aae22562-277f-52ca-7584-6f70d0517395" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions">
      <topicdata group="api" />
      <apidata name="RemovedDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedDefinitions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="6563e865-263d-6ea1-9aea-b95e1818bf97" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="c8d89d3a-2bdd-cfaf-3284-ed45742cd193" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="b8fcdbd6-538f-3f73-df25-3fa05cc44194" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="1a473986-3a8c-6057-2eec-d1fe892fe3d5" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="e7d7ca4f-a8c7-8685-e4fc-d0acab8906e2" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="4c4599f4-47b7-c5c8-1f3a-5f158bebebea" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="dfa7d331-bd82-3167-7b14-b4c68721e184" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="d07ad1f5-11c9-1e6e-c687-ae508f6e19ed" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="6b8aed03-a57d-3dd5-5225-2da811e55840" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <parameters>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="763dc4f0-6c06-77e7-f22a-5369a82949e0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <parameters>
        <parameter name="compositionOptions">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="743a5967-5070-b0aa-1c81-71f37c60a83d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <topicdata group="api" />
      <apidata name="Compose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="63b5aa96-4a6a-79e6-00e9-3a5d832a4e3c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="6580f18c-79d2-fdd8-4b81-16976987c484" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="0feb7766-1704-e792-1180-df59e958b932" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="aafea548-1a85-6262-4d56-0fe7f4068f85" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider">
      <topicdata group="api" />
      <apidata name="SourceProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceProvider" />
      <setter name="set_SourceProvider" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="7ef8467b-a4d1-4c64-00d7-cfcb5d75e7d5" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="d09131ee-9abc-caff-1b4d-342a58c1c8a7" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" source="extension">
          <apidata name="AddPart" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="871d6779-4aff-de6f-4062-e002b2ca147d" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" source="extension">
          <apidata name="AddPart" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="95b599a1-c6cc-0be8-7a7f-0800c71ac6c7" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="cc49899c-fcde-d14c-3cc3-e85e0be6a314" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="4297fdc2-cf89-9282-2539-c4b390a7ad0a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="d1d4f2c1-7650-077a-6de6-82c34961bc0a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <parameters>
        <parameter name="partsToAdd">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="partsToRemove">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="6e6e2b90-c3c8-7583-5aa5-6b945ba388db" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)">
      <topicdata group="api" />
      <apidata name="AddExport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="export">
          <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="873d23ee-59ed-f08a-0c4c-8450222af5f7" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="AddPart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="68b67af9-0078-3070-e437-c09685a7c5a2" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd">
      <topicdata group="api" />
      <apidata name="PartsToAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartsToAdd" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="6a721093-6eb1-708d-de5c-98795a5b70a2" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove">
      <topicdata group="api" />
      <apidata name="PartsToRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartsToRemove" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="0ecb3b84-cf1b-5bf8-f766-266a767269df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="RemovePart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="1815a5ea-84a8-3a47-e641-4ad75f226d69" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="560feaae-13e3-ea74-d0a7-7819c6cd8cf6" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata name="CompositionConstants" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericContractMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericParametersMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ImportSourceMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.IsGenericPartMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      </containers>
      <file name="b32f81ed-735c-c68d-2356-91a229f3e20e" />
    </api>
    <api id="Fields.T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata name="CompositionConstants" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericContractMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericParametersMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ImportSourceMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.IsGenericPartMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      </containers>
      <file name="124c9c14-fe8f-8b05-2b38-fd07f9493f21" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName">
      <topicdata group="api" />
      <apidata name="ExportTypeIdentityMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>ExportTypeIdentity</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="e74918c9-2f88-f931-7f88-9b0005b871c4" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericContractMetadataName">
      <topicdata group="api" />
      <apidata name="GenericContractMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.GenericContractName</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="fee819ba-30eb-ab38-8350-606456dfafba" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.GenericParametersMetadataName">
      <topicdata group="api" />
      <apidata name="GenericParametersMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.GenericParameters</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="35860a56-fd37-d15f-39ae-fb5c1c5ea249" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ImportSourceMetadataName">
      <topicdata group="api" />
      <apidata name="ImportSourceMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.ImportSource</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="9664da5c-deab-57fc-d83d-65fbbcc47624" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.IsGenericPartMetadataName">
      <topicdata group="api" />
      <apidata name="IsGenericPartMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.IsGenericPart</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="2704cedf-38e0-accb-6d4e-9ed330b0b746" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName">
      <topicdata group="api" />
      <apidata name="PartCreationPolicyMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.CreationPolicy</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="2e59a125-0f81-7166-4523-420ad4f1d484" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ba6caf57-0de7-63e9-7adf-b0531ea42b91" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" source="extension">
          <apidata name="ComposeParts" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedParts" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="fd2b0e5f-9402-48ec-12a7-ef681416efce" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" source="extension">
          <apidata name="ComposeParts" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedParts" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="0b585ba5-bb04-c2aa-510d-e5be48e52243" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="c0099f1a-793c-3f4a-3be9-b34eabb23b1c" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="164c2d6a-9fac-aba4-569d-fbd2259f220d" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="cd5876be-c93a-b098-44ae-b81f53a3b430" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="ba9aacde-f8be-33c1-238f-f5fe7efc77b8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
      <topicdata name="ReleaseExport" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="bb9550a2-67bf-bb73-1e54-afc49d291882" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
      <topicdata name="ReleaseExports" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="9322c179-4744-0fbf-94bb-06339f1bf00d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e4e4f515-2b1e-1ff2-2512-af9b97774b66" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="compositionOptions">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="24753dbe-f5fd-7452-cee4-7880d0489d73" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e1c29e78-7fbf-ce0d-0164-a50e28776e64" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="95d97c5a-8b4c-7e06-0b52-baab94688919" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="compositionOptions">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="d4cbdc53-99c0-9526-7d11-931e4b424b32" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="5913eb16-9fb2-81a0-ec24-1c05cd40bcb0" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
      <topicdata group="api" />
      <apidata name="Catalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalog" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="38c6a31a-c8d5-1854-75c2-207093200625" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <topicdata group="api" />
      <apidata name="Compose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="187ad6d4-45ad-e2da-09e4-f11ebb295854" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="7d7deaad-f395-aaa7-e155-002b97bf43c5" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="4cff8254-5fb3-5057-1da9-060797764b72" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="f3418a8f-cd54-3ed9-3af6-39213ba0e778" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="8ad8846c-41bf-c91b-133e-71d2364b302e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
      <topicdata group="api" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="export">
          <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="f56c63d1-f5a9-48d0-79f7-e5dff3f25075" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
      <topicdata group="api" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="export">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="71393385-3403-bd66-1612-31249bcccba9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e6c184ee-4acd-a8ce-188a-c823f0809860" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Lazy`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="9bf278f4-cde0-9992-f80c-a8e6ef16dc78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Lazy`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
                  <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="4998cf14-a71e-df13-556c-33e5abd37ef8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="990d1055-135e-fe00-371e-8264ca0e3f32" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionOptions">
      <topicdata group="api" />
      <apidata name="CompositionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionOptions.Default" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionOptions.DisableSilentRejection" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionOptions.IsThreadSafe" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionOptions.ExportCompositionService" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="814e5963-dba9-1bc9-edef-c7c9ed89f027" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionOptions.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </containers>
      <file name="e79b0514-d0cc-d88c-8ea4-c9598c7d4a9c" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionOptions.DisableSilentRejection">
      <topicdata group="api" notopic="" />
      <apidata name="DisableSilentRejection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </containers>
      <file name="cb936fe8-53db-d31c-5b12-e73e97660d01" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionOptions.ExportCompositionService">
      <topicdata group="api" notopic="" />
      <apidata name="ExportCompositionService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </containers>
      <file name="df7f5179-143f-40d8-551f-d1edbc791f15" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionOptions.IsThreadSafe">
      <topicdata group="api" notopic="" />
      <apidata name="IsThreadSafe" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
      </containers>
      <file name="1036cfd9-2a17-288e-6e0d-0ebdddf72118" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="CompositionScopeDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="a75f6a7d-9736-eecc-ac03-4978a34c2fd4" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
      <topicdata name="CompositionScopeDefinition" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="CompositionScopeDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})" />
        </element>
        <element api="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      </containers>
      <file name="de0dfb6b-fc5d-d32d-0fd8-6f5563f9ef12" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
      <topicdata name="CompositionScopeDefinition" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="CompositionScopeDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      </containers>
      <file name="51bbc7ce-27a2-c3f2-ef77-525209d62905" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
      <topicdata name="CompositionScopeDefinition" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="CompositionScopeDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      </containers>
      <file name="8a1f1961-b44a-fd99-7961-d26b2a71ecf3" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
      <topicdata name="CompositionScopeDefinition" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="CompositionScopeDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      </containers>
      <file name="e1887a20-dffc-b354-63a2-71ae1641ce44" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="f302dbfe-434e-fc3e-6b46-2a390691a1ad" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="4acdddc2-72de-489f-9a30-1f6c3c622eeb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="797e6b35-df49-7266-37fb-9cfdfa425152" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="children">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="2479f370-b0ec-2244-f4ba-55b836dc5a88" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="children">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="publicSurface">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="4ab321ac-109a-c0b3-07e4-779394b8fe5d" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="704f3989-64f5-8178-896e-cfce01d351f5" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="15ba998d-80f0-191b-a574-240e509b9500" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="27c0f6bb-97c7-e54d-2c94-399b773830d1" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="78405e2b-8594-69f7-3ca8-177ac18da67c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="1f2f1216-4d86-b6ca-138f-6b267d4cf816" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="4c240155-e818-1154-c7d1-e2e02c3ac9f5" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="5927da2c-b696-2847-f7ee-c4d480130dcb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="28691c82-57c6-ee96-403d-fadadd328248" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface">
      <topicdata group="api" />
      <apidata name="PublicSurface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_PublicSurface" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
      </containers>
      <file name="242fe98c-8b28-a2a9-20fc-98a8c811ded8" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionService" />
      <apidata name="CompositionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="a1df7147-d54b-e237-8277-b4bb42da8250" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionService">
      <topicdata name="CompositionService" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionService" />
      <apidata name="CompositionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" />
      </containers>
      <file name="1d2691dc-f0d0-bdc6-fd0e-804e4a35d604" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionService">
      <topicdata name="CompositionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionService" />
      <apidata name="CompositionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" />
      </containers>
      <file name="e0ee0a22-37a3-369a-c455-77d9cdc0dc6a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
      </containers>
      <file name="7f40b0f4-8f58-5a12-aa3b-bd5e27037854" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
      </containers>
      <file name="d6a98eb8-5351-f244-2e8c-1b40cb8b3e7d" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="DirectoryCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="b6c7194b-7141-66cd-059d-905706b46b68" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <topicdata name="DirectoryCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="DirectoryCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      </containers>
      <file name="81c0cb62-e076-822c-e417-4ca65705f118" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <topicdata name="DirectoryCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="DirectoryCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      </containers>
      <file name="4fc95543-63da-b712-d226-5f70d132aafc" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <topicdata name="DirectoryCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="DirectoryCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      </containers>
      <file name="f4027e76-7463-9982-879e-6307e0ca10ba" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog">
      <topicdata name="DirectoryCatalog" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="DirectoryCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      </containers>
      <file name="4fe8ead2-1a75-3919-38a0-3075730fb125" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="327ba888-8248-b404-ad9b-a5d66e03dfc4" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="a88a4a4c-4671-5038-c924-81d9c124b6a0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="7f7d9874-3460-428b-8193-1f87e3675804" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="d086c8e0-95d7-3f82-cf6f-47e239355cd8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="9b90ef22-304e-97ae-7a0b-6f9a66ef0ffa" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="03002106-d6f7-242c-c2ff-616be1bac6d6" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="8c6b794a-35cd-275e-b1d6-a185d41991b9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="40a23d65-9bee-8c13-4d17-57a9c1fdb483" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="9433d02e-a088-58a4-faa5-07daf053746f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="dcecb7cc-525b-e91d-bd2e-f0c98c518515" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="ba6e9e21-2163-60ae-8ee7-84e0084690bd" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="a6fd4b68-a133-1ea7-fee1-e59559a22f47" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="9d4ef30c-5ed5-81d8-6a79-7b48c4e3f1a1" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath">
      <topicdata group="api" />
      <apidata name="FullPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FullPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="70af12b4-4f41-9143-6f98-7ed6f1649d45" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="1b0fbcbd-e8cd-be6f-4ba0-f853ae4a6283" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="f22be44b-cd06-432c-475c-7108f0c1429a" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles">
      <topicdata group="api" />
      <apidata name="LoadedFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoadedFiles" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="6cea8131-fa99-e5cc-e100-4353e887cb9d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="4c23646b-212b-47f2-7048-aa71ba37076d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="5eda86e1-6b4a-0c25-1009-b32ee1b156d3" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="220c599b-89b2-d8fa-7b2a-5820996f71ad" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="fa651a5a-1ee7-1d6d-7828-81638d5ef54d" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern">
      <topicdata group="api" />
      <apidata name="SearchPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SearchPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="762581df-4d80-5dd8-957a-ec1ed9b647c4" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="8c18716f-a781-bd8b-590d-459c20e04b58" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="245b17f2-eeb6-05a6-0980-0dd430dac7dc" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </containers>
      <file name="53cb22e3-c541-bebf-ae09-751e9a0cb7c4" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="f95802a5-286e-b667-585b-12d48daac7ba" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="3a782442-7bf7-774f-1f35-4c6c62c3689b" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="7d68c871-c158-f30b-b931-8aaaa66e481f" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="e509f25e-634a-45d7-9ec9-4445dc2c37b4" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
      <topicdata name="GetExport" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="72d99097-c44a-cded-fd8a-b27039605253" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
      <topicdata name="GetExportedValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="89cb16ba-9272-6a66-e8e1-ae6b0b7f3ea8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
      <topicdata name="GetExportedValueOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="d9f90113-0fc6-1acd-fa21-1e174b7df847" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
      <topicdata name="GetExportedValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="7557c6ae-c5fa-d0a1-572e-485c5f27f4ce" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
      <topicdata name="GetExports" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="bbf5b20c-ffad-b95a-7387-6121f1e130cc" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="1f9ab8f0-2912-5601-a4b5-3f4efd5b41d3" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged">
      <topicdata group="api" />
      <apidata name="ExportsChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExportsChanged" />
      <remover name="remove_ExportsChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="77491672-122f-6aa5-ac8d-751da53584e9" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging">
      <topicdata group="api" />
      <apidata name="ExportsChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExportsChanging" />
      <remover name="remove_ExportsChanging" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="fed08698-66de-5e43-85b1-ac9de5d72718" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="963c0daa-9738-c217-7ff4-159140fdd6df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <returns>
        <type api="T:System.Lazy`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
            <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="9044e69d-8f3c-98b0-dae0-ff96b76ce2aa" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="f0d94660-da7f-1fcc-e021-fcf20304fc3c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
            <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="7a13093f-a5ac-5512-92ac-c68c53284a0b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1">
      <topicdata group="api" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="aac7747b-15a6-34df-5b1c-2490c1ca13a0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="6816b28d-0a2f-bf6c-db48-f4c95ffefeb3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1">
      <topicdata group="api" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="465927fe-959a-d999-ce79-a7af6221a20d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="f0fde4f1-633b-9fcd-da47-27415f116550" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1">
      <topicdata group="api" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="41114376-2066-34fa-6500-10fe482d7a13" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="a0e32a1a-ca0d-3835-e76f-53d8174b1d1c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="708a47e2-c2b2-dfa0-afbb-fb05cef37c3a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
                <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="0b974905-1c6e-32e1-58ea-d473695787ac" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="0fb4ae34-9b9c-2c61-d205-589bae463644" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="07e5d7fd-1ef8-7253-9d27-415aa6c7dc93" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="8cefaa31-4ce3-445c-13b2-aeae0d546672" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
                <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="987cb25a-17ec-552b-0594-fff02f06330c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="metadataViewType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="6017b0cb-a17e-30c9-06f6-70e6ff035b78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="e1cf576b-9ae0-b097-4697-c783ddf2575f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnExportsChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="49fe4b6f-b2ce-2318-e077-e64dbd9688cb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnExportsChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="fbd73a1c-687a-4fca-c1f9-6e97e85b16df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)">
      <topicdata group="api" />
      <apidata name="TryGetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
        <parameter name="exports" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="8890bce3-1323-44d2-707f-1c77945489a6" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="4dff6d94-2920-43ee-9207-94f5a8dbbb91" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="32185601-d99c-b34f-712c-dd7052ec32b9" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="8b3cb16a-4772-36ac-9dbe-97451b834ee4" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="e370f3c2-877e-4a4c-474d-26b345c6760c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="addedExports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="removedExports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="73dba646-b14e-e97e-c697-b2ba256f5810" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports">
      <topicdata group="api" />
      <apidata name="AddedExports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedExports" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="e3bc7a61-aef9-e58b-4193-ff6caed48bdb" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition">
      <topicdata group="api" />
      <apidata name="AtomicComposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AtomicComposition" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="d1362e5a-6dbc-0c04-3f47-32a10baf1c7e" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames">
      <topicdata group="api" />
      <apidata name="ChangedContractNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangedContractNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="60d7adaf-191e-49a3-aa5f-c920d9e60954" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports">
      <topicdata group="api" />
      <apidata name="RemovedExports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedExports" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="1dbfd457-4464-5749-a1fc-8b3249fd37f1" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="FilteredCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="12d27b5a-8687-3e85-e37f-191e122ee783" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
      <topicdata name="FilteredCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="FilteredCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" />
        <element api="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" />
        <element api="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      </containers>
      <file name="bc0d3696-2392-cd33-2f24-ac1b58d713ac" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
      <topicdata name="FilteredCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="FilteredCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents" />
          <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      </containers>
      <file name="efe453b0-62c4-1d8d-b503-26df4823652b" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
      <topicdata name="FilteredCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="FilteredCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      </containers>
      <file name="2c9fbc17-817d-ccbe-bc6a-cd17f3af1242" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
      <topicdata name="FilteredCatalog" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="FilteredCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      </containers>
      <file name="1ec16fa0-1db3-90b2-c864-9c9550601d94" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="238bf75d-8ac6-64c0-1dad-dfdfb54290a1" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
      <topicdata name="IncludeDependencies" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="IncludeDependencies" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="5d49935c-bab4-1ca3-8941-a61ad88595e4" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
      <topicdata name="IncludeDependents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.FilteredCatalog" />
      <apidata name="IncludeDependents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents" />
        <element api="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="ca3826b2-364b-7a66-4b5d-3a253bc08a29" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="edc3c128-1c05-aaa6-16bb-cc4b0d6cf18e" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="2b97f0d3-2da9-345f-37a6-b8f402f3795e" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="171856cd-5003-7f4e-7c81-e62cfa15e50b" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement">
      <topicdata group="api" />
      <apidata name="Complement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Complement" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="36800e68-fd40-8915-9b65-c6c12c968d0b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="5de097cd-3b42-2d80-6d7b-43f0079708af" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="d14472c3-dffb-c04f-323d-37876706ce74" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="2c0fae64-b1fc-32e1-03f0-50b5c521eda3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
      <topicdata group="api" />
      <apidata name="IncludeDependencies" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="5ce5e449-1fe1-0cba-7a80-197ac11beff0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
      <topicdata group="api" />
      <apidata name="IncludeDependencies" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importFilter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="6dce6420-a383-574f-37e4-06f83a819a55" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
      <topicdata group="api" />
      <apidata name="IncludeDependents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="92773c27-6afa-e394-4b89-041073348183" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
      <topicdata group="api" />
      <apidata name="IncludeDependents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importFilter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="f9414201-4a0b-df80-c3e5-80604c148d0e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="7d069834-89e7-b692-f21a-5837bf2eb9cf" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </containers>
      <file name="c282a90e-cef2-9ad5-b556-4b3e24fee863" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="97bb2709-7933-5d27-7218-fc53372aa29e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata name="ImportEngine" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      </containers>
      <file name="4f5e8cb6-c70f-57cf-50bc-6e573e9c6339" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata name="ImportEngine" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" source="extension" overload="true">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="reflectionContext">
              <type api="T:System.Reflection.ReflectionContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      </containers>
      <file name="e25a9912-9de5-560c-e298-e0d6a4b7eef8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="9e79f673-57d2-6648-f526-c4e1acd927ef" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="92dc136b-8337-10e2-12e4-b1f76410c22b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor" />
      <parameters>
        <parameter name="sourceProvider">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="c1b2be03-7a06-a208-f9c8-2caa6473d93d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor" />
      <parameters>
        <parameter name="sourceProvider">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="93d201f2-d881-c167-da14-dab0e0a33bf9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor" />
      <parameters>
        <parameter name="sourceProvider">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </parameter>
        <parameter name="compositionOptions">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="bfb99d1a-f7cd-c49b-51bb-f91ccf551f1c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="417d1a2a-b940-abfd-941c-b472dd9cfd90" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="c301449e-3ffd-6182-9428-7b6c04e767b3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="PreviewImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="6b4a7223-d956-3a0c-871a-66ec8939f5e1" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="ReleaseImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="91326edd-52f2-2324-db7f-aae9235a57d3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="41d583db-ee2f-b5fc-3034-8f9ee35cbba6" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="5b49de94-5826-3c49-d01f-c5ffc6f4c622" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" ref="true" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
        <type api="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="7bee59b0-18a8-78d2-1e0c-7fb5b58e305b" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata name="INotifyComposablePartCatalogChanged" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      </containers>
      <file name="964058ae-6f5a-625e-7bf5-8a095a012bff" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata name="INotifyComposablePartCatalogChanged" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      </containers>
      <file name="494ac5a8-d0c4-acf9-5fcd-1135956d276a" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </containers>
      <file name="57a53253-3584-b43b-3660-80936c02313f" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </containers>
      <file name="9d4fdea5-6e13-09e2-9965-d35d2793b37b" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ScopingExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      <apidata name="ScopingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f22c9f92-aa7f-4a6e-3a04-7c999d125113" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ScopingExtensions">
      <topicdata name="ScopingExtensions" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      <apidata name="ScopingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports">
          <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      </containers>
      <file name="3fe94ed3-e7da-a686-e858-6f0880534d2a" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ScopingExtensions">
      <topicdata name="ScopingExtensions" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      <apidata name="ScopingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports">
          <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      </containers>
      <file name="40b56b64-47c2-cfc4-3ea1-38eed2a50ac7" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports">
      <topicdata name="Imports" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
      <apidata name="Imports" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <file name="240b702e-469b-e3a0-c408-304cb1d27650" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
      <topicdata group="api" />
      <apidata name="ContainsPartMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="151b009c-92d6-40e0-473b-bfb1b44c747c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
      <topicdata group="api" />
      <apidata name="ContainsPartMetadataWithKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="61216653-71cb-2f80-1600-0f320b8e1bc1" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
      <topicdata group="api" />
      <apidata name="Exports" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a87d1f05-88f3-0170-250b-55c6de8b872d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2069dca2-1e41-faa0-f0e1-2cda85b0c8e8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
      <topicdata group="api" />
      <apidata name="Imports" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="18416e45-9826-6051-78f0-4d4bd7feee53" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
      <topicdata group="api" />
      <apidata name="Imports" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="importCardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ced545d4-7983-64d8-656c-6689e827bf7e" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="42d3c82e-6afd-d65a-0810-8b0bf563682b" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="e71e77d3-0123-d3e1-79d7-ed901d83e615" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" source="extension">
          <apidata name="Filter" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="filter">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" source="extension">
          <apidata name="CreateCompositionService" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.ComponentModel.Composition.Hosting.CompositionService" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition.Hosting" />
            <type api="T:System.ComponentModel.Composition.Hosting.CatalogExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="663478da-fa49-36cd-3266-c1fd30154c2c" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="dcb905a5-eeff-3467-918c-29cc6f678aba" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="d733d173-fdd4-3fda-012c-b383856103e0" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="05324694-d2f7-c489-edbd-9cdf72d68d31" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="f5bcee13-b458-1586-b549-d3f18aaba448" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="d984924b-f586-f922-fd44-005d045b812e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="37e51796-a317-9f2e-499d-1c68b7881d14" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="reflectionContext">
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
        </parameter>
        <parameter name="definitionOrigin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="5551d129-5bca-6512-373b-f66315f323e0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="e91ef99d-eb0d-f579-2233-8bd18dc2ac3d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="fb4cca63-4d03-ae1c-4fe5-1e0835d2b692" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="467d02b6-210f-f64f-296d-9784d34a9288" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="5eec66f7-3ad6-fac0-c8e1-83a01ce618c6" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="81be493e-e119-e59b-3344-c41db5b06083" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="8542d0d8-6343-245a-ca47-cc436d466402" />
    </api>
  </apis>
</reflection>