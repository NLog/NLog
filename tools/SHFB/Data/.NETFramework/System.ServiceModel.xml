<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Activities">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Activation">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Channels">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>C2196CB7-3181-4ebe-97B3-73A075066880</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Channels.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Channels.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Channels.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Web">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.WorkflowServices">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel">
      <topicdata group="api" />
      <apidata name="System.ServiceModel" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.ActionNotSupportedException" />
        <element api="T:System.ServiceModel.AddressAlreadyInUseException" />
        <element api="T:System.ServiceModel.AddressAccessDeniedException" />
        <element api="T:System.ServiceModel.ChannelTerminatedException" />
        <element api="T:System.ServiceModel.CommunicationException" />
        <element api="T:System.ServiceModel.CommunicationObjectAbortedException" />
        <element api="T:System.ServiceModel.CommunicationObjectFaultedException" />
        <element api="T:System.ServiceModel.CommunicationState" />
        <element api="T:System.ServiceModel.EndpointNotFoundException" />
        <element api="T:System.ServiceModel.ICommunicationObject" />
        <element api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
        <element api="T:System.ServiceModel.ProtocolException" />
        <element api="T:System.ServiceModel.ServerTooBusyException" />
        <element api="T:System.ServiceModel.ServiceActivationException" />
        <element api="T:System.ServiceModel.HostNameComparisonMode" />
        <element api="T:System.ServiceModel.TransferMode" />
        <element api="T:System.ServiceModel.BasicHttpContextBinding" />
        <element api="T:System.ServiceModel.NetTcpContextBinding" />
        <element api="T:System.ServiceModel.WSHttpContextBinding" />
        <element api="T:System.ServiceModel.QuotaExceededException" />
        <element api="T:System.ServiceModel.AddressFilterMode" />
        <element api="T:System.ServiceModel.XPathMessageQuery" />
        <element api="T:System.ServiceModel.DeadLetterQueue" />
        <element api="T:System.ServiceModel.MsmqAuthenticationMode" />
        <element api="T:System.ServiceModel.MsmqBindingBase" />
        <element api="T:System.ServiceModel.MsmqEncryptionAlgorithm" />
        <element api="T:System.ServiceModel.MsmqException" />
        <element api="T:System.ServiceModel.MsmqSecureHashAlgorithm" />
        <element api="T:System.ServiceModel.MsmqPoisonMessageException" />
        <element api="T:System.ServiceModel.PoisonMessageException" />
        <element api="T:System.ServiceModel.ReceiveErrorHandling" />
        <element api="T:System.ServiceModel.QueueTransferProtocol" />
        <element api="T:System.ServiceModel.ReliableMessagingVersion" />
        <element api="T:System.ServiceModel.EndpointIdentity" />
        <element api="T:System.ServiceModel.SpnEndpointIdentity" />
        <element api="T:System.ServiceModel.UpnEndpointIdentity" />
        <element api="T:System.ServiceModel.DnsEndpointIdentity" />
        <element api="T:System.ServiceModel.RsaEndpointIdentity" />
        <element api="T:System.ServiceModel.X509CertificateEndpointIdentity" />
        <element api="T:System.ServiceModel.MessageSecurityVersion" />
        <element api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
        <element api="T:System.ServiceModel.ServiceAuthorizationManager" />
        <element api="T:System.ServiceModel.ServiceAuthenticationManager" />
        <element api="T:System.ServiceModel.ServiceSecurityContext" />
        <element api="T:System.ServiceModel.AuditLevel" />
        <element api="T:System.ServiceModel.AuditLogLocation" />
        <element api="T:System.ServiceModel.DeliveryRequirementsAttribute" />
        <element api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" />
        <element api="T:System.ServiceModel.CallbackBehaviorAttribute" />
        <element api="T:System.ServiceModel.DataContractFormatAttribute" />
        <element api="T:System.ServiceModel.FaultContractAttribute" />
        <element api="T:System.ServiceModel.ImpersonationOption" />
        <element api="T:System.ServiceModel.MessageBodyMemberAttribute" />
        <element api="T:System.ServiceModel.MessageContractAttribute" />
        <element api="T:System.ServiceModel.MessageContractMemberAttribute" />
        <element api="T:System.ServiceModel.MessageHeaderArrayAttribute" />
        <element api="T:System.ServiceModel.MessageHeaderAttribute" />
        <element api="T:System.ServiceModel.MessageParameterAttribute" />
        <element api="T:System.ServiceModel.MessagePropertyAttribute" />
        <element api="T:System.ServiceModel.OperationBehaviorAttribute" />
        <element api="T:System.ServiceModel.OperationContractAttribute" />
        <element api="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
        <element api="T:System.ServiceModel.ServiceBehaviorAttribute" />
        <element api="T:System.ServiceModel.ServiceContractAttribute" />
        <element api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
        <element api="T:System.ServiceModel.SessionMode" />
        <element api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
        <element api="T:System.ServiceModel.CacheSetting" />
        <element api="T:System.ServiceModel.ChannelFactory" />
        <element api="T:System.ServiceModel.ChannelFactory`1" />
        <element api="T:System.ServiceModel.ConcurrencyMode" />
        <element api="T:System.ServiceModel.DuplexChannelFactory`1" />
        <element api="T:System.ServiceModel.ExceptionDetail" />
        <element api="T:System.ServiceModel.ExtensionCollection`1" />
        <element api="T:System.ServiceModel.IDuplexContextChannel" />
        <element api="T:System.ServiceModel.IExtensibleObject`1" />
        <element api="T:System.ServiceModel.IExtension`1" />
        <element api="T:System.ServiceModel.IExtensionCollection`1" />
        <element api="T:System.ServiceModel.InvalidMessageContractException" />
        <element api="T:System.ServiceModel.InstanceContextMode" />
        <element api="T:System.ServiceModel.IClientChannel" />
        <element api="T:System.ServiceModel.IContextChannel" />
        <element api="T:System.ServiceModel.IServiceChannel" />
        <element api="T:System.ServiceModel.ReleaseInstanceMode" />
        <element api="T:System.ServiceModel.ServiceHostBase" />
        <element api="T:System.ServiceModel.ServiceHost" />
        <element api="T:System.ServiceModel.ServiceConfiguration" />
        <element api="T:System.ServiceModel.OperationFormatUse" />
        <element api="T:System.ServiceModel.OperationFormatStyle" />
        <element api="T:System.ServiceModel.UriSchemeKeyedCollection" />
        <element api="T:System.ServiceModel.DuplexClientBase`1" />
        <element api="T:System.ServiceModel.FaultException" />
        <element api="T:System.ServiceModel.FaultException`1" />
        <element api="T:System.ServiceModel.MessageHeaderException" />
        <element api="T:System.ServiceModel.OperationContext" />
        <element api="T:System.ServiceModel.OperationContextScope" />
        <element api="T:System.ServiceModel.ClientBase`1" />
        <element api="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />
        <element api="T:System.ServiceModel.ClientBase`1.EndOperationDelegate" />
        <element api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
        <element api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
        <element api="T:System.ServiceModel.InstanceContext" />
        <element api="T:System.ServiceModel.FaultImportOptions" />
        <element api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
        <element api="T:System.ServiceModel.MessageHeader`1" />
        <element api="T:System.ServiceModel.EndpointAddress" />
        <element api="T:System.ServiceModel.EndpointAddressBuilder" />
        <element api="T:System.ServiceModel.EndpointAddress10" />
        <element api="T:System.ServiceModel.EndpointAddressAugust2004" />
        <element api="T:System.ServiceModel.EnvelopeVersion" />
        <element api="T:System.ServiceModel.FaultCode" />
        <element api="T:System.ServiceModel.FaultReason" />
        <element api="T:System.ServiceModel.FaultReasonText" />
        <element api="T:System.ServiceModel.HttpBindingBase" />
        <element api="T:System.ServiceModel.BasicHttpBinding" />
        <element api="T:System.ServiceModel.BasicHttpsBinding" />
        <element api="T:System.ServiceModel.BasicHttpsSecurity" />
        <element api="T:System.ServiceModel.BasicHttpsSecurityMode" />
        <element api="T:System.ServiceModel.BasicHttpMessageCredentialType" />
        <element api="T:System.ServiceModel.BasicHttpMessageSecurity" />
        <element api="T:System.ServiceModel.BasicHttpSecurity" />
        <element api="T:System.ServiceModel.BasicHttpSecurityMode" />
        <element api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
        <element api="T:System.ServiceModel.HttpClientCredentialType" />
        <element api="T:System.ServiceModel.HttpProxyCredentialType" />
        <element api="T:System.ServiceModel.HttpTransportSecurity" />
        <element api="T:System.ServiceModel.MessageCredentialType" />
        <element api="T:System.ServiceModel.MessageSecurityOverTcp" />
        <element api="T:System.ServiceModel.MessageSecurityOverHttp" />
        <element api="T:System.ServiceModel.MessageSecurityOverMsmq" />
        <element api="T:System.ServiceModel.MsmqTransportSecurity" />
        <element api="T:System.ServiceModel.NamedPipeTransportSecurity" />
        <element api="T:System.ServiceModel.NetHttpBinding" />
        <element api="T:System.ServiceModel.NetHttpMessageEncoding" />
        <element api="T:System.ServiceModel.NetHttpsBinding" />
        <element api="T:System.ServiceModel.NetMsmqBinding" />
        <element api="T:System.ServiceModel.NetMsmqSecurity" />
        <element api="T:System.ServiceModel.NetMsmqSecurityMode" />
        <element api="T:System.ServiceModel.NetNamedPipeBinding" />
        <element api="T:System.ServiceModel.NetNamedPipeSecurity" />
        <element api="T:System.ServiceModel.NetNamedPipeSecurityMode" />
        <element api="T:System.ServiceModel.NetPeerTcpBinding" />
        <element api="T:System.ServiceModel.NetTcpBinding" />
        <element api="T:System.ServiceModel.NetTcpSecurity" />
        <element api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
        <element api="T:System.ServiceModel.SecurityMode" />
        <element api="T:System.ServiceModel.TcpClientCredentialType" />
        <element api="T:System.ServiceModel.TcpTransportSecurity" />
        <element api="T:System.ServiceModel.ReliableSession" />
        <element api="T:System.ServiceModel.OptionalReliableSession" />
        <element api="T:System.ServiceModel.WSMessageEncoding" />
        <element api="T:System.ServiceModel.WSFederationHttpBinding" />
        <element api="T:System.ServiceModel.WS2007FederationHttpBinding" />
        <element api="T:System.ServiceModel.WSFederationHttpSecurity" />
        <element api="T:System.ServiceModel.WSFederationHttpSecurityMode" />
        <element api="T:System.ServiceModel.WSHttpBinding" />
        <element api="T:System.ServiceModel.WS2007HttpBinding" />
        <element api="T:System.ServiceModel.WSHttpBindingBase" />
        <element api="T:System.ServiceModel.WSDualHttpBinding" />
        <element api="T:System.ServiceModel.WSDualHttpSecurity" />
        <element api="T:System.ServiceModel.WSDualHttpSecurityMode" />
        <element api="T:System.ServiceModel.WSHttpSecurity" />
        <element api="T:System.ServiceModel.IOnlineStatus" />
        <element api="T:System.ServiceModel.PeerHopCountAttribute" />
        <element api="T:System.ServiceModel.PeerMessageOrigination" />
        <element api="T:System.ServiceModel.PeerMessagePropagation" />
        <element api="T:System.ServiceModel.PeerMessagePropagationFilter" />
        <element api="T:System.ServiceModel.PeerNode" />
        <element api="T:System.ServiceModel.PeerNodeAddress" />
        <element api="T:System.ServiceModel.PeerResolver" />
        <element api="T:System.ServiceModel.PeerSecuritySettings" />
        <element api="T:System.ServiceModel.PeerTransportCredentialType" />
        <element api="T:System.ServiceModel.PeerTransportSecuritySettings" />
        <element api="T:System.ServiceModel.TransactionFlowOption" />
        <element api="T:System.ServiceModel.TransactionFlowAttribute" />
        <element api="T:System.ServiceModel.TransactionProtocol" />
        <element api="T:System.ServiceModel.ExceptionMapper" />
        <element api="T:System.ServiceModel.ServiceHostingEnvironment" />
        <element api="T:System.ServiceModel.Endpoint" />
        <element api="T:System.ServiceModel.EndpointIdentityExtension" />
        <element api="T:System.ServiceModel.MessageQuerySet" />
        <element api="T:System.ServiceModel.CorrelationActionMessageFilter" />
        <element api="T:System.ServiceModel.CorrelationQuery" />
        <element api="T:System.ServiceModel.UdpBinding" />
        <element api="T:System.ServiceModel.WebHttpBinding" />
        <element api="T:System.ServiceModel.WebHttpSecurity" />
        <element api="T:System.ServiceModel.WebHttpSecurityMode" />
        <element api="T:System.ServiceModel.WorkflowServiceHost" />
      </elements>
      <file name="08071cdc-eae3-7918-45b7-5acfc2a4d80d" />
    </api>
    <api id="T:System.ServiceModel.ActionNotSupportedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bdea6876-81c9-0257-b02d-7f8c5b8824cb" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.ActionNotSupportedException.#ctor">
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="3fe981db-d5a9-be79-430d-07cb52d64a94" />
    </api>
    <api id="Methods.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="4a4c0998-002a-3d65-0c03-51796e32c444" />
    </api>
    <api id="Properties.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="2108c3f9-0577-3e94-0a35-5477852720ca" />
    </api>
    <api id="Events.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="dd2967d1-767d-df17-6e5f-47915e01e129" />
    </api>
    <api id="Overload:System.ServiceModel.ActionNotSupportedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor" />
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="fbf21f3e-6bb1-53ca-bfd7-3005aaaceed3" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="0c564b19-f150-dd2e-11e6-5843d55a22ff" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="6f9a807c-0896-89ec-2c07-5f22357ce603" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="80e84995-ee4c-06cf-3ffb-eeb4acda5ead" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="55909242-7dd7-2c08-c54f-4deac67366fa" />
    </api>
    <api id="T:System.ServiceModel.AddressAccessDeniedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name="AddressAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f5a83fa1-8cb9-4f5b-6e0e-6419ac632e75" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.AddressAccessDeniedException">
      <topicdata name="AddressAccessDeniedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name="AddressAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor">
          <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
          <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" />
      </containers>
      <file name="416a2730-a633-2157-601a-561189058432" />
    </api>
    <api id="Methods.T:System.ServiceModel.AddressAccessDeniedException">
      <topicdata name="AddressAccessDeniedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name="AddressAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" />
      </containers>
      <file name="735c4c5b-7984-c6ed-d83c-b3c345d2e9e1" />
    </api>
    <api id="Properties.T:System.ServiceModel.AddressAccessDeniedException">
      <topicdata name="AddressAccessDeniedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name="AddressAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" />
      </containers>
      <file name="d1677fce-6c10-426f-df63-211fae15da74" />
    </api>
    <api id="Events.T:System.ServiceModel.AddressAccessDeniedException">
      <topicdata name="AddressAccessDeniedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name="AddressAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" />
      </containers>
      <file name="c05f7d59-cbe8-ef44-295c-e6692a084d1e" />
    </api>
    <api id="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.AddressAccessDeniedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor" />
        <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
      </containers>
      <file name="80f94149-be3c-8666-6742-a88cd757ae54" />
    </api>
    <api id="M:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
      </containers>
      <file name="53358733-e0e7-4e71-1cac-b2c7f2823f76" />
    </api>
    <api id="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
      </containers>
      <file name="9bbaab52-b16c-6b73-8086-1ab136ede14c" />
    </api>
    <api id="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
      </containers>
      <file name="f1f588ee-9ce0-fb28-5251-1237d7919d2a" />
    </api>
    <api id="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
      </containers>
      <file name="d08f0638-b788-e158-747b-880caad6352c" />
    </api>
    <api id="T:System.ServiceModel.AddressAlreadyInUseException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name="AddressAlreadyInUseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="683222fc-ebfd-398a-5ee7-ee7fb97efc7c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.AddressAlreadyInUseException">
      <topicdata name="AddressAlreadyInUseException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name="AddressAlreadyInUseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor">
          <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
          <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" />
      </containers>
      <file name="5b72ae5c-5c9f-ac08-2789-226a08d94fc9" />
    </api>
    <api id="Methods.T:System.ServiceModel.AddressAlreadyInUseException">
      <topicdata name="AddressAlreadyInUseException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name="AddressAlreadyInUseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" />
      </containers>
      <file name="29986919-8648-9235-f8d3-c2a203d487da" />
    </api>
    <api id="Properties.T:System.ServiceModel.AddressAlreadyInUseException">
      <topicdata name="AddressAlreadyInUseException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name="AddressAlreadyInUseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" />
      </containers>
      <file name="9fe5b652-6c8e-3bf0-6822-8f7ea50451d8" />
    </api>
    <api id="Events.T:System.ServiceModel.AddressAlreadyInUseException">
      <topicdata name="AddressAlreadyInUseException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name="AddressAlreadyInUseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" />
      </containers>
      <file name="22137346-ec18-bf4f-5e7e-b37e0e14cdc1" />
    </api>
    <api id="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.AddressAlreadyInUseException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
        <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
      </containers>
      <file name="39674288-98d3-f279-379f-59e61d8588bf" />
    </api>
    <api id="M:System.ServiceModel.AddressAlreadyInUseException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
      </containers>
      <file name="7dd225fb-ec4a-94f9-a413-e15c8dd96238" />
    </api>
    <api id="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
      </containers>
      <file name="55b03655-068b-b38d-6c69-e60cc1b1dbb1" />
    </api>
    <api id="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
      </containers>
      <file name="c7b28519-40f1-ce5d-3371-1554e28f7b28" />
    </api>
    <api id="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
      </containers>
      <file name="ec77aa90-7998-40b8-475a-d3bb5ff27f81" />
    </api>
    <api id="T:System.ServiceModel.AddressFilterMode">
      <topicdata group="api" />
      <apidata name="AddressFilterMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.AddressFilterMode.Exact" />
        <element api="F:System.ServiceModel.AddressFilterMode.Prefix" />
        <element api="F:System.ServiceModel.AddressFilterMode.Any" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="4e8c92c7-c46a-65b7-88b9-edf676f478e2" />
    </api>
    <api id="F:System.ServiceModel.AddressFilterMode.Any">
      <topicdata group="api" notopic="" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </containers>
      <file name="eb726398-3df9-584f-3f6d-530d12ba79a3" />
    </api>
    <api id="F:System.ServiceModel.AddressFilterMode.Exact">
      <topicdata group="api" notopic="" />
      <apidata name="Exact" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </containers>
      <file name="deed9584-5f15-81be-c96e-514f2a67fe8e" />
    </api>
    <api id="F:System.ServiceModel.AddressFilterMode.Prefix">
      <topicdata group="api" notopic="" />
      <apidata name="Prefix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </containers>
      <file name="e966febb-555b-950c-c690-9a1a678c9b92" />
    </api>
    <api id="T:System.ServiceModel.AuditLevel">
      <topicdata group="api" />
      <apidata name="AuditLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.AuditLevel.None" />
        <element api="F:System.ServiceModel.AuditLevel.Success" />
        <element api="F:System.ServiceModel.AuditLevel.Failure" />
        <element api="F:System.ServiceModel.AuditLevel.SuccessOrFailure" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bb31113d-7fe9-4e08-bcd9-9d3c2f255b5f" />
    </api>
    <api id="F:System.ServiceModel.AuditLevel.Failure">
      <topicdata group="api" notopic="" />
      <apidata name="Failure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </containers>
      <file name="8093c7b5-5c00-b87e-9437-c429db1120b1" />
    </api>
    <api id="F:System.ServiceModel.AuditLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </containers>
      <file name="6b8a83bd-9144-9199-3269-4a7a25fa35df" />
    </api>
    <api id="F:System.ServiceModel.AuditLevel.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </containers>
      <file name="18440be1-c774-085a-93e3-bf9cac9a8612" />
    </api>
    <api id="F:System.ServiceModel.AuditLevel.SuccessOrFailure">
      <topicdata group="api" notopic="" />
      <apidata name="SuccessOrFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </containers>
      <file name="9876115f-d15b-e84a-ac59-6d27c08a6ac1" />
    </api>
    <api id="T:System.ServiceModel.AuditLogLocation">
      <topicdata group="api" />
      <apidata name="AuditLogLocation" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.AuditLogLocation.Default" />
        <element api="F:System.ServiceModel.AuditLogLocation.Application" />
        <element api="F:System.ServiceModel.AuditLogLocation.Security" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="dcf45884-db75-93af-4036-c5320a05b841" />
    </api>
    <api id="F:System.ServiceModel.AuditLogLocation.Application">
      <topicdata group="api" notopic="" />
      <apidata name="Application" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </containers>
      <file name="dad1eba6-3dbb-4577-484c-fce1145117bc" />
    </api>
    <api id="F:System.ServiceModel.AuditLogLocation.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </containers>
      <file name="68363c93-d955-d617-603c-eb043d87c751" />
    </api>
    <api id="F:System.ServiceModel.AuditLogLocation.Security">
      <topicdata group="api" notopic="" />
      <apidata name="Security" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </containers>
      <file name="9e7915e1-8a63-146c-bc32-e52dc939cbc3" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ba4ca80d-2c59-05f6-d585-40dc11aec95d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.#ctor">
          <element api="M:System.ServiceModel.BasicHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
          <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="5964106f-b919-0326-bccb-2a2da3fd9619" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="05eb2262-e977-6629-7cbd-bf752e437fda" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="18e53c38-a04a-94b4-9daf-eeaaf2878856" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
        <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="b4d755df-ba41-1b2d-0cc0-486ea399ad04" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="910282db-c666-3e4b-1418-a52c5bb77f7f" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="18158ce7-e76b-36ba-9c8e-54a18e3e57c1" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="ffc15f73-8fab-b792-9fea-1801c4330cf9" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="fbe5b5ab-a5ff-7a26-1cd1-88f72d6216c3" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="c1ce9494-9f4c-45f9-61f8-93ba2b640e18" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="b0e4a13b-b2b9-dc96-59d9-26d0fcc03bcc" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <topicdata group="api" />
      <apidata name="EnableHttpCookieContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableHttpCookieContainer" />
      <setter name="set_EnableHttpCookieContainer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property is obsolete. To enable Http CookieContainer, use the AllowCookies property instead.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0ab37d84-2516-7c65-6024-f4eacaa1fa11" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
            <enumValue>
              <field name="Text" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="33b04224-01f2-db17-39d8-fecf4f80d512" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="a611db3e-ba0e-4fbd-4880-647d83f5acd7" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer">
      <topicdata group="api" />
      <apidata name="ShouldSerializeEnableHttpCookieContainer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6772c989-c584-5f8c-d22b-961c0e5f0edd" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e43bcc93-415e-d2c5-44bd-e69ce7f57715" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpContextBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpContextBinding" />
      <apidata name="BasicHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3ad99fb6-7fb7-aa85-98b9-6faf455a0014" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpContextBinding">
      <topicdata name="BasicHttpContextBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpContextBinding" />
      <apidata name="BasicHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.#ctor">
          <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
          <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
          <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.String)" />
        </element>
        <element api="P:System.ServiceModel.BasicHttpContextBinding.ContextManagementEnabled" />
        <element api="M:System.ServiceModel.BasicHttpContextBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" />
      </containers>
      <file name="b724876c-b9ec-652e-c4c9-7c891999554e" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpContextBinding">
      <topicdata name="BasicHttpContextBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpContextBinding" />
      <apidata name="BasicHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
        <element api="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.BasicHttpContextBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" />
      </containers>
      <file name="e59fb299-cfe9-ece4-45d6-4e3437f81db6" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpContextBinding">
      <topicdata name="BasicHttpContextBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpContextBinding" />
      <apidata name="BasicHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="P:System.ServiceModel.BasicHttpContextBinding.ContextManagementEnabled" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" />
      </containers>
      <file name="11f82d44-7479-da7e-1f52-2cf42a3c97b7" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpContextBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpContextBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor" />
        <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
        <element api="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <file name="ba8db09f-b26d-15bf-d0fc-4ec6772d2e71" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpContextBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <file name="5a63b01c-8bc3-cf68-7c3d-e5f66fb58309" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <file name="9a07b4bf-8ad6-b866-be0c-d23d8d5d3f16" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpContextBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <file name="38b97e3e-fa74-0f3a-ddd7-0c01fb32b6d1" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpContextBinding.ContextManagementEnabled">
      <topicdata group="api" />
      <apidata name="ContextManagementEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextManagementEnabled" />
      <setter name="set_ContextManagementEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="658abd4c-9531-8a36-fcdb-f870dcc4dd8e" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpContextBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpContextBinding" ref="true" />
      </containers>
      <file name="9ee3f213-92d0-bbca-8f62-dabecce6abf2" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <topicdata group="api" />
      <apidata name="BasicHttpMessageCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />
        <element api="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="42b24a4e-299f-8cbd-4551-11590de858f3" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </containers>
      <file name="21d80667-3502-6ed1-ccfa-7e451e70da82" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <topicdata group="api" notopic="" />
      <apidata name="UserName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </containers>
      <file name="8d4cb467-c099-c784-8363-9af2d4f37747" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpMessageSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpMessageSecurity" />
      <apidata name="BasicHttpMessageSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0740a924-ce64-b643-b707-cda40de0b082" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpMessageSecurity">
      <topicdata name="BasicHttpMessageSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpMessageSecurity" />
      <apidata name="BasicHttpMessageSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
        <element api="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite" />
        <element api="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType" />
        <element api="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" />
      </containers>
      <file name="c69e598b-9c80-6e83-b24c-a3fb5856a349" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpMessageSecurity">
      <topicdata name="BasicHttpMessageSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpMessageSecurity" />
      <apidata name="BasicHttpMessageSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" />
      </containers>
      <file name="fce1d26a-dbf7-6f96-f838-b39da1e10dad" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpMessageSecurity">
      <topicdata name="BasicHttpMessageSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpMessageSecurity" />
      <apidata name="BasicHttpMessageSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite" />
        <element api="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" />
      </containers>
      <file name="d1ee7919-9dae-6e10-0bdd-e6cb698a0e84" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </containers>
      <file name="ecee0f3b-bd49-cd6a-765e-d1bf843b4b3e" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite">
      <topicdata group="api" />
      <apidata name="AlgorithmSuite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AlgorithmSuite" />
      <setter name="set_AlgorithmSuite" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </containers>
      <file name="7eed7231-6365-8932-a8bd-7cfa622a6608" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </containers>
      <file name="c14d3046-f386-2c01-8352-831eac20b4cb" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="ShouldSerializeAlgorithmSuite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="26ef3c56-6150-94c2-824b-c95061086b11" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType">
      <topicdata group="api" />
      <apidata name="ShouldSerializeClientCredentialType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f82508aa-8124-573d-8c85-6f9003b0aaca" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpsBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name="BasicHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="fd48ad0b-3569-e8d9-c536-ab646dad68d6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpsBinding">
      <topicdata name="BasicHttpsBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name="BasicHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.#ctor">
          <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
          <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)" />
          <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpsBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.BasicHttpsBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpsBinding.Security" />
        <element api="M:System.ServiceModel.BasicHttpsBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" />
      </containers>
      <file name="75dadf86-b4f7-89d1-6969-7c36532860a2" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpsBinding">
      <topicdata name="BasicHttpsBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name="BasicHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpsBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.BasicHttpsBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpsBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" />
      </containers>
      <file name="702c6472-5760-6610-2f86-03fe8cc6f468" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpsBinding">
      <topicdata name="BasicHttpsBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name="BasicHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpsBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.BasicHttpsBinding.Security" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" />
      </containers>
      <file name="f5ba1e2d-b14f-8813-854e-5c06be1030c0" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpsBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor" />
        <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)" />
        <element api="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="a94d22cf-36e6-e036-6ad2-a15cb7e8edaf" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpsBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="abf20ed9-e8fc-b3bf-75c4-f60b31a2d661" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="5b198a8c-c16c-4922-aed7-c3cd650f6366" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="fdce6488-39b8-5979-9223-8aa0d28ca65b" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpsBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="c975d80e-300b-748a-6825-69a0c39a2216" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="8ac9ffcc-794d-82e1-b52f-6017b7e6e2ff" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="16eb672f-8222-0861-3844-12bd2d302822" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpsBinding.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
            <enumValue>
              <field name="Text" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="bfb25352-16cf-01df-3e7a-d6b657423768" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpsBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <file name="18ea16bf-8cbd-ed42-a9fb-4d4dbd833e61" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cd2cd4c4-c7ab-5e00-2b54-7bf0aa7a844e" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6e0e1734-b47f-de5c-2d5a-46daff6afe48" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpSecurity.#ctor" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Message" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Mode" />
        <element api="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="e6e2e95d-d2b1-8505-338d-c5687d30ca49" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="96adc684-3ef9-f3c1-49be-bfed79ae6286" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpSecurity.Message" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Mode" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="07a87e35-8b77-1a5d-c928-fb3354da6743" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <file name="8c5087de-38c2-3fba-c952-f79e9c58b5db" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <file name="a8486829-d8f1-bbef-b5f0-dd175d423489" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <file name="f6449123-caf6-5926-e895-005bf456de24" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeMessage">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a197766e-1094-98b4-a9f6-9510691dc01f" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="527a541b-fa9e-312e-51e6-dbe1b0d9de34" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <file name="db2df2dd-149c-02e7-9aeb-d77b243f7ed2" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpSecurityMode">
      <topicdata group="api" />
      <apidata name="BasicHttpSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.None" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.Transport" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.Message" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="997e0649-754d-1707-8ab6-96477a6b46cf" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="be4f332c-0fcc-c704-6d91-127bccfc7936" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="27d23183-6dfb-1a9e-10fc-1dc87dc951d7" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="e385d59a-8ec6-9f7b-c9d7-f53ab0ebe698" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <topicdata group="api" notopic="" />
      <apidata name="TransportCredentialOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="005d2490-19a3-08e4-1a73-93ace5450f40" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <topicdata group="api" notopic="" />
      <apidata name="TransportWithMessageCredential" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="d58a17a0-9eae-5885-cc0d-a3c5679fc48d" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpsSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpsSecurity" />
      <apidata name="BasicHttpsSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f499db21-52d4-46c8-a361-ed506164d535" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpsSecurity">
      <topicdata name="BasicHttpsSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpsSecurity" />
      <apidata name="BasicHttpsSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpsSecurity.#ctor" />
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Message" />
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Mode" />
        <element api="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" />
      </containers>
      <file name="137b9743-defd-25a1-a1a6-1c9e1f99a848" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpsSecurity">
      <topicdata name="BasicHttpsSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpsSecurity" />
      <apidata name="BasicHttpsSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" />
      </containers>
      <file name="506a7687-9361-b702-0d3a-537ebc541725" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpsSecurity">
      <topicdata name="BasicHttpsSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpsSecurity" />
      <apidata name="BasicHttpsSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpsSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Message" />
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Mode" />
        <element api="P:System.ServiceModel.BasicHttpsSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" />
      </containers>
      <file name="b8c8e7ff-9054-a0f4-c6cb-a77869c21d8f" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <file name="9dcbeaf6-0303-6ad3-d172-e3cf993a6c28" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpsSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <file name="74c7d793-f777-9836-bb49-a47da44bd98b" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpsSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <file name="d031eeae-1e53-5d1d-8276-c2e305b86b91" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeMessage">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2c6fb161-f5f4-ac17-1726-ef9193f23ab7" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpsSecurity.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b065a9dd-9180-574f-a61e-43fa2b639cb1" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpsSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </containers>
      <file name="addb33c4-7794-ce2a-9ec2-e1c178c4e6c1" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpsSecurityMode">
      <topicdata group="api" />
      <apidata name="BasicHttpsSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.BasicHttpsSecurityMode.Transport" />
        <element api="F:System.ServiceModel.BasicHttpsSecurityMode.TransportWithMessageCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8bffdf7c-320a-dfdc-bc09-8ab6b4ca9ff1" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpsSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
      </containers>
      <file name="99846bd7-aa71-fd8f-73d9-34a4095c88ec" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpsSecurityMode.TransportWithMessageCredential">
      <topicdata group="api" notopic="" />
      <apidata name="TransportWithMessageCredential" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
      </containers>
      <file name="0b1007b5-35a3-38fd-2e60-b276bb9f74fc" />
    </api>
    <api id="T:System.ServiceModel.CacheSetting">
      <topicdata group="api" />
      <apidata name="CacheSetting" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.CacheSetting.Default" />
        <element api="F:System.ServiceModel.CacheSetting.AlwaysOn" />
        <element api="F:System.ServiceModel.CacheSetting.AlwaysOff" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="62e613f2-ad98-e8d0-3557-e47b747c8b39" />
    </api>
    <api id="F:System.ServiceModel.CacheSetting.AlwaysOff">
      <topicdata group="api" notopic="" />
      <apidata name="AlwaysOff" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </containers>
      <file name="40a1967b-953a-5080-04fc-d175c441d05e" />
    </api>
    <api id="F:System.ServiceModel.CacheSetting.AlwaysOn">
      <topicdata group="api" notopic="" />
      <apidata name="AlwaysOn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </containers>
      <file name="40c088d9-5c7a-6a73-a623-27deb642eea5" />
    </api>
    <api id="F:System.ServiceModel.CacheSetting.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </containers>
      <file name="9495e347-3a7c-1046-ebd9-05f495b412a3" />
    </api>
    <api id="T:System.ServiceModel.CallbackBehaviorAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CallbackBehaviorAttribute" />
      <apidata name="CallbackBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ce775517-957d-ceb1-8059-c3ef37dcdcc2" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CallbackBehaviorAttribute">
      <topicdata name="CallbackBehaviorAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CallbackBehaviorAttribute" />
      <apidata name="CallbackBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" />
      </containers>
      <file name="952f243b-d34d-da26-7488-d5cf69e40b58" />
    </api>
    <api id="Methods.T:System.ServiceModel.CallbackBehaviorAttribute">
      <topicdata name="CallbackBehaviorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CallbackBehaviorAttribute" />
      <apidata name="CallbackBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" />
      </containers>
      <file name="5ecbb1ab-f030-8d2c-3241-a3116312aa5d" />
    </api>
    <api id="Properties.T:System.ServiceModel.CallbackBehaviorAttribute">
      <topicdata name="CallbackBehaviorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CallbackBehaviorAttribute" />
      <apidata name="CallbackBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext" />
        <element api="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" />
      </containers>
      <file name="c2fd3cb2-6795-74bc-a664-0750412d3e67" />
    </api>
    <api id="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="09faf35a-4c7f-dc53-351a-c03256703d2a" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <topicdata group="api" />
      <apidata name="AutomaticSessionShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticSessionShutdown" />
      <setter name="set_AutomaticSessionShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="9272a8fd-ab19-0dbf-f0fe-e830fcc83235" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
      <topicdata group="api" />
      <apidata name="ConcurrencyMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConcurrencyMode" />
      <setter name="set_ConcurrencyMode" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="7a9c0058-a109-3c70-fe41-78c27e69b11f" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
      <topicdata group="api" />
      <apidata name="IgnoreExtensionDataObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreExtensionDataObject" />
      <setter name="set_IgnoreExtensionDataObject" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="227ed6a3-f8cc-b2f2-cd39-e91c47e8eb17" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
      <topicdata group="api" />
      <apidata name="IncludeExceptionDetailInFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeExceptionDetailInFaults" />
      <setter name="set_IncludeExceptionDetailInFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="22426684-6de7-d372-a48e-fe0f272b676e" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
      <topicdata group="api" />
      <apidata name="MaxItemsInObjectGraph" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxItemsInObjectGraph" />
      <setter name="set_MaxItemsInObjectGraph" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="4c6f2b7a-e377-df52-8a3f-c964a03e11c3" />
    </api>
    <api id="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IEndpointBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceEndpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="e5452b0d-401c-4930-ed92-590210b94c3c" />
    </api>
    <api id="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <topicdata group="api" eiiName="IEndpointBehavior.ApplyClientBehavior" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceEndpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="clientRuntime">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="7dbeb9ef-c931-5556-2a0c-2aabbaf7a7a5" />
    </api>
    <api id="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <topicdata group="api" eiiName="IEndpointBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceEndpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="endpointDispatcher">
          <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="275d2fd5-6e99-2770-2065-2b6df2b5facb" />
    </api>
    <api id="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" eiiName="IEndpointBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceEndpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="509a784b-8caf-969d-e474-fcc330961039" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
      <topicdata group="api" />
      <apidata name="TransactionIsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionIsolationLevel" />
      <setter name="set_TransactionIsolationLevel" />
      <returns>
        <type api="T:System.Transactions.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="113fb0b2-bd2c-26d3-8ee6-fbdebeb77c00" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
      <topicdata group="api" />
      <apidata name="TransactionTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionTimeout" />
      <setter name="set_TransactionTimeout" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="5b1b9000-e19a-16fc-b3af-a3d84dcd96d8" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <topicdata group="api" />
      <apidata name="UseSynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSynchronizationContext" />
      <setter name="set_UseSynchronizationContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="86316fd8-672c-bcfe-eaf7-7ea5d4b3355f" />
    </api>
    <api id="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
      <topicdata group="api" />
      <apidata name="ValidateMustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidateMustUnderstand" />
      <setter name="set_ValidateMustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CallbackBehaviorAttribute" ref="true" />
      </containers>
      <file name="51674b8f-81c3-c393-d82b-382600d3614a" />
    </api>
    <api id="T:System.ServiceModel.ChannelFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="9aa300ca-d210-2ba5-2ea3-d1dd3000d09a" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.#ctor" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateDescription" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="af226b3c-3278-bcfd-5024-9427c5caf6bd" />
    </api>
    <api id="Methods.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateDescription" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="92e45f87-862a-efb8-a4fe-ddb122f02274" />
    </api>
    <api id="Properties.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="9101bdad-0eeb-a8e4-d780-e837880b6ad6" />
    </api>
    <api id="Events.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="b4232639-fc41-4850-3183-e0cfe561c7b1" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
      <topicdata name="InitializeEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="c65e6fd4-a379-d077-b228-61cfa2a5c209" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="3f85381b-08a5-185a-3e22-1f87c5d26487" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="6ae27f52-bacc-042b-3369-983742a6f42a" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="6181b045-1d95-9712-48ad-967536372d47" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <topicdata group="api" />
      <apidata name="CreateFactory" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="17f638ce-add7-0a5d-3bcf-f8964798afdf" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Credentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="db7051e4-61b0-46fa-7202-3baabedd98f0" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <topicdata group="api" />
      <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="afa14c00-2109-518e-6881-531c2381745c" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <topicdata group="api" />
      <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultOpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="b1af871a-a7eb-f967-ac57-1a449997bbfa" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="a7963f41-381b-39e3-89dc-2603c9887833" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <topicdata group="api" />
      <apidata name="EnsureOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="572e56bc-4348-2ff0-5b28-a62754eaaa08" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
          <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="e5f82c67-a675-aa8d-8c3a-88a143eb26b6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="f7457103-bd66-ca28-e878-a0b229167d4d" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="bc8cac34-d0e8-e9e9-7c43-26292520f4c8" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="1343d3d4-3f79-05a2-5ba4-26a84a026488" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="ae79892c-257f-b557-d062-73757dcebb7f" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="2b29479e-ecb3-9b55-6878-ee5ea0ec5aee" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="3b588bf3-9b92-c333-826f-9edd990b78ad" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="9c0262cb-23dd-179f-da73-39162186e3e8" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="724c7810-cffe-2147-f9b2-d3968219fea6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="1d95b1a5-d5ce-03f8-bfbd-fe03dd7ab917" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="25e3f741-9246-9ef5-86c7-a7f11bd38945" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpened">
      <topicdata group="api" />
      <apidata name="OnOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="82aea114-6f3d-6334-58c0-2aa39cd9547d" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpening">
      <topicdata group="api" />
      <apidata name="OnOpening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="ad5c4e44-e4ee-a3e0-7c4b-88e754931c1c" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="13b45999-75c3-3c23-7634-794e73c0384f" />
    </api>
    <api id="T:System.ServiceModel.ChannelFactory`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
          <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ConfigurationChannelFactory`1" ref="true" />
          <type api="T:System.ServiceModel.Web.WebChannelFactory`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TChannel" />
      </templates>
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
          </specialization>
        </type>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ca002fe9-0b84-c44a-2bf9-d4355c0a01ef" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.#ctor">
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="a9fb71ae-cbf8-8af2-0f66-de5e8208a73a" />
    </api>
    <api id="Methods.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="192b2245-7ca8-50d9-5ed8-e46581bfb790" />
    </api>
    <api id="Properties.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="76a04f7d-5556-d9b8-87d0-ff75a0cd9821" />
    </api>
    <api id="Events.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="f133d9fe-4ce6-9dc4-fddd-a1309a1c903a" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="37086a5f-5e18-84f4-0c25-dce92421c459" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <topicdata name="CreateChannel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="3af6f42c-2b64-58c5-37e1-43d19b2f7ca9" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken">
      <topicdata name="CreateChannelWithActAsToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="CreateChannelWithActAsToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="61d0870d-6d73-b5cd-4337-c00ef3889e2f" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken">
      <topicdata name="CreateChannelWithIssuedToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="CreateChannelWithIssuedToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="6576cfd5-6093-638b-77ad-7b9474c06285" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken">
      <topicdata name="CreateChannelWithOnBehalfOfToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="CreateChannelWithOnBehalfOfToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="1df2b2bd-c406-fe5f-34e5-2d3ab3afd63a" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="ee0712d2-1a75-9cdf-b761-4447f5d38bf6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="17d17fdc-e8e5-6bbd-2f3c-894ca4c3368a" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="0eb1ebfa-62db-0cf4-1364-75a3d3de118e" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="5ab63ca6-e2af-d4c7-4afa-e6a9a0ccaa92" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="45d559d2-3923-31f9-113f-f16966e16274" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="709dab09-3939-e7d1-32cc-180c8b5f9cbb" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="05d0afb1-70bf-1708-9067-8abaace5ac01" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="channelType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="a4766d66-3342-3264-fe19-227386de99cc" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="69b6c5b8-fd8f-19d9-6675-df421726a720" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="4f9e97cc-64e3-a54a-fcea-939613fa607b" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="be3ee2ff-e445-5fd8-992a-39ec247f9019" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="dd5216a6-6d25-f8f9-90de-e512a164aedd" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="fc3d6803-71cf-ff82-934e-2dcec84fdee1" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="d4bfe232-2317-d4a0-354d-f6a6c676ca37" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithActAsToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actAsToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="aa7d835b-45fa-dc13-12a4-f128152a90f6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithActAsToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actAsToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="bfaed909-315a-bff4-96c3-6f0779be162f" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithActAsToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actAsToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="2071fd49-dc80-5051-6dc2-83de1f5e5fbb" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithIssuedToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuedToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="6df69e2c-e4b0-1653-3e5c-95b1ab857b74" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithIssuedToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuedToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="2d91a6cd-6de3-b960-a4dd-9b70dda899b3" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithIssuedToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuedToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="daa5c9c1-5206-2b3b-e362-cc1339068928" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithOnBehalfOfToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="onBehalfOf">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="f42dfb6c-e2b0-ad20-a4d5-29f3d561da02" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithOnBehalfOfToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="onBehalfOf">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="fe1ebb1f-2194-52b3-13f3-1a129ce31714" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannelWithOnBehalfOfToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="onBehalfOf">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="29660d42-3185-b09f-e1e8-33d190a833e5" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="526a8a08-4817-10de-b416-e198bbe32f2f" />
    </api>
    <api id="T:System.ServiceModel.ChannelTerminatedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name="ChannelTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="01ca6e3c-1223-ee6e-bb16-27552ba22e1c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ChannelTerminatedException">
      <topicdata name="ChannelTerminatedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name="ChannelTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.ChannelTerminatedException.#ctor">
          <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
          <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" />
      </containers>
      <file name="ea5faa7c-e26a-9c0b-7e1a-fb0b769da459" />
    </api>
    <api id="Methods.T:System.ServiceModel.ChannelTerminatedException">
      <topicdata name="ChannelTerminatedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name="ChannelTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" />
      </containers>
      <file name="eafad6b3-e63c-43a6-7c98-33bd4293c0d3" />
    </api>
    <api id="Properties.T:System.ServiceModel.ChannelTerminatedException">
      <topicdata name="ChannelTerminatedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name="ChannelTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" />
      </containers>
      <file name="f46227d4-68a9-af01-a200-b9d88390c8f4" />
    </api>
    <api id="Events.T:System.ServiceModel.ChannelTerminatedException">
      <topicdata name="ChannelTerminatedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name="ChannelTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" />
      </containers>
      <file name="455eb61c-6fcf-4043-e8bd-6f8e58c9d007" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelTerminatedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelTerminatedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor" />
        <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
      </containers>
      <file name="5502b8d0-4222-4dd8-685f-4101df582e21" />
    </api>
    <api id="M:System.ServiceModel.ChannelTerminatedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
      </containers>
      <file name="5b6bbb64-fd3a-0063-0410-7886ceb5eea6" />
    </api>
    <api id="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
      </containers>
      <file name="29b1cbc2-3879-9862-7cd1-4c28e2d224b2" />
    </api>
    <api id="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
      </containers>
      <file name="cbb7b687-b3c6-17f4-13db-8b2c9aadb42a" />
    </api>
    <api id="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
      </containers>
      <file name="1b2053ac-bb79-c95a-ab7d-5e592b65ce48" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
          <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
          <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="84daf9b6-3947-d140-b2fc-2a23ab7f0ba0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ClientBase`1.#ctor">
          <element api="M:System.ServiceModel.ClientBase`1.#ctor" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="P:System.ServiceModel.ClientBase`1.CacheSetting" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="462314ca-4736-b150-1c85-3ae8a77b842e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="2fa3006a-ec9e-8cf1-4d27-ef8b91cb3789" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.CacheSetting" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="16e9112b-7920-0ce1-5d08-120f4815e02f" />
    </api>
    <api id="Events.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="6019f50c-bf2a-8cdc-8df3-07a81a8404c3" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.#ctor" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="7899806e-059a-b9d7-7b31-e1616860abc1" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="8323c777-a052-36de-d695-42e40613e24b" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="71722acd-863b-2e02-5cf5-797f79271140" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="f5d0648e-4373-f593-4c6e-395b0d74ed35" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="17fc6d7d-2cca-9eb8-2c2d-a86c0e404a87" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="60fb3091-4f84-c98e-c92d-81fd32afc03c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="9343a1d4-f174-7399-4067-f87f526ce5bb" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="eca678ea-1208-688d-f5f3-5c685919c32f" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="65c2b6a8-323f-7fa6-6c13-996afda61fd8" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="f46460ec-e597-c178-ffe3-2b48b108a3f9" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="2ca028b5-3a3b-3f8c-b132-42ebefb890d8" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="999677cd-353e-5843-dc00-cf1a3219ba8b" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="8e11fe50-5194-f756-891c-96f7949e1585" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="bae7e702-a609-9d49-e523-2abc03ac75d7" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fbf7fa36-da88-7280-2291-8a53775e0656" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="922cb03d-a4ab-677c-13a2-69afa323e65b" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.CacheSetting">
      <topicdata group="api" />
      <apidata name="CacheSetting" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheSetting" />
      <setter name="set_CacheSetting" />
      <returns>
        <type api="T:System.ServiceModel.CacheSetting" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="885f989a-0a5d-7aef-d3ba-5f9486d2ab5d" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.Channel">
      <topicdata group="api" />
      <apidata name="Channel" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Channel" />
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fab49b06-8301-3c6d-4bee-64d078bf71d1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="ca7e1b70-5012-1e35-f739-9d4d3b5478e1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <topicdata group="api" />
      <apidata name="ClientCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="dc5ae659-013d-e16b-f0eb-8e685d11af20" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="350b2b4c-5207-dc83-a8c8-8b41391a90df" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="1938527e-87e1-22b9-73c7-2183b23d3d93" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
      <topicdata group="api" />
      <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="7cc2aa14-f33e-c78d-833a-35ca2baf68cc" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="71b156fb-937b-2e7d-fc8d-ced8789c8bae" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <topicdata group="api" />
      <apidata name="GetDefaultValueForInitialization" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="2a12b4c6-9fac-b810-8376-f288b310e112" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <topicdata group="api" />
      <apidata name="InnerChannel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerChannel" />
      <returns>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="20ca964b-0c1e-f0ed-b6d2-1e3d745b66c2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginOperationDelegate">
          <type api="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" ref="true">
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
              </specialization>
            </type>
          </type>
        </parameter>
        <parameter name="inValues">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="endOperationDelegate">
          <type api="T:System.ServiceModel.ClientBase`1.EndOperationDelegate" ref="true">
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
              </specialization>
            </type>
          </type>
        </parameter>
        <parameter name="operationCompletedCallback">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="3219417a-95d2-1b6e-5b73-f65adf22671b" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="d3694633-920e-14d5-8e4e-7893909518cd" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="f65b5ed7-3e85-ab1a-00c2-2ac742327abf" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="67458299-5d4c-0932-f2b2-bc269de632ee" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="07a9bea0-af88-116c-4e51-b3ff648b048f" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="c3ea19e4-acfe-4bb8-bd0a-b492c3f84883" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="efb5de5d-a6b2-0915-b905-6267584b1cd1" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="6cb0b618-fa44-7d8b-755f-cbca43b00a33" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="26e3cf54-53a6-14b2-e619-794c010ad116" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="ccf4fd90-bf9e-7266-6f8c-63b015bad5c1" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="be25b35c-2d49-0799-a118-942264a99c37" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="bc4d414a-4bf9-4ca0-1352-a0ee68fafa2e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="4fe12627-23c0-decc-bd1d-922d64fafeb7" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="2b2930d0-bd5e-56dc-4a5b-c1362060923e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="c0b861a2-5dd9-332c-bf55-34bf047a6972" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="4701600a-2594-5955-1920-86ebb81b03ac" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fc66893f-0b1a-8201-121d-e6a2cff3e6f2" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <topicdata group="api" />
      <apidata name="BeginOperationDelegate" group="type" subgroup="delegate" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <parameters>
        <parameter name="inValues">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="466ac9ca-1f3a-2548-62c4-a6a2ebf398f5" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="9545ab07-8ede-8e9b-4e12-67c68ae9e000" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="8ae2fb71-0160-2d6c-f18e-0337f1037a08" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="fa104b10-86d2-9d71-99d0-34b55eb0a857" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="2522be06-3abb-b776-8f5e-257ab7276d46" />
    </api>
    <api id="Events.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="21c350cd-4a36-118a-9cbd-aad6188f8def" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
      <topicdata name="BeginSend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e348fd77-5d21-eb24-7dda-9d58beecc0cd" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
      <topicdata name="Send" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Send" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1d44c972-570b-b44f-19f0-a5ce00ff9002" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
      <topicdata name="BeginRequest" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f0363a09-a7bd-7650-3afd-62b069018b59" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
      <topicdata name="Request" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Request" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="63d41c59-3961-365a-c87f-29dce9b201c6" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8d631610-6f42-a5b0-ab61-e695451c87f0" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="467620bd-ec62-681e-ea79-71c8a407d777" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="565b1813-e7d1-22cb-5c9c-3e244ad42e7e" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1a98638d-e18e-7140-0cc9-0407f564580b" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="client">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <template name="T" index="1" api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="14935fb9-2876-0b12-ebf3-6a7568a15bb9" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1f3e0820-f4a2-ba41-efce-e0159dd27da2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="015e523c-d93d-bb2f-1179-db605ac836ef" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="483728dc-6930-4c6f-510a-d7b3b074d038" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <topicdata group="api" eiiName="IChannel.GetProperty" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <templates>
        <template name="TProperty">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="TProperty" index="0" api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="10ea346d-c89e-41e7-8e0e-38d858146b62" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IOutputChannel.BeginSend" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="71e40ce2-7dc3-59b5-9bd3-5887bfc90221" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IOutputChannel.BeginSend" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d91b5a6e-05a4-fe6c-7731-e7c0c7cc4286" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <topicdata group="api" eiiName="IOutputChannel.EndSend" />
      <apidata name="EndSend" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="b34222ff-eb65-1242-0d00-99e89af2438c" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <topicdata group="api" eiiName="IOutputChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f4d9a1d9-144c-99bc-112f-9aedc5bbc63c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <topicdata group="api" eiiName="IOutputChannel.Send" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="9e4b3918-89c5-209d-b1c1-cad1848a7519" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <topicdata group="api" eiiName="IOutputChannel.Send" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="faa7bfc6-4949-18a0-6212-3d72954a630d" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <topicdata group="api" eiiName="IOutputChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IOutputChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IOutputChannel.Via">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e4ec5899-7733-282b-64cf-81735c40f5c7" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IRequestChannel.BeginRequest" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c32984b7-cba3-8c7e-f63d-7e3e30c79b3e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IRequestChannel.BeginRequest" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8e32834e-ecdf-337b-4989-5d3046ed023c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <topicdata group="api" eiiName="IRequestChannel.EndRequest" />
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="574424da-2be0-cd07-ac45-76dd4d650378" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <topicdata group="api" eiiName="IRequestChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="02ae9fa5-48fd-466f-cf52-f924c32c09f1" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <topicdata group="api" eiiName="IRequestChannel.Request" />
      <apidata name="Request" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="5caa5ade-6a4d-29bf-e3d0-a39f1db4051d" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <topicdata group="api" eiiName="IRequestChannel.Request" />
      <apidata name="Request" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f4a54736-19b9-ee9f-f2a8-9cacfa20e245" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <topicdata group="api" eiiName="IRequestChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IRequestChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="70e7e72d-4b52-11ee-df3f-dd1fbfd514ec" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <topicdata group="api" eiiName="IClientChannel.AllowInitializationUI" />
      <apidata name="AllowInitializationUI" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <setter name="set_System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="97cfa40f-c701-1248-475f-ad594ab80b99" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IClientChannel.BeginDisplayInitializationUI" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c4904eb2-922d-403e-c249-51727b7fab86" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <topicdata group="api" eiiName="IClientChannel.DidInteractiveInitialization" />
      <apidata name="DidInteractiveInitialization" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="ec03c56d-bcef-61aa-26f1-add4bd256dd8" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <topicdata group="api" eiiName="IClientChannel.DisplayInitializationUI" />
      <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="729aba36-4efd-5fb0-1087-905f8c5248de" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" eiiName="IClientChannel.EndDisplayInitializationUI" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="7ab13797-3b47-b44b-31b8-3639724178bb" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <topicdata group="api" eiiName="IClientChannel.UnknownMessageReceived" />
      <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <remover name="remove_System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d8cf885c-f9be-c62e-98ea-fdd22413dce0" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <topicdata group="api" eiiName="IClientChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IClientChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.Via">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="947d25eb-aa9b-8026-2397-e5d083c9d278" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <topicdata group="api" eiiName="ICommunicationObject.Abort" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="86a1daa3-bebd-3818-ab3e-b0fd4df5c425" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f6273d35-1b42-2c19-f782-8df1884573f2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="66a33a24-45f8-f562-17a0-1c1989fe6ac6" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="6ad3b256-fe3c-c75d-9dd5-7baea7686fa6" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="cc32dc91-3aee-3cdd-1f53-f29154bbcf14" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="54886133-1ed5-856a-004e-81660d8d997e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0abecfad-7b08-67d6-f294-89591ef2301d" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="df835cdd-df8f-49c4-ac37-0a85a0ecde19" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="32cc9457-fc0a-1bf6-dcf5-2fb69cea582c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="b80f5bc2-3bb2-2279-92fd-4c46f24ef147" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="3e27c9c3-46ba-d620-1a61-8dc917e39a6f" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="5afab39d-2c3b-2283-2f67-ec518dadc22d" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0116b3b6-df96-79b1-a496-50f7b2c3ff89" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e11ed9a9-00a8-b66b-c396-0ea9abeea0dd" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c85fdb65-a6f2-e9c9-cf0c-2a66fa8d0cd9" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="91420b0d-1a87-879b-4059-e16e111d04b1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <topicdata group="api" eiiName="ICommunicationObject.State" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.ICommunicationObject.State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8d1dc907-c3ca-d47c-cddc-dedab2c7a55a" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <topicdata group="api" eiiName="IContextChannel.AllowOutputBatching" />
      <apidata name="AllowOutputBatching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IContextChannel.AllowOutputBatching" />
      <setter name="set_System.ServiceModel.IContextChannel.AllowOutputBatching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="693bb3bb-db88-3d17-2be4-0ea129772b05" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <topicdata group="api" eiiName="IContextChannel.InputSession" />
      <apidata name="InputSession" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.InputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IInputSession" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.InputSession">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d0910c2f-7c14-db11-a4e2-ae851d4fbcdc" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <topicdata group="api" eiiName="IContextChannel.LocalAddress" />
      <apidata name="LocalAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.LocalAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.LocalAddress">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="93abd4e8-4504-bd5b-bcc0-1103f8a72c34" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <topicdata group="api" eiiName="IContextChannel.OperationTimeout" />
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IContextChannel.OperationTimeout" />
      <setter name="set_System.ServiceModel.IContextChannel.OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.OperationTimeout">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="2b482d08-6bea-48e8-8b5b-0466155f981e" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <topicdata group="api" eiiName="IContextChannel.OutputSession" />
      <apidata name="OutputSession" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.OutputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IOutputSession" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.OutputSession">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="989dbc8c-9831-2e37-88f3-4b22f727ff3d" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <topicdata group="api" eiiName="IContextChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.RemoteAddress">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="ad4c57db-9316-27a9-8cdd-280231f819d4" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <topicdata group="api" eiiName="IContextChannel.SessionId" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.SessionId">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e48cb930-c930-62d8-8d2b-1d9b9149dfe9" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions">
      <topicdata group="api" eiiName="IExtensibleObject.Extensions" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;.Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.IContextChannel" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0ba59902-b6d5-4e8b-9052-b2eb0c8f7077" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <topicdata group="api" />
      <apidata name="EndOperationDelegate" group="type" subgroup="delegate" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="a7859b3c-ba00-037a-855b-c2d1b522c4b0" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="1a44a5ff-48a1-3171-fce5-dc58aa97db40" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="fc6c0ddc-827d-3e7c-c592-6c0263f1a19e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="d27f9c9e-bdae-ef9e-f498-e656b1faf5d9" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="5e691fc0-0b87-dd8a-f90b-b163ff4f29a3" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <topicdata group="api" />
      <apidata name="Results" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Results" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="057713c3-07f9-205c-4488-0998b1a8796d" />
    </api>
    <api id="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      <apidata name="ClientCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f370687e-c06e-7990-1a0d-7d52ab6849e0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <topicdata name="ClientCredentialsSecurityTokenManager" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      <apidata name="ClientCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)" />
        <element api="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="Overload:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer">
          <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
          <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)" />
        </element>
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      </containers>
      <file name="9f5c3be3-005a-eccb-cb99-e2d1eecfadf2" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <topicdata name="ClientCredentialsSecurityTokenManager" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      <apidata name="ClientCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="Overload:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer">
          <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
          <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)" />
        </element>
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      </containers>
      <file name="c95a303a-4333-94de-fc04-428a4f57664f" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <topicdata name="ClientCredentialsSecurityTokenManager" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      <apidata name="ClientCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      </containers>
      <file name="b9633ecb-7161-bd51-adcb-c792f1404806" />
    </api>
    <api id="Overload:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer">
      <topicdata name="CreateSecurityTokenSerializer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
      <apidata name="CreateSecurityTokenSerializer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
        <element api="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="e047f8e5-2c43-a620-34a4-643b80553bf6" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clientCredentials">
          <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="e513a6a0-ada4-9d63-a309-e3e2d3a322ee" />
    </api>
    <api id="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
      <topicdata group="api" />
      <apidata name="ClientCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="42513d1b-1956-b11b-5686-4335c19cae83" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenAuthenticator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="5bf3e05f-55db-1c54-1ca3-2804fbc9b6b8" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="8c848083-6de4-9d73-d062-9c8029f47e17" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="version">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenVersion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="25513e6c-1fd6-f8e8-e9fc-9180e4975cb8" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenSerializer" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="version">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="92bc906b-1cf8-0d4f-7552-128f8d5f9861" />
    </api>
    <api id="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="IsIssuedSecurityTokenRequirement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" ref="true" />
      </containers>
      <file name="cf3f8966-af2e-a5b5-6624-a3acbd5cb17b" />
    </api>
    <api id="T:System.ServiceModel.CommunicationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
          <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
          <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
          <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
          <type api="T:System.ServiceModel.AddressAlreadyInUseException" ref="true" />
          <type api="T:System.ServiceModel.AddressAccessDeniedException" ref="true" />
          <type api="T:System.ServiceModel.ChannelTerminatedException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
          <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
          <type api="T:System.ServiceModel.ProtocolException" ref="true" />
          <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
          <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
          <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
          <type api="T:System.ServiceModel.FaultException" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
          <type api="T:System.ServiceModel.Channels.RedirectionException" ref="true" />
          <type api="T:System.ServiceModel.Channels.RetryException" ref="true" />
          <type api="T:System.ServiceModel.Persistence.PersistenceException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="35dcb44a-92dc-8392-03c9-8355b727cdea" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.CommunicationException.#ctor">
          <element api="M:System.ServiceModel.CommunicationException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="cebc0ceb-6443-e3dd-e729-7042c79c0a09" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="caa5c9e4-8084-f696-12e1-0bed1ccfd6a7" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="99606676-b6f8-d33e-14a3-67efd00ef945" />
    </api>
    <api id="Events.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="9b0363ab-26ec-9f7c-4e23-be9620e9e11f" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="94e70189-04b8-2448-9ecb-5a7be10df0b4" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="4a953ce6-2435-4e3c-f6a3-8faaac81d6c9" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="fef75f8d-ba02-9c7b-52ff-00093e9f56ac" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="7f372670-90c2-f8b4-e55d-71aef104ee50" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="ffbd1397-39a4-1b93-0dd3-2dd6bc870a89" />
    </api>
    <api id="T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="473a7fce-e113-ef5e-6893-14cfc4668756" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="59bb2b21-053d-5a9a-bd3e-e82ece3e1bac" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="acd3ecad-caef-70ad-c166-765edabce3c0" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="7bf1618c-3972-d50f-118b-0a7f9a434570" />
    </api>
    <api id="Events.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="76a05e31-3cad-9801-503b-bdb5b5012282" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="a16f6869-5548-0321-2ee1-dd9b7679966b" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="d9e0c42c-4897-8237-f084-3f1c9a3fb6a8" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="553eb296-f170-122a-fbd1-b4d209413c80" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="39a62e46-0c9a-83b7-0440-c8e2053c14a0" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="345dba9c-5a29-76e7-ec7c-2fc9109ae747" />
    </api>
    <api id="T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="44e2be6e-baf4-ae80-4a10-c50dacb25ff6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="e237922c-d956-518b-c720-2a370454f183" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="e65a88fc-904c-b47d-8776-b4864969f4b5" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="034166f0-a797-d95d-3e81-ee0af39b061f" />
    </api>
    <api id="Events.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="65b0ce37-601e-313f-e426-a573e5aff9b4" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="ed516a86-550b-3ec2-7965-5a8e378bcc6e" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="3e589246-2287-e1b4-9877-439e4adfe5a5" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="99d382a1-0e67-d08a-45ac-69898b9f1be6" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="513f3a18-286d-4e21-4084-122765a977f9" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="7a7eefb5-e6d5-9779-a8c5-3ae07599f3fa" />
    </api>
    <api id="T:System.ServiceModel.CommunicationState">
      <topicdata group="api" />
      <apidata name="CommunicationState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.CommunicationState.Created" />
        <element api="F:System.ServiceModel.CommunicationState.Opening" />
        <element api="F:System.ServiceModel.CommunicationState.Opened" />
        <element api="F:System.ServiceModel.CommunicationState.Closing" />
        <element api="F:System.ServiceModel.CommunicationState.Closed" />
        <element api="F:System.ServiceModel.CommunicationState.Faulted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="065ba994-daca-bc6c-0283-ecfced568bdd" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="eec1069f-92de-d48f-e07e-4695b7a7ce9c" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Closing">
      <topicdata group="api" notopic="" />
      <apidata name="Closing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="66ab149c-3fdd-0be4-3c51-7a3799a04241" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Created">
      <topicdata group="api" notopic="" />
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="f90e988b-56bd-8a5d-e28b-cb13ee0367dd" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="5ec0863e-e1d1-aea9-f380-9f988ce46454" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Opened">
      <topicdata group="api" notopic="" />
      <apidata name="Opened" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="9fef05cd-4699-793e-b614-06e705d65842" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Opening">
      <topicdata group="api" notopic="" />
      <apidata name="Opening" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="6c734dd1-a4f8-defd-1828-36edd79346b2" />
    </api>
    <api id="T:System.ServiceModel.ConcurrencyMode">
      <topicdata group="api" />
      <apidata name="ConcurrencyMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.ConcurrencyMode.Single" />
        <element api="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
        <element api="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="15f697bf-478b-ae95-499a-29fb4df69bd9" />
    </api>
    <api id="F:System.ServiceModel.ConcurrencyMode.Multiple">
      <topicdata group="api" notopic="" />
      <apidata name="Multiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </containers>
      <file name="8a2cf06a-a6b2-b162-1da8-e8c60edf57d9" />
    </api>
    <api id="F:System.ServiceModel.ConcurrencyMode.Reentrant">
      <topicdata group="api" notopic="" />
      <apidata name="Reentrant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </containers>
      <file name="be1c55cc-9c46-f0fa-2da8-1eeba06468d4" />
    </api>
    <api id="F:System.ServiceModel.ConcurrencyMode.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </containers>
      <file name="69509a7a-af6a-c374-47ce-8c0add736d81" />
    </api>
    <api id="T:System.ServiceModel.CorrelationActionMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CorrelationActionMessageFilter" />
      <apidata name="CorrelationActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="7c7e0dbb-bed1-338c-5d0b-9ab03770f721" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CorrelationActionMessageFilter">
      <topicdata name="CorrelationActionMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CorrelationActionMessageFilter" />
      <apidata name="CorrelationActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor" />
        <element api="P:System.ServiceModel.CorrelationActionMessageFilter.Action" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Equals(System.Object)" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.GetHashCode" />
        <element api="Overload:System.ServiceModel.CorrelationActionMessageFilter.Match">
          <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" />
      </containers>
      <file name="e5b62256-4159-9fcc-a41f-38dadd0a0247" />
    </api>
    <api id="Methods.T:System.ServiceModel.CorrelationActionMessageFilter">
      <topicdata name="CorrelationActionMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CorrelationActionMessageFilter" />
      <apidata name="CorrelationActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Equals(System.Object)" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.GetHashCode" />
        <element api="Overload:System.ServiceModel.CorrelationActionMessageFilter.Match">
          <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" />
      </containers>
      <file name="6217b26d-9248-7816-e254-f0d8a5849e8b" />
    </api>
    <api id="Properties.T:System.ServiceModel.CorrelationActionMessageFilter">
      <topicdata name="CorrelationActionMessageFilter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CorrelationActionMessageFilter" />
      <apidata name="CorrelationActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.CorrelationActionMessageFilter.Action" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" />
      </containers>
      <file name="86814737-13de-3363-59b8-c315385c7f87" />
    </api>
    <api id="Overload:System.ServiceModel.CorrelationActionMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CorrelationActionMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="0f1474b9-5ea5-3e94-1fd9-ec39a53234bf" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="cd2b47a4-36f4-ff4e-4d9e-7891c0d80627" />
    </api>
    <api id="P:System.ServiceModel.CorrelationActionMessageFilter.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="8187b674-59a5-0bc0-ffd1-9b71f3968805" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="b3b73ea2-ecbb-b1eb-ce4c-8102ebbfd22f" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="179f0060-7837-2e66-9430-db4e525a6ca1" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.CorrelationActionMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="72346348-e21e-7f3d-cd50-4203874f963d" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.CorrelationActionMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="a76f49e2-d84e-332a-6149-3ea5d4cf452a" />
    </api>
    <api id="M:System.ServiceModel.CorrelationActionMessageFilter.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
      </containers>
      <file name="ed646735-2dc2-4d61-048a-971ce63f5c22" />
    </api>
    <api id="T:System.ServiceModel.CorrelationQuery">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CorrelationQuery" />
      <apidata name="CorrelationQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationQuery.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="097f67fd-7479-1053-3455-c527a5174b3d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CorrelationQuery">
      <topicdata name="CorrelationQuery" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CorrelationQuery" />
      <apidata name="CorrelationQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationQuery.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.CorrelationQuery.#ctor" />
        <element api="M:System.ServiceModel.CorrelationQuery.Equals(System.Object)" />
        <element api="M:System.ServiceModel.CorrelationQuery.GetHashCode" />
        <element api="P:System.ServiceModel.CorrelationQuery.Select" />
        <element api="P:System.ServiceModel.CorrelationQuery.SelectAdditional" />
        <element api="P:System.ServiceModel.CorrelationQuery.Where" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" />
      </containers>
      <file name="498939ab-ac8a-1f5f-2866-0c553ada8763" />
    </api>
    <api id="Methods.T:System.ServiceModel.CorrelationQuery">
      <topicdata name="CorrelationQuery" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CorrelationQuery" />
      <apidata name="CorrelationQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationQuery.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.CorrelationQuery.Equals(System.Object)" />
        <element api="M:System.ServiceModel.CorrelationQuery.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" />
      </containers>
      <file name="ac0853b4-4817-f3fe-898f-4b72bfc046fe" />
    </api>
    <api id="Properties.T:System.ServiceModel.CorrelationQuery">
      <topicdata name="CorrelationQuery" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CorrelationQuery" />
      <apidata name="CorrelationQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CorrelationQuery.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.CorrelationQuery.Select" />
        <element api="P:System.ServiceModel.CorrelationQuery.SelectAdditional" />
        <element api="P:System.ServiceModel.CorrelationQuery.Where" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" />
      </containers>
      <file name="46703588-895a-c8da-575e-96ba26baaa8f" />
    </api>
    <api id="M:System.ServiceModel.CorrelationQuery.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <file name="9e251b4e-0017-7b90-bfee-bfe60beb4360" />
    </api>
    <api id="M:System.ServiceModel.CorrelationQuery.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <file name="e4c821c4-e910-02aa-0f0d-6c56e9438e9e" />
    </api>
    <api id="M:System.ServiceModel.CorrelationQuery.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <file name="d3cf6315-a128-7167-199f-4f69acaefc8d" />
    </api>
    <api id="P:System.ServiceModel.CorrelationQuery.Select">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Select" />
      <setter name="set_Select" />
      <returns>
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="4bdaa219-6ee4-cd07-0369-a541c5b8f5a4" />
    </api>
    <api id="P:System.ServiceModel.CorrelationQuery.SelectAdditional">
      <topicdata group="api" />
      <apidata name="SelectAdditional" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SelectAdditional" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <file name="23ac37aa-0d5d-98c3-5630-933c8ff10fbf" />
    </api>
    <api id="P:System.ServiceModel.CorrelationQuery.Where">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Where" />
      <setter name="set_Where" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="436f63af-6109-67b0-7470-2ce08270f864" />
    </api>
    <api id="T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a707c65f-2e34-9b9e-a3ff-2ec369a40eee" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
        <element api="P:System.ServiceModel.DataContractFormatAttribute.Style" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="e2572ba6-4b01-6197-11f4-8f0202dd6948" />
    </api>
    <api id="Methods.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="05759cd4-8b7a-03a7-1d17-989cddf2b1d4" />
    </api>
    <api id="Properties.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.DataContractFormatAttribute.Style" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="9322cfe1-206b-1137-8c75-3b7cb135e619" />
    </api>
    <api id="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" ref="true" />
      </containers>
      <file name="4a1d89b5-62d0-9d35-9b7e-ca5a62b56336" />
    </api>
    <api id="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <topicdata group="api" />
      <apidata name="Style" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Style" />
      <setter name="set_Style" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" ref="true" />
      </containers>
      <file name="404d6a8b-0b75-6a6d-cff9-ea2a3308f979" />
    </api>
    <api id="T:System.ServiceModel.DeadLetterQueue">
      <topicdata group="api" />
      <apidata name="DeadLetterQueue" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DeadLetterQueue.None" />
        <element api="F:System.ServiceModel.DeadLetterQueue.System" />
        <element api="F:System.ServiceModel.DeadLetterQueue.Custom" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c221608f-6dde-9da9-9a8a-c635ded7d155" />
    </api>
    <api id="F:System.ServiceModel.DeadLetterQueue.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </containers>
      <file name="cc8295a2-db2c-2e02-fb0c-70f06a943c08" />
    </api>
    <api id="F:System.ServiceModel.DeadLetterQueue.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </containers>
      <file name="124e2bf5-84fd-e5d4-ab7c-f5b9f6fc2e8c" />
    </api>
    <api id="F:System.ServiceModel.DeadLetterQueue.System">
      <topicdata group="api" notopic="" />
      <apidata name="System" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </containers>
      <file name="0bab81d8-4bc6-a34b-2752-bb140ec56625" />
    </api>
    <api id="T:System.ServiceModel.DeliveryRequirementsAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DeliveryRequirementsAttribute" />
      <apidata name="DeliveryRequirementsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        <type api="T:System.ServiceModel.Description.IContractBehaviorAttribute" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="30e5a43b-1a86-33da-a75a-95022068cd7e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DeliveryRequirementsAttribute">
      <topicdata name="DeliveryRequirementsAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      <apidata name="DeliveryRequirementsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      </containers>
      <file name="eee6f750-9850-3913-20a8-26c926ed2c13" />
    </api>
    <api id="Methods.T:System.ServiceModel.DeliveryRequirementsAttribute">
      <topicdata name="DeliveryRequirementsAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      <apidata name="DeliveryRequirementsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
        <element api="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      </containers>
      <file name="fc6aeaae-a637-1835-07f8-21608227a399" />
    </api>
    <api id="Properties.T:System.ServiceModel.DeliveryRequirementsAttribute">
      <topicdata name="DeliveryRequirementsAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      <apidata name="DeliveryRequirementsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" />
        <element api="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" />
      </containers>
      <file name="fbefe675-2e88-70be-dff2-70ca618cbad6" />
    </api>
    <api id="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="c7f9a929-4631-6286-c970-a5d3b6072222" />
    </api>
    <api id="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements">
      <topicdata group="api" />
      <apidata name="QueuedDeliveryRequirements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_QueuedDeliveryRequirements" />
      <setter name="set_QueuedDeliveryRequirements" />
      <returns>
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="3f81b218-6de2-5f1e-7948-2ea72f5d7bed" />
    </api>
    <api id="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery">
      <topicdata group="api" />
      <apidata name="RequireOrderedDelivery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequireOrderedDelivery" />
      <setter name="set_RequireOrderedDelivery" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="d74d917a-570f-45e4-7e6c-f5bcef954e8b" />
    </api>
    <api id="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IContractBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="48c7314a-9e36-5edb-9b69-8360189a5e94" />
    </api>
    <api id="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <topicdata group="api" eiiName="IContractBehavior.ApplyClientBehavior" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="91ffa98a-edc2-9641-b83b-cf02d5e4699f" />
    </api>
    <api id="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <topicdata group="api" eiiName="IContractBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="dispatch">
          <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="ed7c83d2-f5e6-b069-e4ba-f994a15c7232" />
    </api>
    <api id="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" eiiName="IContractBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="7b34838f-eb5e-a288-101a-6102172d1e1c" />
    </api>
    <api id="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract">
      <topicdata group="api" />
      <apidata name="TargetContract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetContract" />
      <setter name="set_TargetContract" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <type api="T:System.ServiceModel.Description.IContractBehaviorAttribute" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DeliveryRequirementsAttribute" ref="true" />
      </containers>
      <file name="6f632578-1d1a-1196-8030-a7404442faf7" />
    </api>
    <api id="T:System.ServiceModel.DnsEndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DnsEndpointIdentity" />
      <apidata name="DnsEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="859b0b19-da2b-5c62-bc07-dd6cae412183" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DnsEndpointIdentity">
      <topicdata name="DnsEndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DnsEndpointIdentity" />
      <apidata name="DnsEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.DnsEndpointIdentity.#ctor">
          <element api="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.DnsEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" />
      </containers>
      <file name="322c8c7c-6c49-e078-567e-5516aa9b5e0d" />
    </api>
    <api id="Methods.T:System.ServiceModel.DnsEndpointIdentity">
      <topicdata name="DnsEndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DnsEndpointIdentity" />
      <apidata name="DnsEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.DnsEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" />
      </containers>
      <file name="cef3eff7-f5a4-b33d-b18e-6a98043838b2" />
    </api>
    <api id="Properties.T:System.ServiceModel.DnsEndpointIdentity">
      <topicdata name="DnsEndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DnsEndpointIdentity" />
      <apidata name="DnsEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" />
      </containers>
      <file name="578ffae6-d62f-3584-758a-e0247cf6edbb" />
    </api>
    <api id="Overload:System.ServiceModel.DnsEndpointIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DnsEndpointIdentity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" ref="true" />
      </containers>
      <file name="f27320b0-3764-d019-dfbf-ceb738fe81f2" />
    </api>
    <api id="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DnsEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" ref="true" />
      </containers>
      <file name="fb7903b3-8b2d-0721-ddca-92c5bc089893" />
    </api>
    <api id="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DnsEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="dnsName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DnsEndpointIdentity" ref="true" />
      </containers>
      <file name="9b92d246-4694-7d6d-7e89-471459e5c71f" />
    </api>
    <api id="T:System.ServiceModel.DuplexChannelFactory`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="DuplexChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Configuration.ConfigurationDuplexChannelFactory`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TChannel" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6881dfc0-f968-7f6e-87e7-54e93f3030e5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DuplexChannelFactory`1">
      <topicdata name="DuplexChannelFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="DuplexChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor">
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </containers>
      <file name="8921be44-b0d9-305c-54fa-87dea10002f6" />
    </api>
    <api id="Methods.T:System.ServiceModel.DuplexChannelFactory`1">
      <topicdata name="DuplexChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="DuplexChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
          <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.DuplexChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </containers>
      <file name="0b8ec565-23af-656b-77df-7c8af0c65852" />
    </api>
    <api id="Properties.T:System.ServiceModel.DuplexChannelFactory`1">
      <topicdata name="DuplexChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="DuplexChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </containers>
      <file name="6a7eab35-fc95-7cc3-a1fd-57d4c1f31589" />
    </api>
    <api id="Events.T:System.ServiceModel.DuplexChannelFactory`1">
      <topicdata name="DuplexChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="DuplexChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </containers>
      <file name="1dc0b133-5f12-152b-68d5-609b18e8d61f" />
    </api>
    <api id="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel">
      <topicdata name="CreateChannel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="fe8b6c41-b857-ccc4-5aec-1c8c42df70f1" />
    </api>
    <api id="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DuplexChannelFactory`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="4fb091b5-22cc-6c62-e650-a1d524627f56" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="79de59fd-cb0a-bb9f-c4a6-a9e7e5459744" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="f047d87a-b813-245b-5b1a-0e0dff68e33d" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="69b61d79-1a61-4236-ce82-a459b77948e6" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="ae6de7fa-3f66-2492-61fc-2cbc71a665db" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="00136c93-5e9d-0f9b-b448-2756641d15e7" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="7821022d-a187-4881-add5-056162ecb6d5" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="3d3c1c90-3bac-2cf3-e48a-698e89b9dfe4" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="e36c369d-98b3-4b88-41a8-bb68b69860b2" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="a94f4a36-ebe5-1843-524c-6dda63f691dd" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="35537e5c-200c-389f-a74c-87d0b759a46d" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="cf978f16-f4e8-5f5c-4d5d-cae8575b080f" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="57627a9a-4e2c-a630-bf7b-e6d80ab4c9a5" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="2fa7dffb-a1fd-24ff-1d05-e7a280c2b53a" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="91352219-1d0d-ec1a-c078-6c27cbb43638" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="39d16e50-81eb-dfd4-c08f-af1e7f972351" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="8d6c15bd-c2ca-5b69-7ff7-959d16001ebc" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="55eca791-6b1d-4ad6-b280-2b9127fc67ef" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="21b57a5d-2419-25a7-28a3-396eec9a000b" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="58c71147-670a-fa64-68ed-771383aaa72a" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="6f0634e9-6d0f-17d3-06a7-f018be67d8dd" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="callbackInstanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="824d152b-2dc3-554e-eefc-8e1d5c757ab1" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="79c9fcaf-046f-88f6-9873-8ef1ab2789e9" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="880b9b3f-9f0e-2076-4e3a-7f701e92db59" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="4f3bc291-5b50-fff7-034b-d0ce380f31f9" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="bc446497-bc3c-f931-defa-3495866965b6" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="481b2632-ab9a-40fe-3b72-31fd04935d11" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="56c2a868-8759-1127-f608-2f10f42f0a6f" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="e45ce83f-8021-ca2d-6278-a2ae5382401c" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="b053c8d6-b6b5-59c4-8d03-23f0ef6db846" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="e977a05e-7eca-41d1-db3f-7292b52c41b0" />
    </api>
    <api id="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DuplexChannelFactory`1.CreateChannel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexChannelFactory`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexChannelFactory`1" ref="true" />
      </containers>
      <file name="0814f689-e91d-0fea-8259-094cbee2209e" />
    </api>
    <api id="T:System.ServiceModel.DuplexClientBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name="DuplexClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.DuplexClientBase`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="cb986117-296b-278c-38fc-055f9a796322" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DuplexClientBase`1">
      <topicdata name="DuplexClientBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name="DuplexClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.DuplexClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="Overload:System.ServiceModel.DuplexClientBase`1.#ctor">
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)" />
        </element>
        <element api="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" />
      </containers>
      <file name="75f1736b-b602-f3a4-c25f-ba2d7c49708c" />
    </api>
    <api id="Methods.T:System.ServiceModel.DuplexClientBase`1">
      <topicdata name="DuplexClientBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name="DuplexClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.DuplexClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DuplexClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" />
      </containers>
      <file name="841e656a-01b3-e019-d1aa-061551f3d865" />
    </api>
    <api id="Properties.T:System.ServiceModel.DuplexClientBase`1">
      <topicdata name="DuplexClientBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name="DuplexClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
        <element api="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" />
      </containers>
      <file name="072a0a49-3286-d6e0-8fc7-c16640524965" />
    </api>
    <api id="Events.T:System.ServiceModel.DuplexClientBase`1">
      <topicdata name="DuplexClientBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name="DuplexClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" />
      </containers>
      <file name="6b23ede0-6161-67fa-70a1-e2c03fc61212" />
    </api>
    <api id="Overload:System.ServiceModel.DuplexClientBase`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DuplexClientBase`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="9cc5f3e8-dccb-193e-f6f7-01852b6b2dae" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="34cad46c-5878-cc26-aa7a-60da513917cd" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="90b42ba1-d32b-5a2a-f661-93821835613f" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="b4015dc2-b4dc-93a1-75cb-28daf8f5c339" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="00873bde-3ae0-4439-da5b-ecb9b00c26bd" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="f84cc58e-522c-9200-259f-35e5338c75b6" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="80e65f3c-7e04-a665-1d95-b670dd3584fe" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="b5dc0045-0a88-bda5-df09-00ff7fb3294c" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="63e25115-43ca-4b88-2d80-4d6e9dc4f39b" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="3f24f2cc-3011-a794-6f6e-57d1610b021e" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="7a90973e-b5df-d831-9b3f-c04abec69f8e" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="37a73c34-a405-5fac-e06a-b50c6efcb8ef" />
    </api>
    <api id="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.DuplexClientBase`1.#ctor" />
      <parameters>
        <parameter name="callbackInstance">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="ca36c3c8-2e9d-d79e-9e02-79fb6d6c4016" />
    </api>
    <api id="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel">
      <topicdata group="api" />
      <apidata name="InnerDuplexChannel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerDuplexChannel" />
      <returns>
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DuplexClientBase`1" ref="true" />
      </containers>
      <file name="35647572-64ea-aaa9-b3b4-ee472161f9b1" />
    </api>
    <api id="T:System.ServiceModel.Endpoint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Endpoint" />
      <apidata name="Endpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Endpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="72083453-5c87-429c-cddd-856d737e1a80" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Endpoint">
      <topicdata name="Endpoint" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Endpoint" />
      <apidata name="Endpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Endpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Endpoint.#ctor" />
        <element api="P:System.ServiceModel.Endpoint.AddressUri" />
        <element api="P:System.ServiceModel.Endpoint.BehaviorConfigurationName" />
        <element api="P:System.ServiceModel.Endpoint.Binding" />
        <element api="Overload:System.ServiceModel.Endpoint.GetAddress">
          <element api="M:System.ServiceModel.Endpoint.GetAddress" />
          <element api="M:System.ServiceModel.Endpoint.GetAddress(System.ServiceModel.ServiceHostBase)" />
        </element>
        <element api="P:System.ServiceModel.Endpoint.Headers" />
        <element api="P:System.ServiceModel.Endpoint.Identity" />
        <element api="P:System.ServiceModel.Endpoint.ListenUri" />
        <element api="P:System.ServiceModel.Endpoint.Name" />
        <element api="P:System.ServiceModel.Endpoint.ServiceContractName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" />
      </containers>
      <file name="ffa319c0-84ae-ba52-ffbd-d7c338c1871f" />
    </api>
    <api id="Methods.T:System.ServiceModel.Endpoint">
      <topicdata name="Endpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Endpoint" />
      <apidata name="Endpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Endpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Endpoint.GetAddress">
          <element api="M:System.ServiceModel.Endpoint.GetAddress" />
          <element api="M:System.ServiceModel.Endpoint.GetAddress(System.ServiceModel.ServiceHostBase)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" />
      </containers>
      <file name="9431ab2b-e59d-08f7-0073-62d9cf7f98da" />
    </api>
    <api id="Properties.T:System.ServiceModel.Endpoint">
      <topicdata name="Endpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Endpoint" />
      <apidata name="Endpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Endpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Endpoint.AddressUri" />
        <element api="P:System.ServiceModel.Endpoint.BehaviorConfigurationName" />
        <element api="P:System.ServiceModel.Endpoint.Binding" />
        <element api="P:System.ServiceModel.Endpoint.Headers" />
        <element api="P:System.ServiceModel.Endpoint.Identity" />
        <element api="P:System.ServiceModel.Endpoint.ListenUri" />
        <element api="P:System.ServiceModel.Endpoint.Name" />
        <element api="P:System.ServiceModel.Endpoint.ServiceContractName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" />
      </containers>
      <file name="3e307a44-c145-d6f1-02a8-c0cb3de5df0e" />
    </api>
    <api id="Overload:System.ServiceModel.Endpoint.GetAddress">
      <topicdata name="GetAddress" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Endpoint" />
      <apidata name="GetAddress" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Endpoint.GetAddress" />
        <element api="M:System.ServiceModel.Endpoint.GetAddress(System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <file name="45b68737-596b-c727-92ea-4091390b5ce8" />
    </api>
    <api id="M:System.ServiceModel.Endpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <file name="852bae2a-4564-48a9-41ba-e60bde7971d0" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.AddressUri">
      <topicdata group="api" />
      <apidata name="AddressUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddressUri" />
      <setter name="set_AddressUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="649df40a-4f0d-c48b-d80a-f987533a8c04" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.BehaviorConfigurationName">
      <topicdata group="api" />
      <apidata name="BehaviorConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BehaviorConfigurationName" />
      <setter name="set_BehaviorConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="13eed2ed-2100-ada9-1470-fa0b67c78d59" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Binding" />
      <setter name="set_Binding" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="01d0ba6d-2c6c-845f-2ff7-1e5fbceb9f25" />
    </api>
    <api id="M:System.ServiceModel.Endpoint.GetAddress">
      <topicdata group="api" />
      <apidata name="GetAddress" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Endpoint.GetAddress" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <file name="cf04374e-f2bd-08c2-077f-82f84c4c2e2c" />
    </api>
    <api id="M:System.ServiceModel.Endpoint.GetAddress(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name="GetAddress" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Endpoint.GetAddress" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <file name="8ca143c8-a805-bfe4-708a-258be7c07628" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <file name="1e1134e0-31a1-da52-b85d-9330e2cfca7b" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.Identity">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Identity" />
      <setter name="set_Identity" />
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1e781c27-950e-22fc-5070-06b417dc5108" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.ListenUri">
      <topicdata group="api" />
      <apidata name="ListenUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListenUri" />
      <setter name="set_ListenUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="9952498e-8eb8-9946-7c7e-afb1b1e143d7" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="3dfdc6a8-81c2-26ae-0960-b27eaf0c3e26" />
    </api>
    <api id="P:System.ServiceModel.Endpoint.ServiceContractName">
      <topicdata group="api" />
      <apidata name="ServiceContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceContractName" />
      <setter name="set_ServiceContractName" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="151e21d1-e706-f017-e9c9-1effe21e79e3" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddress">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8c1d339a-b6c6-799a-2cd4-4993cf0e4a91" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.EndpointAddress.#ctor">
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])" />
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)" />
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)" />
        </element>
        <element api="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
        <element api="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointAddress.GetHashCode" />
        <element api="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions" />
        <element api="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata" />
        <element api="P:System.ServiceModel.EndpointAddress.Headers" />
        <element api="P:System.ServiceModel.EndpointAddress.Identity" />
        <element api="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
        <element api="P:System.ServiceModel.EndpointAddress.IsNone" />
        <element api="P:System.ServiceModel.EndpointAddress.NoneUri" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="Overload:System.ServiceModel.EndpointAddress.ReadFrom">
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.EndpointAddress.ToString" />
        <element api="P:System.ServiceModel.EndpointAddress.Uri" />
        <element api="Overload:System.ServiceModel.EndpointAddress.WriteContentsTo">
          <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
        </element>
        <element api="Overload:System.ServiceModel.EndpointAddress.WriteTo">
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="8947f21b-7f57-fb56-512e-25554808d870" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointAddress.GetHashCode" />
        <element api="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions" />
        <element api="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata" />
        <element api="Overload:System.ServiceModel.EndpointAddress.ReadFrom">
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.EndpointAddress.ToString" />
        <element api="Overload:System.ServiceModel.EndpointAddress.WriteContentsTo">
          <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
        </element>
        <element api="Overload:System.ServiceModel.EndpointAddress.WriteTo">
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="5cf42d6a-d0fb-90fa-92fb-7b93d85a7d9f" />
    </api>
    <api id="Operators.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="7eb550c7-b95b-e5c9-3ead-8d3d36bcd690" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
        <element api="P:System.ServiceModel.EndpointAddress.Headers" />
        <element api="P:System.ServiceModel.EndpointAddress.Identity" />
        <element api="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
        <element api="P:System.ServiceModel.EndpointAddress.IsNone" />
        <element api="P:System.ServiceModel.EndpointAddress.NoneUri" />
        <element api="P:System.ServiceModel.EndpointAddress.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="daeb3370-c29e-8fd4-99dd-6d939f1a95b1" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddress.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])" />
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)" />
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="740e5ce9-7a02-9482-7aed-b4b53186d08e" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddress.ReadFrom">
      <topicdata name="ReadFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="5f2d70e8-482d-fbf9-80f9-85d109195c08" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddress.WriteContentsTo">
      <topicdata name="WriteContentsTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name="WriteContentsTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="7605f91d-3493-5118-d888-0f3048fe33e2" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddress.WriteTo">
      <topicdata name="WriteTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="6a4716e5-c8a7-5507-e2f8-0e60be2bcb26" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="90e4f6d0-e5cf-f77b-fca3-373a493a7689" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="addressHeaders" params="true">
          <arrayOf rank="1">
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a769e52b-d569-5402-692e-072d71bfda7f" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
        </parameter>
        <parameter name="addressHeaders" params="true">
          <arrayOf rank="1">
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="6b8c77a5-1286-b499-c628-fa0e3768f6f5" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
        </parameter>
        <parameter name="headers">
          <type api="T:System.ServiceModel.Channels.AddressHeaderCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="1cd419b3-0161-286a-7bf6-f63e5d8e24d9" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
        </parameter>
        <parameter name="headers">
          <type api="T:System.ServiceModel.Channels.AddressHeaderCollection" ref="true" />
        </parameter>
        <parameter name="metadataReader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="extensionReader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a8d5bcf9-6f21-7c3f-28c3-7750f3b6bff5" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <topicdata group="api" />
      <apidata name="AnonymousUri" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AnonymousUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="f23c4a46-ef34-ed2f-a945-ecce4e98f5b0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="d5c8a604-7fd1-89c5-a0cd-53d45f4c856b" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="ec80cda8-f769-2ff9-a5dc-5c66a81f003e" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="414d1aa9-8943-183c-ef57-e41f738142e4" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions">
      <topicdata group="api" />
      <apidata name="GetReaderAtExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="8b435224-1241-4166-51c5-d6d63f582f72" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata">
      <topicdata group="api" />
      <apidata name="GetReaderAtMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a516b776-e669-e327-5335-6bdd1fae48f1" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.ServiceModel.Channels.AddressHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="47abc5b2-3dc8-41e9-1b70-9d57ae56422a" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.Identity">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="6bb9666a-3794-2a69-1b5b-81ff7b38bb22" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <topicdata group="api" />
      <apidata name="IsAnonymous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAnonymous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="5f085b94-09a5-6011-e163-584046611b55" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.IsNone">
      <topicdata group="api" />
      <apidata name="IsNone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNone" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="557b5673-2e37-fd5b-e721-ceb0dd889961" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.NoneUri">
      <topicdata group="api" />
      <apidata name="NoneUri" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NoneUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="0e08b474-72f4-41af-cf2d-c8a117e2a0c3" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address1">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="address2">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="8356de4b-af01-8a61-64cb-b95bb165d1a0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address1">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="address2">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="ad323e91-519d-c1a8-7580-66dce588efda" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="88274524-ef81-3c29-4e00-16a7a5c5d1e9" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="3af48710-13db-f876-4d99-4aa2c9214f4b" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a65994ad-abfd-1ea3-b5ce-ad54e4b2a46f" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="ffa19491-7e99-52cb-cd2a-2cb1c651aaee" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="c8b02fe3-c5c7-46eb-c1e2-b34bc51d4076" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointAddress.ReadFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="e37ec4f6-69be-3228-37e3-fde5450d589d" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="48a707f8-1945-f98a-c9c9-f6de09dce2de" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.UriTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a03dd2cb-7d10-8d93-7e30-ca907af1966f" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="WriteContentsTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteContentsTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="7a7c0b6f-857b-86fe-9cb6-d3c297285036" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteContentsTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteContentsTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="22ab6888-3c06-0b80-c3f1-839b4115c436" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="65e2631b-8f40-1580-4d2a-991e43cb3f98" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.Xml.XmlDictionaryString" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="c9f278dd-3741-b0d9-91c3-d07445434f3b" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="475fb493-28f5-a5a3-6040-c3ecb156c955" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.EndpointAddress.WriteTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="546f4ebc-1cdb-1988-a2f7-f76bc80a68d6" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddress10">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress10" />
      <apidata name="EndpointAddress10" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EndpointReference</value>
          </argument>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://www.w3.org/2005/08/addressing</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="df533b43-5f22-eed8-7563-cca94f8a1c5f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddress10">
      <topicdata name="EndpointAddress10" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddress10" />
      <apidata name="EndpointAddress10" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" />
      </containers>
      <file name="898c23f0-7982-c631-82a7-61f0978991e4" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddress10">
      <topicdata name="EndpointAddress10" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddress10" />
      <apidata name="EndpointAddress10" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" />
      </containers>
      <file name="e42c5bc8-2fe0-a8c2-2dce-b2d73b84983d" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="FromEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="c09a3809-909f-b0fa-3c3a-e822c268b8b9" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlSchemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="35c51d73-c742-1e3c-0b40-4ec811d5034e" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="56ce1d40-b6e1-77a7-7e0f-c32859598641" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="24a91db6-a99e-f9c8-6c35-252808cae4e1" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="5189a3e2-1758-e470-2102-0838f917fe05" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress">
      <topicdata group="api" />
      <apidata name="ToEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
      </containers>
      <file name="84b6f324-adb8-4621-9633-a6e311bbb5ec" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddressAugust2004">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddressAugust2004" />
      <apidata name="EndpointAddressAugust2004" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EndpointReference</value>
          </argument>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2004/08/addressing</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9d8aa612-81ac-240a-44c8-98f76aa14900" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddressAugust2004">
      <topicdata name="EndpointAddressAugust2004" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddressAugust2004" />
      <apidata name="EndpointAddressAugust2004" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" />
      </containers>
      <file name="312e6253-3640-7750-d3de-eabe6ff32efc" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddressAugust2004">
      <topicdata name="EndpointAddressAugust2004" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddressAugust2004" />
      <apidata name="EndpointAddressAugust2004" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" />
      </containers>
      <file name="126b63c9-d4f7-a39e-973e-498dd58d3d72" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="FromEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="5259d90c-79d9-14f8-c5ca-9d4c346e3284" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlSchemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="40d6907f-fb1c-d642-1c87-31d7d1a33b32" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="328a2f2a-bd9f-b0a5-b10b-e44936f76196" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="bed02013-1752-9fc1-e868-660da1156690" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="26eba789-a755-a473-ea40-f10ccb82f4d0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress">
      <topicdata group="api" />
      <apidata name="ToEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
      </containers>
      <file name="18e00688-09f6-8221-47bf-d764a224462c" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1c7f4e04-6431-a471-0792-4aa3daa06d65" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor">
          <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
          <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Headers" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Identity" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="181be8c7-d076-fe62-50ec-9f82a78b69af" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="683245f6-bbd6-9f67-284a-21ca7e2b0a28" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Headers" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Identity" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="7a706bc4-2437-82c5-23c7-897185b899a5" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="e187ed36-36f0-41c2-d6f2-3edfbb888fda" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="95ff0b5b-8313-d00c-e183-095db7a51430" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="6be20554-ecd9-cc5e-561d-c5d5cb9372d8" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions">
      <topicdata group="api" />
      <apidata name="GetReaderAtExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="506cde68-b416-f5a6-4a66-f7edbfcd7bd6" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata">
      <topicdata group="api" />
      <apidata name="GetReaderAtMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="4657bd37-a3a7-4c73-f353-80cd9751f4c2" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="08b3d112-49cc-5994-d9f5-56cffa6f0f9e" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Identity" />
      <setter name="set_Identity" />
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="9c1616b4-a485-528b-0d0b-dae40574f6c0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="SetExtensionReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="c6122568-f28e-d8f4-0a6b-e2fb6e176413" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="SetMetadataReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="b3413dfd-2f8e-e8a6-df1e-5bc2a41171e3" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <topicdata group="api" />
      <apidata name="ToEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="6b3a2703-f704-fbdb-f217-3953f17ec4c6" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Uri" />
      <setter name="set_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="fbb33bdd-cb0f-e5ae-e958-7468b41d186b" />
    </api>
    <api id="T:System.ServiceModel.EndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentity" />
      <apidata name="EndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.SpnEndpointIdentity" ref="true" />
          <type api="T:System.ServiceModel.UpnEndpointIdentity" ref="true" />
          <type api="T:System.ServiceModel.DnsEndpointIdentity" ref="true" />
          <type api="T:System.ServiceModel.RsaEndpointIdentity" ref="true" />
          <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="50e80378-1d37-c155-ca39-ad235b8abe0f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointIdentity">
      <topicdata name="EndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointIdentity" />
      <apidata name="EndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.#ctor" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.CreateRsaIdentity">
          <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)" />
          <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity">
          <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" />
      </containers>
      <file name="121146df-8858-20e3-fe17-fa3732bdef75" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointIdentity">
      <topicdata name="EndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointIdentity" />
      <apidata name="EndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.CreateRsaIdentity">
          <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)" />
          <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity">
          <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.EndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" />
      </containers>
      <file name="b4229679-47df-ed3d-875b-c20790d2d92e" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointIdentity">
      <topicdata name="EndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointIdentity" />
      <apidata name="EndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" />
      </containers>
      <file name="67031ba9-ec0b-d0e3-1ac8-b7275690a4b5" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointIdentity.CreateRsaIdentity">
      <topicdata name="CreateRsaIdentity" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentity" />
      <apidata name="CreateRsaIdentity" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="f60ef0e8-702c-105c-a7bd-9a8f0bcabf24" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity">
      <topicdata name="CreateX509CertificateIdentity" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentity" />
      <apidata name="CreateX509CertificateIdentity" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="b512a0de-c374-1088-427c-9971658ae663" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointIdentity.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentity" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="57d82a24-18e2-058d-dd0c-0d38bbf297ab" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="3544ec0a-c7ad-3880-065f-ce7958ddf763" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateDnsIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dnsName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="d6b68991-5d69-96bd-23ed-fa28fd0b15c2" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name="CreateIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="273744fc-1ce0-aa2f-b8bf-9e20b6b7bd15" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="CreateRsaIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointIdentity.CreateRsaIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="2b089610-e554-b0fc-71c9-775ed1ac5764" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateRsaIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointIdentity.CreateRsaIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="publicKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="ee602ffe-fd56-f00c-472b-46c4112dd65c" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateSpnIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="spnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="8d769d36-6595-4d3c-9345-3f497883e338" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateUpnIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="upnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="551deade-3a9b-a8f4-bcd9-051def36687b" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="CreateX509CertificateIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="ff498fa0-7ba7-9091-af2f-49d75b469e3d" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <topicdata group="api" />
      <apidata name="CreateX509CertificateIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primaryCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="supportingCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="a0befa17-69e7-f078-8ebd-04b0847a19e1" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="1bbdfe9a-3c7b-2b2a-219c-07d7fbda6986" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="105e6c7a-bfeb-d624-dadc-3cae369b544d" />
    </api>
    <api id="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
      <topicdata group="api" />
      <apidata name="IdentityClaim" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IdentityClaim" />
      <returns>
        <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="fec7a174-4563-fb39-8bd6-1971db7bb586" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.EndpointIdentity.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identityClaim">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="806f5435-3feb-64af-3d26-eac2d78748e7" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.EndpointIdentity.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identityClaim">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
        <parameter name="claimComparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="4d76ad2e-d501-74f5-b19c-6a2760d3bf30" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentity.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </containers>
      <file name="f1694eea-b905-f16c-abbf-8c5f3a61628c" />
    </api>
    <api id="T:System.ServiceModel.EndpointIdentityExtension">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentityExtension" />
      <apidata name="EndpointIdentityExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="73f7ef35-25b3-5fc2-7602-ab2b9cf4f359" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointIdentityExtension">
      <topicdata name="EndpointIdentityExtension" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointIdentityExtension" />
      <apidata name="EndpointIdentityExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.EndpointIdentityExtension.#ctor">
          <element api="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
          <element api="M:System.ServiceModel.EndpointIdentityExtension.#ctor(System.ServiceModel.EndpointIdentity)" />
        </element>
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimResource" />
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimRight" />
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimType" />
        <element api="M:System.ServiceModel.EndpointIdentityExtension.ProvideValue(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" />
      </containers>
      <file name="014e647a-cdbd-33a6-3c78-aacc20dc6d1f" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointIdentityExtension">
      <topicdata name="EndpointIdentityExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointIdentityExtension" />
      <apidata name="EndpointIdentityExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointIdentityExtension.ProvideValue(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" />
      </containers>
      <file name="f0fe1d1c-9160-c3a8-a162-226363ea1005" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointIdentityExtension">
      <topicdata name="EndpointIdentityExtension" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointIdentityExtension" />
      <apidata name="EndpointIdentityExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimResource" />
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimRight" />
        <element api="P:System.ServiceModel.EndpointIdentityExtension.ClaimType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" />
      </containers>
      <file name="3043befd-d94b-06d8-0e88-066ce33cd37e" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointIdentityExtension.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointIdentityExtension" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointIdentityExtension.#ctor" />
        <element api="M:System.ServiceModel.EndpointIdentityExtension.#ctor(System.ServiceModel.EndpointIdentity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="1601b63a-bcfc-4aa7-9ff0-162919d3e446" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentityExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="83b48260-b3d0-f18d-15a2-072b77f58a65" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentityExtension.#ctor(System.ServiceModel.EndpointIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointIdentityExtension.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="83bd13a0-aeac-d254-db71-de4f762ec899" />
    </api>
    <api id="P:System.ServiceModel.EndpointIdentityExtension.ClaimResource">
      <topicdata group="api" />
      <apidata name="ClaimResource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClaimResource" />
      <setter name="set_ClaimResource" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="c8002b59-a7f3-80e2-2642-9c1d0b632723" />
    </api>
    <api id="P:System.ServiceModel.EndpointIdentityExtension.ClaimRight">
      <topicdata group="api" />
      <apidata name="ClaimRight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClaimRight" />
      <setter name="set_ClaimRight" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="eddaeb02-1b87-19d4-dfbf-589576230f08" />
    </api>
    <api id="P:System.ServiceModel.EndpointIdentityExtension.ClaimType">
      <topicdata group="api" />
      <apidata name="ClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClaimType" />
      <setter name="set_ClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="e3e3c078-952c-a23e-b2d2-d72c00c2e6a5" />
    </api>
    <api id="M:System.ServiceModel.EndpointIdentityExtension.ProvideValue(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointIdentityExtension" ref="true" />
      </containers>
      <file name="ccaf41f2-f6c8-77c5-16eb-052f57b76e1d" />
    </api>
    <api id="T:System.ServiceModel.EndpointNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8a213e01-e7a1-7e04-baaf-a33d42d29994" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.EndpointNotFoundException.#ctor">
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="c003ffdb-2401-a237-bfae-d4cb6ac53c6f" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="bb92a6eb-1a9f-ebac-5254-5b4eea20b735" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="f6cc6ce9-2578-113f-b805-f769d9b80beb" />
    </api>
    <api id="Events.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="aaaeca10-4bf4-f7cc-765f-dfde67f3dd83" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="a0e0a8aa-a2c2-cd71-e998-73f490fac71e" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="9971c5cf-eb9d-4333-a27c-a2173040433b" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="11dbfe1e-db3d-d84b-217b-57dbc12e10ec" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="90059571-bcc0-e6f7-6dc2-2d5ac40d2f6a" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="c2f8c929-726e-2f8c-6060-36d682b0cddb" />
    </api>
    <api id="T:System.ServiceModel.EnvelopeVersion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bfb46bd6-0fdd-8a6f-fd7c-693c27d84327" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues" />
        <element api="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue" />
        <element api="P:System.ServiceModel.EnvelopeVersion.None" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap11" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap12" />
        <element api="M:System.ServiceModel.EnvelopeVersion.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="07e57254-db93-4f2c-dfb5-9f504880ad98" />
    </api>
    <api id="Methods.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues" />
        <element api="M:System.ServiceModel.EnvelopeVersion.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="cb17a05c-1148-3273-2b84-bd0c48bb4b34" />
    </api>
    <api id="Properties.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue" />
        <element api="P:System.ServiceModel.EnvelopeVersion.None" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap11" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap12" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="a0bcffa2-7ea4-5e3c-84c2-23cce0514c16" />
    </api>
    <api id="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <topicdata group="api" />
      <apidata name="GetUltimateDestinationActorValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="f02dfa4d-732f-99ac-c11b-8518e1707b77" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <topicdata group="api" />
      <apidata name="NextDestinationActorValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextDestinationActorValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="48f34872-9a7b-1552-74f5-d54bb942d19c" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_None" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="287200ab-aec6-163f-92ea-3bcdf32cde76" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <topicdata group="api" />
      <apidata name="Soap11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Soap11" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="3cc9381b-5bcd-6ac0-18a0-a393f1e3a0dd" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <topicdata group="api" />
      <apidata name="Soap12" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Soap12" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="26c0300d-6bf5-431c-4ab9-a35547572a64" />
    </api>
    <api id="M:System.ServiceModel.EnvelopeVersion.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="2b94d265-bab8-dba9-1835-139a5e1de43b" />
    </api>
    <api id="T:System.ServiceModel.ExceptionDetail">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="098a0a7c-1f53-f8bb-2c15-a4163a006ba9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)" />
        <element api="P:System.ServiceModel.ExceptionDetail.HelpLink" />
        <element api="P:System.ServiceModel.ExceptionDetail.InnerException" />
        <element api="P:System.ServiceModel.ExceptionDetail.Message" />
        <element api="P:System.ServiceModel.ExceptionDetail.StackTrace" />
        <element api="M:System.ServiceModel.ExceptionDetail.ToString" />
        <element api="P:System.ServiceModel.ExceptionDetail.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="34396c63-91a2-cb23-3f41-feab4ba0ba93" />
    </api>
    <api id="Methods.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.ExceptionDetail.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="429228d2-cbf5-f042-e686-907395352c64" />
    </api>
    <api id="Properties.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ExceptionDetail.HelpLink" />
        <element api="P:System.ServiceModel.ExceptionDetail.InnerException" />
        <element api="P:System.ServiceModel.ExceptionDetail.Message" />
        <element api="P:System.ServiceModel.ExceptionDetail.StackTrace" />
        <element api="P:System.ServiceModel.ExceptionDetail.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="fe633c93-2124-8a53-ef65-871ee9542838" />
    </api>
    <api id="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <file name="308a0557-6f63-7391-6ef4-6808edb60799" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <topicdata group="api" />
      <apidata name="HelpLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HelpLink" />
      <setter name="set_HelpLink" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bb79d64b-80c3-2964-51d7-01b7470589bb" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.InnerException">
      <topicdata group="api" />
      <apidata name="InnerException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InnerException" />
      <setter name="set_InnerException" />
      <returns>
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8316fa5c-20c7-14f2-46ce-f1095e8aff0f" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cc246a10-fcf2-8b62-a453-262786d232c4" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StackTrace" />
      <setter name="set_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c45ec4ed-82e5-7a0a-8f76-f5d03472d0f1" />
    </api>
    <api id="M:System.ServiceModel.ExceptionDetail.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <file name="8123415b-4892-b816-7a0b-f57b05f7d764" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8b426505-f70a-c0b2-d3b7-c9e1d561a97a" />
    </api>
    <api id="T:System.ServiceModel.ExceptionMapper">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ExceptionMapper" />
      <apidata name="ExceptionMapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ExceptionMapper.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="7efb0752-860c-ac04-c298-36250a0bb5dd" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ExceptionMapper">
      <topicdata name="ExceptionMapper" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ExceptionMapper" />
      <apidata name="ExceptionMapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ExceptionMapper.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ExceptionMapper.#ctor" />
        <element api="Overload:System.ServiceModel.ExceptionMapper.FromException">
          <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception)" />
          <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" />
      </containers>
      <file name="b9133681-4d57-0e7d-1349-207b41194aa1" />
    </api>
    <api id="Methods.T:System.ServiceModel.ExceptionMapper">
      <topicdata name="ExceptionMapper" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ExceptionMapper" />
      <apidata name="ExceptionMapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ExceptionMapper.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ExceptionMapper.FromException">
          <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception)" />
          <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" />
      </containers>
      <file name="68147e1f-4975-b7c9-ac74-cd490f9f5dc8" />
    </api>
    <api id="Overload:System.ServiceModel.ExceptionMapper.FromException">
      <topicdata name="FromException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ExceptionMapper" />
      <apidata name="FromException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception)" />
        <element api="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" ref="true" />
      </containers>
      <file name="e54998b7-0b91-06dc-5e81-e185153a2423" />
    </api>
    <api id="M:System.ServiceModel.ExceptionMapper.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" ref="true" />
      </containers>
      <file name="b058c300-b698-0b08-c39c-1ec420ae35f7" />
    </api>
    <api id="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception)">
      <topicdata group="api" />
      <apidata name="FromException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ExceptionMapper.FromException" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" ref="true" />
      </containers>
      <file name="894ed856-64c0-8c4a-9d66-b25e4a840391" />
    </api>
    <api id="M:System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="FromException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ExceptionMapper.FromException" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="soapNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" ref="true" />
      </containers>
      <file name="078470ca-1bcd-2fb7-5d42-c845239dd1bc" />
    </api>
    <api id="M:System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleSecurityTokenProcessingException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionMapper" ref="true" />
      </containers>
      <file name="a975b52d-81cc-bd87-d786-3abc05cc5a4c" />
    </api>
    <api id="T:System.ServiceModel.ExtensionCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name="ExtensionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="70820501-761b-f222-38f5-db67e58317a8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ExtensionCollection`1">
      <topicdata name="ExtensionCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name="ExtensionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="Overload:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly" />
        </element>
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.ExtensionCollection`1.#ctor">
          <element api="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)" />
          <element api="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.ExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" />
      </containers>
      <file name="0ee05a16-707b-fb28-2bd7-034bc187d097" />
    </api>
    <api id="Methods.T:System.ServiceModel.ExtensionCollection`1">
      <topicdata name="ExtensionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name="ExtensionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.ExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" />
      </containers>
      <file name="790f5dd4-1d23-4d38-59c1-e9c5a3bcb3bf" />
    </api>
    <api id="Properties.T:System.ServiceModel.ExtensionCollection`1">
      <topicdata name="ExtensionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name="ExtensionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="Overload:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly" />
        </element>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" />
      </containers>
      <file name="933b49c6-cf4c-9df0-8dfc-bb4dfb5ad284" />
    </api>
    <api id="Overload:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <topicdata name="IsReadOnly" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="f3df0557-b7f9-0f85-4104-7910aee5a4c9" />
    </api>
    <api id="Overload:System.ServiceModel.ExtensionCollection`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ExtensionCollection`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)" />
        <element api="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="cdd8d4be-d8e0-cb6e-a5cd-2238d94523e8" />
    </api>
    <api id="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ExtensionCollection`1.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="a0596f94-23bc-9f5d-3e19-2a0a06c3fe73" />
    </api>
    <api id="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ExtensionCollection`1.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
        </parameter>
        <parameter name="syncRoot">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="6794f938-8acd-6990-cb2c-cf6c050f1071" />
    </api>
    <api id="M:System.ServiceModel.ExtensionCollection`1.Find``1">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <template name="E" index="0" api="M:System.ServiceModel.ExtensionCollection`1.Find``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="0b555842-52c6-f673-9343-fc672eba8909" />
    </api>
    <api id="M:System.ServiceModel.ExtensionCollection`1.FindAll``1">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <template name="E" index="0" api="M:System.ServiceModel.ExtensionCollection`1.FindAll``1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
          <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="934c8cbf-9f8e-3a92-8006-dffb32c8ec3f" />
    </api>
    <api id="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.ServiceModel.IExtension&lt;T&gt;&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.ExtensionCollection`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </containers>
      <file name="a4d64db0-2077-3052-9442-13e8863ef4a5" />
    </api>
    <api id="T:System.ServiceModel.FaultCode">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="187e2ff7-3d50-cf13-1a2d-199d39922873" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.FaultCode.#ctor">
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)" />
        </element>
        <element api="Overload:System.ServiceModel.FaultCode.CreateReceiverFaultCode">
          <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.FaultCode.CreateSenderFaultCode">
          <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)" />
        </element>
        <element api="P:System.ServiceModel.FaultCode.IsPredefinedFault" />
        <element api="P:System.ServiceModel.FaultCode.IsReceiverFault" />
        <element api="P:System.ServiceModel.FaultCode.IsSenderFault" />
        <element api="P:System.ServiceModel.FaultCode.Name" />
        <element api="P:System.ServiceModel.FaultCode.Namespace" />
        <element api="P:System.ServiceModel.FaultCode.SubCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="0a93bb0f-7ae2-323f-da3c-7e5c613eb749" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.FaultCode.CreateReceiverFaultCode">
          <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.FaultCode.CreateSenderFaultCode">
          <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="e3ea857b-4527-cac5-172e-9e92b417b257" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultCode.IsPredefinedFault" />
        <element api="P:System.ServiceModel.FaultCode.IsReceiverFault" />
        <element api="P:System.ServiceModel.FaultCode.IsSenderFault" />
        <element api="P:System.ServiceModel.FaultCode.Name" />
        <element api="P:System.ServiceModel.FaultCode.Namespace" />
        <element api="P:System.ServiceModel.FaultCode.SubCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="d15ccdea-35c9-6120-0fa1-2c8c6c408a81" />
    </api>
    <api id="Overload:System.ServiceModel.FaultCode.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="6891f34d-9f41-51ae-251d-1eadc7008be5" />
    </api>
    <api id="Overload:System.ServiceModel.FaultCode.CreateReceiverFaultCode">
      <topicdata name="CreateReceiverFaultCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name="CreateReceiverFaultCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="1850dc91-5dcb-7f69-b911-549d349b050b" />
    </api>
    <api id="Overload:System.ServiceModel.FaultCode.CreateSenderFaultCode">
      <topicdata name="CreateSenderFaultCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name="CreateSenderFaultCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="2374b10e-faac-5d42-d51d-556878d9d740" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="e7b03a95-e284-96a1-ce06-2deda149a94a" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="9c711548-a3c2-b53a-744e-a5c2fbe790e8" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="19f7c897-1081-0c22-6578-dabcf82694c0" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="2278b7f0-3190-1199-73b9-30ea0f7114ea" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name="CreateReceiverFaultCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultCode.CreateReceiverFaultCode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="5a8a82f7-aa5f-f07c-1c85-fec76494c4f4" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReceiverFaultCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultCode.CreateReceiverFaultCode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="da06b696-be62-1df0-b919-65fdbd321587" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name="CreateSenderFaultCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultCode.CreateSenderFaultCode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="74bf23c9-3901-09ab-d33f-9e718d59787d" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSenderFaultCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultCode.CreateSenderFaultCode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="3ddd1397-9722-33dd-78f1-8c1c19c7252f" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <topicdata group="api" />
      <apidata name="IsPredefinedFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPredefinedFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="50aab688-befa-fd07-a6c0-6a0cb32a247d" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <topicdata group="api" />
      <apidata name="IsReceiverFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReceiverFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="1c525f49-1dff-748c-e612-be7a640d95b9" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsSenderFault">
      <topicdata group="api" />
      <apidata name="IsSenderFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSenderFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="06a654da-cf1e-7c4f-6833-a5d0da66a3fe" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="b80f8f3d-bceb-2439-800b-7ce23aef8f6f" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="bd753dc2-cea6-463d-0f4d-03f56eb67cc6" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.SubCode">
      <topicdata group="api" />
      <apidata name="SubCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubCode" />
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="b23b4f57-8cc8-0b46-6b8b-81ecdd3ab222" />
    </api>
    <api id="T:System.ServiceModel.FaultContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ffd47d89-8d92-9ca3-6957-9ca73d140131" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Action" />
        <element api="P:System.ServiceModel.FaultContractAttribute.DetailType" />
        <element api="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Name" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Namespace" />
        <element api="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="2ccceb19-597e-4b0b-c208-fe40c39e57fd" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="b435d1c2-5dc1-7d28-02d0-2c43ab1ecc6d" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Action" />
        <element api="P:System.ServiceModel.FaultContractAttribute.DetailType" />
        <element api="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Name" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Namespace" />
        <element api="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="ff797219-f809-8d19-00cb-ef4698fed57f" />
    </api>
    <api id="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="detailType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="d371854e-a553-1073-6529-98a329fd26b9" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="5b99f3e1-1f52-b0d6-0c64-f922695cb6cf" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <topicdata group="api" />
      <apidata name="DetailType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DetailType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="37bd3dc6-b141-52ec-acde-cf151c9bc2c2" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="1a0a6d97-be4d-eafb-121c-4df6fa903228" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="6eb44cc1-174a-6cc9-54d9-02d89fdb092a" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="2ef9fed7-c366-081f-6379-663f5ec22a78" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="99cb33f6-6ef4-d8c0-d823-669920aa6eff" />
    </api>
    <api id="T:System.ServiceModel.FaultException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.FaultException`1" ref="true" />
          <type api="T:System.ServiceModel.Web.WebFaultException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ab1b8b90-a2a5-2fcd-85c0-8e8fae1e3107" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultException.#ctor">
          <element api="M:System.ServiceModel.FaultException.#ctor" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)" />
        </element>
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="Overload:System.ServiceModel.FaultException.CreateFault">
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
        </element>
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
        <element api="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="8215a6d2-3304-8834-6363-3cb0c85e9ef0" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultException.CreateFault">
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
        </element>
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
        <element api="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="eda134de-a87c-6f42-fe29-4a0bb015869d" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="5f7f1847-6f62-82de-4003-2c92825af994" />
    </api>
    <api id="Events.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="e3eb48fe-d3c9-1965-aae2-14690e5355d4" />
    </api>
    <api id="Overload:System.ServiceModel.FaultException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultException.#ctor" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="bf440d65-a47b-7c38-9558-7cbc84e69e30" />
    </api>
    <api id="Overload:System.ServiceModel.FaultException.CreateFault">
      <topicdata name="CreateFault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
        <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="ab341a1e-157c-dc89-6e21-fe736e70d386" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="12d9f03d-656e-9636-9270-b4cdbdfb0131" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="01d3bac1-b4f2-497a-6990-612585397877" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="fault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="2e6f3544-02bd-0609-7f4a-269ddf5ffe7d" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="fault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="e1d797a7-8c04-7796-1005-d3a2269de449" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="8857af83-bfe5-598e-6629-4deb81f6ee3c" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="3ddb49fa-8ef2-264c-5de9-bd613015adfe" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="0f1bb9d6-0f77-a162-d6f1-44ff51bb3a14" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="ca1a6676-0793-e42c-f175-fb0f39ecf665" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="4ff76f89-989b-000a-90c1-361ebd532423" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="81ca4c15-1a08-c71b-dbf5-999bcbbff9db" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="4bf6305a-e016-ecfb-9ce4-499a128096c4" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Code">
      <topicdata group="api" />
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Code" />
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="0e86f1b9-e3ce-5ce4-e217-d136551935ae" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <topicdata group="api" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultException.CreateFault" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageFault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="faultDetailTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="cea801bc-9593-48f3-27d1-253f921a0f76" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <topicdata group="api" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultException.CreateFault" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageFault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="faultDetailTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="27ef2d31-c685-1e6a-7751-72c9411523a2" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateMessageFault">
      <topicdata group="api" />
      <apidata name="CreateMessageFault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="04f0b73d-575c-d61e-ef7b-a0df736ff709" />
    </api>
    <api id="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c97211e5-4312-2b21-f2a2-d6af509e7ba9" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="2cbedd5d-2f89-4169-42a5-a61296a3c6fc" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="f540f57f-c09c-6066-5b98-10b850c86936" />
    </api>
    <api id="T:System.ServiceModel.FaultException`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.FaultException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Web.WebFaultException`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TDetail" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bb03a521-d12b-606f-5f62-dca0c1fe23aa" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
        <element api="Overload:System.ServiceModel.FaultException`1.#ctor">
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
          <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)" />
        </element>
        <element api="M:System.ServiceModel.FaultException`1.CreateMessageFault" />
        <element api="P:System.ServiceModel.FaultException`1.Detail" />
        <element api="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.FaultException`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="40ad26a5-116e-f319-4419-4bab44e14d41" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.FaultException`1.CreateMessageFault" />
        <element api="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.FaultException`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="27023d5a-14eb-a860-0243-234c41fe8c23" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
        <element api="P:System.ServiceModel.FaultException`1.Detail" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="fa15b37f-5a29-2c11-2fcf-59063d09d19b" />
    </api>
    <api id="Events.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="8cda830b-28cc-2f40-5f5e-83060a3165df" />
    </api>
    <api id="Overload:System.ServiceModel.FaultException`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="d4f75469-3df8-bed0-91b0-6f66273f3b17" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="78b7c0a4-aa82-6ec4-14dd-886b08dc1806" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="61aba2b5-4a7e-8914-812b-a1226c5ae1bc" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="b9f96d66-c2eb-d20b-54c1-f07797a3d90a" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="d18091c9-917f-6b5a-1283-feb3d1f7a262" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="9d7c56a0-251f-2fd0-48dc-0c27f201a620" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="6daf99de-6512-103e-743b-e0052b87e519" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="7feb43e6-b453-78b0-86d1-ad9f21cf9539" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException`1.#ctor" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="30a28721-94c6-9cdd-9082-38e536bfe4b0" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <topicdata group="api" />
      <apidata name="CreateMessageFault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.FaultException.CreateMessageFault">
          <type api="T:System.ServiceModel.FaultException" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="a1f0873c-6144-04a7-98dd-841a5451aa70" />
    </api>
    <api id="P:System.ServiceModel.FaultException`1.Detail">
      <topicdata group="api" />
      <apidata name="Detail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Detail" />
      <returns>
        <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="069d482f-3b02-57e6-ac75-7b081c300e4b" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.ServiceModel.FaultException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="651de9bd-cd01-2177-3960-f6397f53431d" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.ToString">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="b140a9ad-b5a8-34a2-198b-bbf0c9ce014e" />
    </api>
    <api id="T:System.ServiceModel.FaultImportOptions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultImportOptions" />
      <apidata name="FaultImportOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultImportOptions.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="9e55b415-6ad1-727e-30e2-1463bc078d02" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultImportOptions">
      <topicdata name="FaultImportOptions" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultImportOptions" />
      <apidata name="FaultImportOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultImportOptions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultImportOptions.#ctor" />
        <element api="P:System.ServiceModel.FaultImportOptions.UseMessageFormat" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultImportOptions" />
      </containers>
      <file name="9522c594-b736-25b9-3ea4-2eacbd47f639" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultImportOptions">
      <topicdata name="FaultImportOptions" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultImportOptions" />
      <apidata name="FaultImportOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultImportOptions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultImportOptions" />
      </containers>
      <file name="d6be369c-bfae-564c-3d00-73d47afc5a82" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultImportOptions">
      <topicdata name="FaultImportOptions" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultImportOptions" />
      <apidata name="FaultImportOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultImportOptions.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.FaultImportOptions.UseMessageFormat" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultImportOptions" />
      </containers>
      <file name="8140977b-d976-6e61-4c1d-e62d8892d5d3" />
    </api>
    <api id="M:System.ServiceModel.FaultImportOptions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultImportOptions" ref="true" />
      </containers>
      <file name="b5b1216d-a90e-015c-58f0-34b8eba03dec" />
    </api>
    <api id="P:System.ServiceModel.FaultImportOptions.UseMessageFormat">
      <topicdata group="api" />
      <apidata name="UseMessageFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseMessageFormat" />
      <setter name="set_UseMessageFormat" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultImportOptions" ref="true" />
      </containers>
      <file name="58983999-025c-0062-791f-6a75882df1c3" />
    </api>
    <api id="T:System.ServiceModel.FaultReason">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="79c69dfd-08bc-4e17-be7c-882c61c3a1b5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultReason.#ctor">
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)" />
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})" />
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.ServiceModel.FaultReason.ToString" />
        <element api="P:System.ServiceModel.FaultReason.Translations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="7c4ea7e4-f847-c92f-768c-4c3beb1475e6" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.ServiceModel.FaultReason.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="8f428e63-ed95-95da-717f-a75f775ff7df" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultReason.Translations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="7d6f9922-09bf-2d9d-3474-8da754c9e4a3" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReason.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)" />
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})" />
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="46dcd0aa-6dd6-cc5d-2425-f056dae82e64" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <topicdata name="GetMatchingTranslation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
        <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="683ce5c1-1128-60ab-1e40-cff6d79d1a49" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="translations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="755c62d8-5e33-2b23-94a1-8aeb2ab3fbdd" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="translation">
          <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="3b4d8cb6-1afe-3e7a-88a9-a9dc8ad8b560" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="93336f86-2475-cc65-0da5-4b2ce6929e38" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <topicdata group="api" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="1ea03cfd-81ff-6a12-8486-2b11a41a584d" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="d59b80b3-0048-57bf-9749-570421656c0b" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="9adcf41f-a1c4-e390-ad8b-db580715e7df" />
    </api>
    <api id="P:System.ServiceModel.FaultReason.Translations">
      <topicdata group="api" />
      <apidata name="Translations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Translations" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="fc710ca1-3202-95d4-3b34-6e7296736cea" />
    </api>
    <api id="T:System.ServiceModel.FaultReasonText">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c13404c7-9b90-adb5-7600-485f44fbbc87" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.FaultReasonText.#ctor">
          <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String)" />
          <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)" />
          <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)" />
        <element api="P:System.ServiceModel.FaultReasonText.Text" />
        <element api="P:System.ServiceModel.FaultReasonText.XmlLang" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="1245ab57-b00d-ba32-3f36-265159dee408" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="559f9a07-bb48-f3db-ae37-45f5fbf44563" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultReasonText.Text" />
        <element api="P:System.ServiceModel.FaultReasonText.XmlLang" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="32cf115d-3b7c-fb05-3a53-7231e116ef6f" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReasonText.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReasonText" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String)" />
        <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)" />
        <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="e9d665b8-d3a0-9041-8cb6-6f307d175d99" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReasonText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="5694dd39-1fcf-51c8-01c2-d35fdc1ec773" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReasonText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="e6cbfb09-ab75-a95f-282a-241e21fd8cf6" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReasonText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xmlLang">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="4b13f054-4969-d932-0a41-3a68ee15fc42" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="cb5bf251-5bc9-48fd-23af-12297384dcb8" />
    </api>
    <api id="P:System.ServiceModel.FaultReasonText.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="0d2c7bc8-0415-14a7-bc27-239208a2d1ce" />
    </api>
    <api id="P:System.ServiceModel.FaultReasonText.XmlLang">
      <topicdata group="api" />
      <apidata name="XmlLang" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlLang" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="3c5e92fa-664b-00c7-7cbd-3e175e271c3c" />
    </api>
    <api id="T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      <apidata name="FederatedMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="57031aee-9818-ecc5-6673-70c7f7fda874" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <topicdata name="FederatedMessageSecurityOverHttp" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      <apidata name="FederatedMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      </containers>
      <file name="642b315c-4682-14e4-53b4-ee02289faedf" />
    </api>
    <api id="Methods.T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <topicdata name="FederatedMessageSecurityOverHttp" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      <apidata name="FederatedMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
        <element api="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      </containers>
      <file name="9ba753a1-7c03-fd35-9acc-bc0fdcea68fe" />
    </api>
    <api id="Properties.T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <topicdata name="FederatedMessageSecurityOverHttp" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      <apidata name="FederatedMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential" />
        <element api="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
      </containers>
      <file name="d7036815-6a02-3353-ff58-81ef2ead8717" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="d45ddaa2-f90b-f3cc-f491-b8f2793b350d" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite">
      <topicdata group="api" />
      <apidata name="AlgorithmSuite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AlgorithmSuite" />
      <setter name="set_AlgorithmSuite" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="6947d5a8-35d9-0d0a-ccd2-31515c09264c" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements">
      <topicdata group="api" />
      <apidata name="ClaimTypeRequirements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimTypeRequirements" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="3d22b74e-60ac-844b-6b75-48057e7f1660" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext">
      <topicdata group="api" />
      <apidata name="EstablishSecurityContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EstablishSecurityContext" />
      <setter name="set_EstablishSecurityContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="cf9a44f8-7328-0494-b100-27e96ff8b5d2" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType">
      <topicdata group="api" />
      <apidata name="IssuedKeyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuedKeyType" />
      <setter name="set_IssuedKeyType" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="19c627f8-ba70-97e6-af16-e8e23770e144" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType">
      <topicdata group="api" />
      <apidata name="IssuedTokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuedTokenType" />
      <setter name="set_IssuedTokenType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="624ab8d1-6d90-75fe-be1a-62481790e95e" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress">
      <topicdata group="api" />
      <apidata name="IssuerAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuerAddress" />
      <setter name="set_IssuerAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="93a085bf-1c5f-559e-59a1-45e951a71afd" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding">
      <topicdata group="api" />
      <apidata name="IssuerBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuerBinding" />
      <setter name="set_IssuerBinding" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="75693bab-a689-629b-1f93-f85585cb31ff" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress">
      <topicdata group="api" />
      <apidata name="IssuerMetadataAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuerMetadataAddress" />
      <setter name="set_IssuerMetadataAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="47b0e4e4-7dda-2624-2e0f-bf8915af0f9a" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential">
      <topicdata group="api" />
      <apidata name="NegotiateServiceCredential" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NegotiateServiceCredential" />
      <setter name="set_NegotiateServiceCredential" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="2fd18dbc-1463-22cf-d80d-7a16e8998a52" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="ShouldSerializeAlgorithmSuite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="74e3db38-343e-e9bf-c8ed-caa73a48f717" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements">
      <topicdata group="api" />
      <apidata name="ShouldSerializeClaimTypeRequirements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c2e4477f-408b-e15e-ec23-27bfcec59147" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext">
      <topicdata group="api" />
      <apidata name="ShouldSerializeEstablishSecurityContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ae6b37f2-9fcc-aa34-4207-022da824d316" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType">
      <topicdata group="api" />
      <apidata name="ShouldSerializeIssuedKeyType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e3cc3e6f-57f5-889e-0a68-487f0fa91b15" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <topicdata group="api" />
      <apidata name="ShouldSerializeNegotiateServiceCredential" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="61142786-d65c-fdcc-b682-db79ff425f44" />
    </api>
    <api id="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTokenRequestParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ac84093d-d68d-d4d1-5d37-7d56f88a8060" />
    </api>
    <api id="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters">
      <topicdata group="api" />
      <apidata name="TokenRequestParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenRequestParameters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XmlElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="e8651813-62fe-dba1-3729-557311d7025a" />
    </api>
    <api id="T:System.ServiceModel.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />
        <element api="F:System.ServiceModel.HostNameComparisonMode.Exact" />
        <element api="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="287d8375-1b4b-058c-8d59-a6255c0f6909" />
    </api>
    <api id="F:System.ServiceModel.HostNameComparisonMode.Exact">
      <topicdata group="api" notopic="" />
      <apidata name="Exact" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </containers>
      <file name="7abab516-6367-ec49-3c1a-dbd92121f738" />
    </api>
    <api id="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard">
      <topicdata group="api" notopic="" />
      <apidata name="StrongWildcard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </containers>
      <file name="64b0a2c4-526d-ed19-e9ea-26cb526562e3" />
    </api>
    <api id="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard">
      <topicdata group="api" notopic="" />
      <apidata name="WeakWildcard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </containers>
      <file name="c469caf4-3d91-368f-aefc-d1153269ab56" />
    </api>
    <api id="T:System.ServiceModel.HttpBindingBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.HttpBindingBase" />
      <apidata name="HttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.BasicHttpsBinding" ref="true" />
          <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="336d972c-6146-bf80-8780-8010dc076c59" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.HttpBindingBase">
      <topicdata name="HttpBindingBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.HttpBindingBase" />
      <apidata name="HttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.HttpBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" />
      </containers>
      <file name="e2499266-e23a-3a12-3875-be5a1b1e693a" />
    </api>
    <api id="Methods.T:System.ServiceModel.HttpBindingBase">
      <topicdata name="HttpBindingBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.HttpBindingBase" />
      <apidata name="HttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.HttpBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.HttpBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" />
      </containers>
      <file name="4e0e3009-9dcb-83c9-d5b5-a5537e861517" />
    </api>
    <api id="Properties.T:System.ServiceModel.HttpBindingBase">
      <topicdata name="HttpBindingBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.HttpBindingBase" />
      <apidata name="HttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" />
      </containers>
      <file name="95d08c50-1065-0d11-aea5-8dd92511d227" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.AllowCookies">
      <topicdata group="api" />
      <apidata name="AllowCookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowCookies" />
      <setter name="set_AllowCookies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7ecccded-9d7b-a1c0-a525-ff5bf774ec1e" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal">
      <topicdata group="api" />
      <apidata name="BypassProxyOnLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassProxyOnLocal" />
      <setter name="set_BypassProxyOnLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6a5963ee-2ecb-3a1b-4a22-ad1e05305c37" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <file name="a400c283-9560-0eb1-bb96-4c734b7e05c2" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4ee6c23d-7326-2136-f79a-608c37fd651e" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9600ed1a-533e-d767-2cd0-458739a84a77" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.MaxBufferSize">
      <topicdata group="api" />
      <apidata name="MaxBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferSize" />
      <setter name="set_MaxBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d0340997-81ad-0d7b-ed5a-d34783e19946" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4580a769-959d-a6a6-a669-12ff5caa1372" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.ProxyAddress">
      <topicdata group="api" />
      <apidata name="ProxyAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyAddress" />
      <setter name="set_ProxyAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.UriTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="036532e1-0cbb-d37e-8ba8-ad36f7b69fff" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <file name="e07b8152-4825-f771-ea1e-562d4a92e865" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <file name="cba29941-67da-886f-4a0d-f0735fa5d4bb" />
    </api>
    <api id="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="15f3d4bb-271b-d0f0-182a-d58fce2aca86" />
    </api>
    <api id="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTextEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f2c65269-4730-f7f4-743a-522450f0a739" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <file name="06b3e99a-2b44-b362-8dd0-5dbc638569c7" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.TextEncoding">
      <topicdata group="api" />
      <apidata name="TextEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextEncoding" />
      <setter name="set_TextEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <file name="83126f80-a63f-e640-3f54-4f4c43576000" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.TransferMode">
      <topicdata group="api" />
      <apidata name="TransferMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferMode" />
      <setter name="set_TransferMode" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransferMode" ref="false" />
            <enumValue>
              <field name="Buffered" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="87c4a1e1-8710-ac7e-a911-6f5c9cf8d8d7" />
    </api>
    <api id="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy">
      <topicdata group="api" />
      <apidata name="UseDefaultWebProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultWebProxy" />
      <setter name="set_UseDefaultWebProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e5941a3c-2974-9730-971c-1bb633c53d24" />
    </api>
    <api id="T:System.ServiceModel.HttpClientCredentialType">
      <topicdata group="api" />
      <apidata name="HttpClientCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.HttpClientCredentialType.None" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.Basic" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.Digest" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.Ntlm" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.Windows" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.Certificate" />
        <element api="F:System.ServiceModel.HttpClientCredentialType.InheritedFromHost" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8a9ca265-6da7-c057-9230-fedc66341bb4" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.Basic">
      <topicdata group="api" notopic="" />
      <apidata name="Basic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="405d1057-6cbe-f822-f36e-19c6c7d67840" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="6da9f371-ab8f-4196-bb81-a67cbbd6534f" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.Digest">
      <topicdata group="api" notopic="" />
      <apidata name="Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="4d8651bf-6a96-63e9-c0fb-e867c6fa232a" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.InheritedFromHost">
      <topicdata group="api" notopic="" />
      <apidata name="InheritedFromHost" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="ae85dc8b-f61b-185f-9449-3fcdd6427762" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="5dfe3df5-8ea7-5c6e-32b2-b266d0fe6db2" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.Ntlm">
      <topicdata group="api" notopic="" />
      <apidata name="Ntlm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="e2d30b6a-1caa-9d34-0c77-c2f3ba3071ff" />
    </api>
    <api id="F:System.ServiceModel.HttpClientCredentialType.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </containers>
      <file name="897358b9-e06e-da0a-ca5d-11f38276b5a0" />
    </api>
    <api id="T:System.ServiceModel.HttpProxyCredentialType">
      <topicdata group="api" />
      <apidata name="HttpProxyCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.HttpProxyCredentialType.None" />
        <element api="F:System.ServiceModel.HttpProxyCredentialType.Basic" />
        <element api="F:System.ServiceModel.HttpProxyCredentialType.Digest" />
        <element api="F:System.ServiceModel.HttpProxyCredentialType.Ntlm" />
        <element api="F:System.ServiceModel.HttpProxyCredentialType.Windows" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="218bb18f-dede-4ee5-40e6-6a323ef4fcd2" />
    </api>
    <api id="F:System.ServiceModel.HttpProxyCredentialType.Basic">
      <topicdata group="api" notopic="" />
      <apidata name="Basic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </containers>
      <file name="ca1cf627-86b1-d33b-ceec-4b61023bc55f" />
    </api>
    <api id="F:System.ServiceModel.HttpProxyCredentialType.Digest">
      <topicdata group="api" notopic="" />
      <apidata name="Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </containers>
      <file name="5d7dcde0-c155-b0c9-cef6-82b722ad305c" />
    </api>
    <api id="F:System.ServiceModel.HttpProxyCredentialType.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </containers>
      <file name="5182e997-9ee7-52c0-4ac0-291680f714d0" />
    </api>
    <api id="F:System.ServiceModel.HttpProxyCredentialType.Ntlm">
      <topicdata group="api" notopic="" />
      <apidata name="Ntlm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </containers>
      <file name="cec6f873-f497-4bc6-acd3-9ff28b856e9c" />
    </api>
    <api id="F:System.ServiceModel.HttpProxyCredentialType.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </containers>
      <file name="1ed8c067-9fcd-8135-7f24-941e80b53763" />
    </api>
    <api id="T:System.ServiceModel.HttpTransportSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.HttpTransportSecurity" />
      <apidata name="HttpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.HttpTransportSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="56a49e30-a7b4-da6c-0aaf-866c5233d844" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.HttpTransportSecurity">
      <topicdata name="HttpTransportSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.HttpTransportSecurity" />
      <apidata name="HttpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.HttpTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.#ctor" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.Realm" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeExtendedProtectionPolicy" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeProxyCredentialType" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeRealm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" />
      </containers>
      <file name="a6fc8cd6-c902-a96b-079d-41cf4de85089" />
    </api>
    <api id="Methods.T:System.ServiceModel.HttpTransportSecurity">
      <topicdata name="HttpTransportSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.HttpTransportSecurity" />
      <apidata name="HttpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.HttpTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeExtendedProtectionPolicy" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeProxyCredentialType" />
        <element api="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeRealm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" />
      </containers>
      <file name="8f0141cc-3af3-64cc-8836-e9455773f856" />
    </api>
    <api id="Properties.T:System.ServiceModel.HttpTransportSecurity">
      <topicdata name="HttpTransportSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.HttpTransportSecurity" />
      <apidata name="HttpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.HttpTransportSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" />
        <element api="P:System.ServiceModel.HttpTransportSecurity.Realm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" />
      </containers>
      <file name="3e6918a3-9719-22bb-052d-afc344e08553" />
    </api>
    <api id="M:System.ServiceModel.HttpTransportSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <file name="1ccabae8-3b37-565c-7799-31d1ba8a736b" />
    </api>
    <api id="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.HttpClientCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <file name="3351dd96-0ef9-b5d2-6638-c09c875cefd3" />
    </api>
    <api id="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy">
      <topicdata group="api" />
      <apidata name="ExtendedProtectionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedProtectionPolicy" />
      <setter name="set_ExtendedProtectionPolicy" />
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <file name="86173ba0-eff1-7e6d-0adb-c189aa78e363" />
    </api>
    <api id="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType">
      <topicdata group="api" />
      <apidata name="ProxyCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyCredentialType" />
      <setter name="set_ProxyCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.HttpProxyCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <file name="5cf95e76-4ddd-c344-3143-324598a234a2" />
    </api>
    <api id="P:System.ServiceModel.HttpTransportSecurity.Realm">
      <topicdata group="api" />
      <apidata name="Realm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Realm" />
      <setter name="set_Realm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <file name="882479bc-ed0f-06e8-0ee8-c79d0c498c85" />
    </api>
    <api id="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeClientCredentialType">
      <topicdata group="api" />
      <apidata name="ShouldSerializeClientCredentialType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5df151ad-5d4d-a77f-5c59-b8207a6b8d40" />
    </api>
    <api id="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <topicdata group="api" />
      <apidata name="ShouldSerializeExtendedProtectionPolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e0d979e7-5824-2b15-54cb-3cca76e16996" />
    </api>
    <api id="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeProxyCredentialType">
      <topicdata group="api" />
      <apidata name="ShouldSerializeProxyCredentialType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1b994183-3362-9373-c0b3-aff6ccf763a3" />
    </api>
    <api id="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeRealm">
      <topicdata group="api" />
      <apidata name="ShouldSerializeRealm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b9296b90-6ea4-059c-0c61-631718ddf949" />
    </api>
    <api id="T:System.ServiceModel.IClientChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="30d06757-c5d5-084c-a90f-947a68d0c3d1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
        <element api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
        <element api="P:System.ServiceModel.IClientChannel.Via" />
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IClientChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IClientChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="51b0558c-17d0-6582-17bf-a605bf62c28f" />
    </api>
    <api id="Methods.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IClientChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IClientChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="55c144d2-01f0-0c0e-2d61-da23dfc6c7d8" />
    </api>
    <api id="Properties.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
        <element api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
        <element api="P:System.ServiceModel.IClientChannel.Via" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="ec8e621d-127a-852a-592e-ad10d9e1e08f" />
    </api>
    <api id="Events.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="82b05030-530c-8de0-c186-aed861e17442" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <topicdata group="api" />
      <apidata name="AllowInitializationUI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowInitializationUI" />
      <setter name="set_AllowInitializationUI" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="4be31c4e-e2e5-ebf4-f628-c9bcf660ff05" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="e73f1c49-90b2-79e7-8388-a1b27b193f8d" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <topicdata group="api" />
      <apidata name="DidInteractiveInitialization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DidInteractiveInitialization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="d56027aa-7747-9ba6-6569-264ebbc43992" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <topicdata group="api" />
      <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="1384f467-4c99-1c3f-b039-041527035d2b" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="19dfb37c-2dc7-8ff9-9d73-daadc6243a13" />
    </api>
    <api id="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <topicdata group="api" />
      <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownMessageReceived" />
      <remover name="remove_UnknownMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="bf29928d-14aa-6246-94ce-6a1ada30e705" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.Via">
      <topicdata group="api" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="04cf6df0-43a6-3090-eb3f-b095180fe475" />
    </api>
    <api id="T:System.ServiceModel.ICommunicationObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
        <type api="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider" ref="true" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IServiceChannel" ref="true" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelListener`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.IDuplexChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IDuplexSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IInputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IInputSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IReplyChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IReplySessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelFactoryBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelFactoryBase`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelListenerBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelListenerBase`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="35d6181b-b099-1178-3cd0-77770629b3a4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="fac992d2-b0f9-ad5a-1d45-e0d591c1e2cb" />
    </api>
    <api id="Methods.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="dedde500-81b1-fbaa-7522-e27956fad035" />
    </api>
    <api id="Properties.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="ff73429b-1d2f-b318-5ba3-b77fb2e91a24" />
    </api>
    <api id="Events.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="5ab7e152-ee97-a842-4a92-4f3b580b7d5c" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="53eaa0fd-856f-3036-2efb-d8507150a9ac" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7ebeebbf-ebb7-46eb-cef3-0802c7af3038" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Close" />
        <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7cb71311-d6ee-9661-f01d-dbb165826f66" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Open" />
        <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="b3749f71-8690-0ee7-c15c-ad3c23233907" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="0f3803b5-a2ff-8c2f-c378-a9fe88b8ce1c" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="aaa6a08c-25e7-3352-9506-273f21528431" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="36b76a90-dc81-5b9d-eaa1-c2e0d662f220" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="b810633b-82e9-381d-d420-663014f8fd97" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="cbfb6449-99e8-9c54-d0ca-67ab0d5ab046" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Close" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="4ab13a35-b102-fd1e-7685-2f4f1d01907c" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Close" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7ad1173a-74e9-da38-d57c-521c2cd82bbb" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Closed">
      <topicdata group="api" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closed" />
      <remover name="remove_Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="8539a714-4f20-71fe-362c-c349c26550c0" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Closing">
      <topicdata group="api" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closing" />
      <remover name="remove_Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="c5e17516-8345-4ad0-001b-24d0aee1c5ba" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="116c32db-f4a1-ae09-ffd5-2a85b20a096d" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="3dff5503-adf5-91df-9abf-6ed951a943b4" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Faulted">
      <topicdata group="api" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Faulted" />
      <remover name="remove_Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="f5da50e4-6628-7345-7e58-e6b3db391ae8" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Open" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="00ca7b52-fded-12be-8a88-9c1ae630599f" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Open" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="683322f8-f007-e9ac-eeff-c1a8e737549d" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Opened">
      <topicdata group="api" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opened" />
      <remover name="remove_Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="9e2c3fd7-06b1-680c-d72f-fc819c17d8e4" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Opening">
      <topicdata group="api" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opening" />
      <remover name="remove_Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="95482116-9e0c-dd59-81f9-79da224a9fa6" />
    </api>
    <api id="P:System.ServiceModel.ICommunicationObject.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="8b8ad28b-d689-86e9-6be1-dc0b7f1f3491" />
    </api>
    <api id="T:System.ServiceModel.IContextChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IServiceChannel" ref="true" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="cacba962-c4a7-5114-30bb-d16acbdf7170" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="0e4f73cb-0f58-e28a-3796-25df0de3fbf4" />
    </api>
    <api id="Methods.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="a0265e92-696a-4ad4-4cae-8cd101e885b4" />
    </api>
    <api id="Properties.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="cae2df48-14b4-0bf5-0427-7bccbe79b123" />
    </api>
    <api id="Events.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="4ddd4723-61ee-fe5b-d5e5-aaf2d0efe2ff" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <topicdata group="api" />
      <apidata name="AllowOutputBatching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowOutputBatching" />
      <setter name="set_AllowOutputBatching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="75f5beaa-4c95-1d79-8e87-ecec9b8758d2" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.InputSession">
      <topicdata group="api" />
      <apidata name="InputSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IInputSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="af112b4a-88a5-908d-31b6-5ca48b9ea2e7" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.LocalAddress">
      <topicdata group="api" />
      <apidata name="LocalAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocalAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="72a69d0b-e815-d1b4-7480-7451684e15d6" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <topicdata group="api" />
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationTimeout" />
      <setter name="set_OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="0479daf4-2fb6-62b3-71d7-2e73eaed308f" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.OutputSession">
      <topicdata group="api" />
      <apidata name="OutputSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OutputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IOutputSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="9098bb10-a324-04fd-19c1-dedfa4b671a6" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <topicdata group="api" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="6078b0bd-ed7d-e9da-e476-4297ce2a0553" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="be24d9c8-8bea-696d-a802-03701f59044f" />
    </api>
    <api id="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelManagerBase" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="17e44d57-fad7-d4cd-8647-c2aed6a9ae09" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata name="IDefaultCommunicationTimeouts" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      </containers>
      <file name="df2858dc-b7e1-5839-08e5-389198c8a491" />
    </api>
    <api id="Properties.T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata name="IDefaultCommunicationTimeouts" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      </containers>
      <file name="213c547b-24e9-46fa-8238-287c116713e6" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <topicdata group="api" />
      <apidata name="CloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="568cc085-74ed-1e55-b712-d9cfbd134f56" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <topicdata group="api" />
      <apidata name="OpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="a4663fc9-139f-5b08-0552-efc7141388ac" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <topicdata group="api" />
      <apidata name="ReceiveTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ReceiveTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="a6ebaf95-9cd7-d646-95d4-3a60b9b937b8" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <topicdata group="api" />
      <apidata name="SendTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SendTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="fbe01b7d-ba81-c7c8-dbd4-87d3eeeebf33" />
    </api>
    <api id="T:System.ServiceModel.IDuplexContextChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IDuplexContextChannel" />
      <apidata name="IDuplexContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="965d3373-d032-8660-84d7-b5553e85dc5f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IDuplexContextChannel">
      <topicdata name="IDuplexContextChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IDuplexContextChannel" />
      <apidata name="IDuplexContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown" />
        <element api="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance" />
        <element api="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)" />
        <element api="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" />
      </containers>
      <file name="1440aa1b-0569-ed48-bd62-da57fae03b16" />
    </api>
    <api id="Methods.T:System.ServiceModel.IDuplexContextChannel">
      <topicdata name="IDuplexContextChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IDuplexContextChannel" />
      <apidata name="IDuplexContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IDuplexContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)" />
        <element api="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" />
      </containers>
      <file name="3d4fa0c5-a80f-e42c-8f03-a2a6da990d2a" />
    </api>
    <api id="Properties.T:System.ServiceModel.IDuplexContextChannel">
      <topicdata name="IDuplexContextChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IDuplexContextChannel" />
      <apidata name="IDuplexContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown" />
        <element api="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" />
      </containers>
      <file name="1b863ca2-fc80-e3f3-2bee-e869412b9039" />
    </api>
    <api id="Events.T:System.ServiceModel.IDuplexContextChannel">
      <topicdata name="IDuplexContextChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IDuplexContextChannel" />
      <apidata name="IDuplexContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" />
      </containers>
      <file name="4fb1d06d-6323-f3cb-1631-e247f5df8908" />
    </api>
    <api id="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown">
      <topicdata group="api" />
      <apidata name="AutomaticInputSessionShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticInputSessionShutdown" />
      <setter name="set_AutomaticInputSessionShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </containers>
      <file name="21da08ab-275d-aa51-c30a-ee562cbb857b" />
    </api>
    <api id="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCloseOutputSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </containers>
      <file name="e2caa71d-e1d6-9368-714d-65e7aae4697f" />
    </api>
    <api id="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance">
      <topicdata group="api" />
      <apidata name="CallbackInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CallbackInstance" />
      <setter name="set_CallbackInstance" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </containers>
      <file name="0db7e5f0-eb5b-96d3-d8d6-6b4f274e8057" />
    </api>
    <api id="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="CloseOutputSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </containers>
      <file name="d856272b-cca1-b4f2-7538-064435f352ba" />
    </api>
    <api id="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCloseOutputSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
      </containers>
      <file name="63d3a63d-7ee6-ebd2-240b-2cfd8bf8c078" />
    </api>
    <api id="T:System.ServiceModel.IExtensibleObject`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IServiceChannel" ref="true" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3463381d-25f2-e146-c967-f14c87692322" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtensibleObject`1">
      <topicdata name="IExtensibleObject" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" />
      </containers>
      <file name="4f5b908c-884f-1fb8-0baa-46035cf7c598" />
    </api>
    <api id="Properties.T:System.ServiceModel.IExtensibleObject`1">
      <topicdata name="IExtensibleObject" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" />
      </containers>
      <file name="18a568fe-9214-0720-0809-a013d583605a" />
    </api>
    <api id="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true" />
      </containers>
      <file name="652dc42f-d278-2c30-0bc4-f8b085b1c93a" />
    </api>
    <api id="T:System.ServiceModel.IExtension`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:System.ServiceModel.Description.ServiceMetadataExtension" ref="true" />
        <type api="T:System.ServiceModel.Activation.VirtualPathExtension" ref="true" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
        <type api="T:System.ServiceModel.Routing.RoutingExtension" ref="true" />
        <type api="T:System.ServiceModel.Web.WebOperationContext" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="06adbb7a-14a9-5199-10d0-e5f3a13dc8c0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtension`1">
      <topicdata name="IExtension" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.ServiceModel.IExtension`1.Attach(`0)" />
        <element api="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" />
      </containers>
      <file name="12e0fa55-fb9b-88eb-d056-1311fc1744d8" />
    </api>
    <api id="Methods.T:System.ServiceModel.IExtension`1">
      <topicdata name="IExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.ServiceModel.IExtension`1.Attach(`0)" />
        <element api="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" />
      </containers>
      <file name="e5b80ea1-4b67-ee97-e3d0-685d7f5415b0" />
    </api>
    <api id="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" ref="true" />
      </containers>
      <file name="6e0dec15-dc30-3896-e48b-bc04a251e579" />
    </api>
    <api id="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" ref="true" />
      </containers>
      <file name="e5a0cc21-d09f-5989-07de-7bc1647c23b8" />
    </api>
    <api id="T:System.ServiceModel.IExtensionCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.ExtensionCollection`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0848751d-01f0-3c99-9d8f-c0938f4af6e1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
        <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="57277a7c-dd83-d807-4611-a3613af1fa46" />
    </api>
    <api id="Methods.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="e3e4822f-c18a-a435-c4d9-e852684d2bf2" />
    </api>
    <api id="Properties.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="655095b9-d2f6-d3c5-92bc-3df9ade9569b" />
    </api>
    <api id="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <template name="E" index="0" api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true" />
      </containers>
      <file name="9ff63901-875d-6e00-3ac2-9675cb79fce4" />
    </api>
    <api id="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <template name="E" index="0" api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true" />
      </containers>
      <file name="2048ddac-9676-73d3-0283-26424cc74203" />
    </api>
    <api id="T:System.ServiceModel.ImpersonationOption">
      <topicdata group="api" />
      <apidata name="ImpersonationOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.ImpersonationOption.NotAllowed" />
        <element api="F:System.ServiceModel.ImpersonationOption.Allowed" />
        <element api="F:System.ServiceModel.ImpersonationOption.Required" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bb7f8274-a3e0-d9e5-a17b-8c2fc43350dd" />
    </api>
    <api id="F:System.ServiceModel.ImpersonationOption.Allowed">
      <topicdata group="api" notopic="" />
      <apidata name="Allowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </containers>
      <file name="05d1db2f-ba40-73c2-d1a2-8a0ec4b603da" />
    </api>
    <api id="F:System.ServiceModel.ImpersonationOption.NotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="NotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </containers>
      <file name="6fd0ad89-ca39-a85d-f208-28d8dbbe0eeb" />
    </api>
    <api id="F:System.ServiceModel.ImpersonationOption.Required">
      <topicdata group="api" notopic="" />
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </containers>
      <file name="da9e3c57-daeb-8ae9-483c-67f10bf94e43" />
    </api>
    <api id="T:System.ServiceModel.InstanceContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.InstanceContext" />
      <apidata name="InstanceContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.InstanceContext" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="729a43f8-6417-caa0-e27b-ab79f6af72a5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.InstanceContext">
      <topicdata name="InstanceContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.InstanceContext" />
      <apidata name="InstanceContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.InstanceContext.#ctor">
          <element api="M:System.ServiceModel.InstanceContext.#ctor(System.Object)" />
          <element api="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)" />
          <element api="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.InstanceContext.Extensions" />
        <element api="Overload:System.ServiceModel.InstanceContext.GetServiceInstance">
          <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance" />
          <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)" />
        </element>
        <element api="P:System.ServiceModel.InstanceContext.Host" />
        <element api="P:System.ServiceModel.InstanceContext.IncomingChannels" />
        <element api="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.InstanceContext.OutgoingChannels" />
        <element api="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance" />
        <element api="P:System.ServiceModel.InstanceContext.SynchronizationContext" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.InstanceContext.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.InstanceContext.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.InstanceContext.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.InstanceContext.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" />
      </containers>
      <file name="43cc6bae-ee24-3de3-924e-61007c0e2015" />
    </api>
    <api id="Methods.T:System.ServiceModel.InstanceContext">
      <topicdata name="InstanceContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.InstanceContext" />
      <apidata name="InstanceContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.InstanceContext.GetServiceInstance">
          <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance" />
          <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)" />
        </element>
        <element api="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.InstanceContext.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.InstanceContext.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.InstanceContext.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.InstanceContext.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" />
      </containers>
      <file name="06773ff2-0380-60a3-9e9d-10b5b2c5db22" />
    </api>
    <api id="Properties.T:System.ServiceModel.InstanceContext">
      <topicdata name="InstanceContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.InstanceContext" />
      <apidata name="InstanceContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.InstanceContext.Extensions" />
        <element api="P:System.ServiceModel.InstanceContext.Host" />
        <element api="P:System.ServiceModel.InstanceContext.IncomingChannels" />
        <element api="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.InstanceContext.OutgoingChannels" />
        <element api="P:System.ServiceModel.InstanceContext.SynchronizationContext" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" />
      </containers>
      <file name="caec777e-cfde-9d6c-631b-78e2dce4e94f" />
    </api>
    <api id="Events.T:System.ServiceModel.InstanceContext">
      <topicdata name="InstanceContext" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.InstanceContext" />
      <apidata name="InstanceContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" />
      </containers>
      <file name="9bcca652-f20e-9f00-2454-dcb2f9bdb38d" />
    </api>
    <api id="Overload:System.ServiceModel.InstanceContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.InstanceContext" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.InstanceContext.#ctor(System.Object)" />
        <element api="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="1488abea-8763-7920-0f70-632a93a0c642" />
    </api>
    <api id="Overload:System.ServiceModel.InstanceContext.GetServiceInstance">
      <topicdata name="GetServiceInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.InstanceContext" />
      <apidata name="GetServiceInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance" />
        <element api="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="25b7e56e-8d15-0da7-9031-7c25f2098e1d" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InstanceContext.#ctor" />
      <parameters>
        <parameter name="implementation">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="5f72585b-373a-2f56-1e82-9c8ae560ad31" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InstanceContext.#ctor" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="4801518f-9154-ac0a-81a2-acc444321afb" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InstanceContext.#ctor" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
        <parameter name="implementation">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="47bc6e5b-a2d1-a005-58e1-daf3142a5142" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.InstanceContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.InstanceContext" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="94126427-b199-0e80-94d0-9c96278efecb" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.GetServiceInstance">
      <topicdata group="api" />
      <apidata name="GetServiceInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.InstanceContext.GetServiceInstance" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="9d044a5b-6e52-7b7f-5c1d-afb43a74b4cb" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="GetServiceInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.InstanceContext.GetServiceInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="a2c7af16-e559-dd21-b5a7-938ff04556b6" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="79c1b285-63a2-a065-7b84-ac4cb75b6544" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.IncomingChannels">
      <topicdata group="api" />
      <apidata name="IncomingChannels" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingChannels" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="58e7d961-20aa-c202-1b26-ae32e492d381" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)">
      <topicdata group="api" />
      <apidata name="IncrementManualFlowControlLimit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="incrementBy">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="d19a1c8e-e6ec-4f7b-6f1e-bb8f50d935e4" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit">
      <topicdata group="api" />
      <apidata name="ManualFlowControlLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ManualFlowControlLimit" />
      <setter name="set_ManualFlowControlLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="faef1412-194e-a224-9837-2198e1d971e3" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.OutgoingChannels">
      <topicdata group="api" />
      <apidata name="OutgoingChannels" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingChannels" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="b93e6372-3dee-2d52-8726-57f829e87067" />
    </api>
    <api id="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance">
      <topicdata group="api" />
      <apidata name="ReleaseServiceInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="95bc8ef4-9d56-50df-ac9c-c655f57ffe07" />
    </api>
    <api id="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <topicdata group="api" />
      <apidata name="SynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizationContext" />
      <setter name="set_SynchronizationContext" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </containers>
      <file name="73fdedf8-5a08-3d5e-a882-b1cdbf1f4d65" />
    </api>
    <api id="T:System.ServiceModel.InstanceContextMode">
      <topicdata group="api" />
      <apidata name="InstanceContextMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.InstanceContextMode.PerSession" />
        <element api="F:System.ServiceModel.InstanceContextMode.PerCall" />
        <element api="F:System.ServiceModel.InstanceContextMode.Single" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="d398567a-e231-1ff2-d53b-c3b2168beacd" />
    </api>
    <api id="F:System.ServiceModel.InstanceContextMode.PerCall">
      <topicdata group="api" notopic="" />
      <apidata name="PerCall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </containers>
      <file name="ab36051f-b215-2996-e432-9d843bd3bd3b" />
    </api>
    <api id="F:System.ServiceModel.InstanceContextMode.PerSession">
      <topicdata group="api" notopic="" />
      <apidata name="PerSession" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </containers>
      <file name="1140b2d1-804e-5e1b-0bb5-07eb1532abf0" />
    </api>
    <api id="F:System.ServiceModel.InstanceContextMode.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </containers>
      <file name="00e45f3a-fb7f-465f-0c7f-d50b4803f621" />
    </api>
    <api id="T:System.ServiceModel.InvalidMessageContractException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1e9d9fa6-39c3-590d-64a7-b4c9d574072d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.InvalidMessageContractException.#ctor">
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="5b087a8e-093a-a1b0-a719-73f5b0e1e7af" />
    </api>
    <api id="Methods.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="8d65aed2-ad4d-89f4-bdb2-9c91f4707ad4" />
    </api>
    <api id="Properties.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="223291d3-cbbb-30ab-4b82-3a4e0baae394" />
    </api>
    <api id="Events.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="1168269d-14e1-c7e1-6bc1-5a62289de48f" />
    </api>
    <api id="Overload:System.ServiceModel.InvalidMessageContractException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="8ea96790-fa40-2e33-b1df-731e739e10d8" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="7759994b-1878-e375-fb80-125f7c06d91d" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="0e1c9c06-c2a1-e1e1-1025-89efdccf1094" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="0f67204a-f6e9-012d-ee14-14c0ecad4109" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="b31469c3-ab17-17cc-30ff-2bc44002325c" />
    </api>
    <api id="T:System.ServiceModel.IOnlineStatus">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IOnlineStatus" />
      <apidata name="IOnlineStatus" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c323df34-4b59-5790-1ddc-a578ab296b8d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IOnlineStatus">
      <topicdata name="IOnlineStatus" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IOnlineStatus" />
      <apidata name="IOnlineStatus" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IOnlineStatus.IsOnline" />
        <element api="E:System.ServiceModel.IOnlineStatus.Offline" />
        <element api="E:System.ServiceModel.IOnlineStatus.Online" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" />
      </containers>
      <file name="6dd40be4-9a56-8267-143b-1e392fa5ea51" />
    </api>
    <api id="Properties.T:System.ServiceModel.IOnlineStatus">
      <topicdata name="IOnlineStatus" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IOnlineStatus" />
      <apidata name="IOnlineStatus" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IOnlineStatus.IsOnline" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" />
      </containers>
      <file name="bbc6424b-a857-995e-647a-a157a204f849" />
    </api>
    <api id="Events.T:System.ServiceModel.IOnlineStatus">
      <topicdata name="IOnlineStatus" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IOnlineStatus" />
      <apidata name="IOnlineStatus" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.IOnlineStatus.Offline" />
        <element api="E:System.ServiceModel.IOnlineStatus.Online" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" />
      </containers>
      <file name="92517238-9a82-12fd-fe16-beb936237d5e" />
    </api>
    <api id="P:System.ServiceModel.IOnlineStatus.IsOnline">
      <topicdata group="api" />
      <apidata name="IsOnline" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsOnline" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
      </containers>
      <file name="3cb5a8ac-b6af-0e85-3c96-440238dd00d6" />
    </api>
    <api id="E:System.ServiceModel.IOnlineStatus.Offline">
      <topicdata group="api" />
      <apidata name="Offline" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Offline" />
      <remover name="remove_Offline" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
      </containers>
      <file name="8fcb1b77-ee43-93fc-09e0-20a1ff886b43" />
    </api>
    <api id="E:System.ServiceModel.IOnlineStatus.Online">
      <topicdata group="api" />
      <apidata name="Online" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Online" />
      <remover name="remove_Online" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
      </containers>
      <file name="052cc1a0-97b1-406e-ea11-7d879cedc821" />
    </api>
    <api id="T:System.ServiceModel.IServiceChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IServiceChannel" />
      <apidata name="IServiceChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6bee4b05-591f-6f65-24e7-1a350cc18e16" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IServiceChannel">
      <topicdata name="IServiceChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IServiceChannel" />
      <apidata name="IServiceChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IServiceChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IServiceChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IServiceChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IServiceChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="P:System.ServiceModel.IServiceChannel.ListenUri" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IServiceChannel" />
      </containers>
      <file name="93c86d6c-8b0d-9a7b-e3e5-67b7d7986d2e" />
    </api>
    <api id="Methods.T:System.ServiceModel.IServiceChannel">
      <topicdata name="IServiceChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IServiceChannel" />
      <apidata name="IServiceChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IServiceChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IServiceChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IServiceChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IServiceChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IServiceChannel" />
      </containers>
      <file name="fd811077-37d4-7dd6-f92e-b2408206656e" />
    </api>
    <api id="Properties.T:System.ServiceModel.IServiceChannel">
      <topicdata name="IServiceChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IServiceChannel" />
      <apidata name="IServiceChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="P:System.ServiceModel.IServiceChannel.ListenUri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IServiceChannel" />
      </containers>
      <file name="05956a0f-c80d-2845-22ab-29b13b8810d6" />
    </api>
    <api id="Events.T:System.ServiceModel.IServiceChannel">
      <topicdata name="IServiceChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IServiceChannel" />
      <apidata name="IServiceChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IServiceChannel" />
      </containers>
      <file name="25ae26f2-623b-c52d-7e43-0b005b5a2914" />
    </api>
    <api id="P:System.ServiceModel.IServiceChannel.ListenUri">
      <topicdata group="api" />
      <apidata name="ListenUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ListenUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IServiceChannel" ref="true" />
      </containers>
      <file name="0d8fe064-c669-f63f-8ad3-6e03be2a4d98" />
    </api>
    <api id="T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="fe26fdc5-897c-4339-fa1d-aa60a4682980" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageBodyMemberAttribute.Order" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="b0ffcf48-6b43-f25c-2eec-4163a2eb0cc7" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="7ffe57cc-b39e-ddc6-d64d-fb02c299dbcf" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageBodyMemberAttribute.Order" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="07c83ac6-27bf-51d8-8ffd-2231567001eb" />
    </api>
    <api id="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
      </containers>
      <file name="44d4e057-744e-de37-5bc6-62e1a16ec8d3" />
    </api>
    <api id="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Order" />
      <setter name="set_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
      </containers>
      <file name="21638a9c-eebd-5190-6b85-4414df6c5b20" />
    </api>
    <api id="T:System.ServiceModel.MessageContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6455b317-a2f1-b1e8-07c5-05775027c36f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
        <element api="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="d9323e97-ab19-efe9-07be-fc71a41897b8" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="8f564652-e3a1-9ab0-0e6c-073f6a65ffea" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
        <element api="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="ad7489b1-cf40-e7c7-96e3-2b489b37b93f" />
    </api>
    <api id="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="935a2682-47dd-8452-907d-828bd19d2aec" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="ee12b143-fd69-5d3c-c1f4-61b67eea80e3" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <topicdata group="api" />
      <apidata name="IsWrapped" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsWrapped" />
      <setter name="set_IsWrapped" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="bad7abaa-75a1-551d-b617-6b157ac94925" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="d5a77a7f-70bb-c90d-b2e9-5f8c4756b940" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <topicdata group="api" />
      <apidata name="WrapperName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WrapperName" />
      <setter name="set_WrapperName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="ffb12c72-a062-0352-48e4-d8e665dd3f23" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <topicdata group="api" />
      <apidata name="WrapperNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WrapperNamespace" />
      <setter name="set_WrapperNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="3e7b2725-b6c8-ef58-9231-52a40180345d" />
    </api>
    <api id="T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
          <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f47b57ba-ed2f-30ca-eabb-0f8c09d7870d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="a81e7cd4-28e5-e2e9-95df-6eecbab12377" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="6839d4f5-bdec-82f7-a643-b2115bfe1790" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="0b52a1a5-93cd-1b7f-3541-66f8c3596953" />
    </api>
    <api id="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="8419f3ba-942f-d5d4-7a11-11c3212b173e" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="8cf8b9d3-7c28-cb63-63e7-b131fe11fb3b" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="83489e1a-5eb3-a1ad-e294-6428857b2dd7" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="be2dcebe-96cd-ecff-fcd1-8717b8d0a5a0" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="58b63037-360e-f68a-c640-2870e8ad9adb" />
    </api>
    <api id="T:System.ServiceModel.MessageCredentialType">
      <topicdata group="api" />
      <apidata name="MessageCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.MessageCredentialType.None" />
        <element api="F:System.ServiceModel.MessageCredentialType.Windows" />
        <element api="F:System.ServiceModel.MessageCredentialType.UserName" />
        <element api="F:System.ServiceModel.MessageCredentialType.Certificate" />
        <element api="F:System.ServiceModel.MessageCredentialType.IssuedToken" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2bbb011d-67c5-4b16-f78b-b2c8999790a4" />
    </api>
    <api id="F:System.ServiceModel.MessageCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </containers>
      <file name="7b3e8558-d36c-51a0-cbbc-e13fa6691005" />
    </api>
    <api id="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <topicdata group="api" notopic="" />
      <apidata name="IssuedToken" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </containers>
      <file name="25eb8b3b-3577-8e7e-c61c-89914d38fde2" />
    </api>
    <api id="F:System.ServiceModel.MessageCredentialType.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </containers>
      <file name="b8d9c5f5-cfab-bf55-40f2-f7795f3f5678" />
    </api>
    <api id="F:System.ServiceModel.MessageCredentialType.UserName">
      <topicdata group="api" notopic="" />
      <apidata name="UserName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </containers>
      <file name="785ca39f-190d-e41c-1942-f59e94949a23" />
    </api>
    <api id="F:System.ServiceModel.MessageCredentialType.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </containers>
      <file name="94ff2e87-c56c-0d4c-c035-f8c20940a1be" />
    </api>
    <api id="T:System.ServiceModel.MessageHeader`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeader`1" />
      <apidata name="MessageHeader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeader`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2829dea9-11ee-7273-8ffb-0b7c39a1c2fe" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageHeader`1">
      <topicdata name="MessageHeader" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageHeader`1" />
      <apidata name="MessageHeader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeader`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.MessageHeader`1.#ctor">
          <element api="M:System.ServiceModel.MessageHeader`1.#ctor" />
          <element api="M:System.ServiceModel.MessageHeader`1.#ctor(`0)" />
          <element api="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.MessageHeader`1.Actor" />
        <element api="P:System.ServiceModel.MessageHeader`1.Content" />
        <element api="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)" />
        <element api="P:System.ServiceModel.MessageHeader`1.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeader`1.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" />
      </containers>
      <file name="226ed983-8826-2466-b5d0-d0434e63e661" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageHeader`1">
      <topicdata name="MessageHeader" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageHeader`1" />
      <apidata name="MessageHeader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeader`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" />
      </containers>
      <file name="1dd2b49b-acb0-13bc-323c-fcbc4aceadf4" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageHeader`1">
      <topicdata name="MessageHeader" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageHeader`1" />
      <apidata name="MessageHeader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeader`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.MessageHeader`1.Actor" />
        <element api="P:System.ServiceModel.MessageHeader`1.Content" />
        <element api="P:System.ServiceModel.MessageHeader`1.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeader`1.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" />
      </containers>
      <file name="68174a8d-c2f1-9d7e-1dc8-99f2acf2b768" />
    </api>
    <api id="Overload:System.ServiceModel.MessageHeader`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeader`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MessageHeader`1.#ctor" />
        <element api="M:System.ServiceModel.MessageHeader`1.#ctor(`0)" />
        <element api="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="8ee651b2-15da-1998-6865-c81121ef7893" />
    </api>
    <api id="M:System.ServiceModel.MessageHeader`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeader`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="6246672e-808f-bbfb-e935-b2642c5187ec" />
    </api>
    <api id="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeader`1.#ctor" />
      <parameters>
        <parameter name="content">
          <template name="T" index="0" api="T:System.ServiceModel.MessageHeader`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="466ef920-6fc1-c966-3b28-7117781488f5" />
    </api>
    <api id="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeader`1.#ctor" />
      <parameters>
        <parameter name="content">
          <template name="T" index="0" api="T:System.ServiceModel.MessageHeader`1" />
        </parameter>
        <parameter name="mustUnderstand">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="actor">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relay">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="1f34e36e-3aa4-2692-6565-241b3b0b25a7" />
    </api>
    <api id="P:System.ServiceModel.MessageHeader`1.Actor">
      <topicdata group="api" />
      <apidata name="Actor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Actor" />
      <setter name="set_Actor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="963edcad-ee5d-aa79-4b77-b8a7dc76d1a6" />
    </api>
    <api id="P:System.ServiceModel.MessageHeader`1.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <template name="T" index="0" api="T:System.ServiceModel.MessageHeader`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="a924f6c0-c9ba-b36d-37a6-473c45474274" />
    </api>
    <api id="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetUntypedHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageHeader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="7dbd4fa3-2a0f-48e8-d14d-e6ae43ef3f74" />
    </api>
    <api id="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <topicdata group="api" />
      <apidata name="MustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MustUnderstand" />
      <setter name="set_MustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="ee77ff86-48a6-0abc-2277-3f03a7678069" />
    </api>
    <api id="P:System.ServiceModel.MessageHeader`1.Relay">
      <topicdata group="api" />
      <apidata name="Relay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Relay" />
      <setter name="set_Relay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeader`1" ref="true" />
      </containers>
      <file name="b3cec0bf-7ce6-16cc-39be-f04c8fe8f4e2" />
    </api>
    <api id="T:System.ServiceModel.MessageHeaderArrayAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderArrayAttribute" />
      <apidata name="MessageHeaderArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
          <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f37bc02b-90cc-0331-592d-afa44dfa920d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageHeaderArrayAttribute">
      <topicdata name="MessageHeaderArrayAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      <apidata name="MessageHeaderArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
        <element api="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      </containers>
      <file name="857c9d9d-577a-de49-8ae0-aa6864664a8d" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageHeaderArrayAttribute">
      <topicdata name="MessageHeaderArrayAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      <apidata name="MessageHeaderArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      </containers>
      <file name="0d726346-31ff-93b1-e404-bfeb46ad5401" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageHeaderArrayAttribute">
      <topicdata name="MessageHeaderArrayAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      <apidata name="MessageHeaderArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderArrayAttribute" />
      </containers>
      <file name="366b3367-0447-20f4-4452-b36c70a09c0d" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderArrayAttribute" ref="true" />
      </containers>
      <file name="0df56347-56e9-8efa-9f76-b6cee96c28f0" />
    </api>
    <api id="T:System.ServiceModel.MessageHeaderAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderAttribute" />
      <apidata name="MessageHeaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MessageHeaderArrayAttribute" ref="true" />
          <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ba1989d8-4ee9-ce41-d109-a2d5b58a4f59" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageHeaderAttribute">
      <topicdata name="MessageHeaderAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageHeaderAttribute" />
      <apidata name="MessageHeaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
        <element api="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" />
      </containers>
      <file name="3cebda5e-3b1a-3cc0-4e9a-0b05419c5258" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageHeaderAttribute">
      <topicdata name="MessageHeaderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageHeaderAttribute" />
      <apidata name="MessageHeaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" />
      </containers>
      <file name="6ddd3595-ffa6-ae2b-c2d7-04c5df6053e6" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageHeaderAttribute">
      <topicdata name="MessageHeaderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageHeaderAttribute" />
      <apidata name="MessageHeaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" />
      </containers>
      <file name="2158156c-6ea7-d2f2-4730-e3ee765e3f9a" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
      </containers>
      <file name="52194d07-56bc-dd5c-b1b5-9ff4553c7fe9" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderAttribute.Actor">
      <topicdata group="api" />
      <apidata name="Actor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Actor" />
      <setter name="set_Actor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
      </containers>
      <file name="7fb667d2-564f-22e7-6e03-76e8615443bc" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand">
      <topicdata group="api" />
      <apidata name="MustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MustUnderstand" />
      <setter name="set_MustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
      </containers>
      <file name="cc5f03c5-9342-2382-515d-cc4038e38f40" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderAttribute.Relay">
      <topicdata group="api" />
      <apidata name="Relay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Relay" />
      <setter name="set_Relay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
      </containers>
      <file name="8cd490e2-f4fd-0ae0-aed0-6f4adfb7df95" />
    </api>
    <api id="T:System.ServiceModel.MessageHeaderException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ProtocolException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f7416605-9b9c-0e15-fca1-f24fd9b6227f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.MessageHeaderException.#ctor">
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)" />
        </element>
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderName" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderNamespace" />
        <element api="P:System.ServiceModel.MessageHeaderException.IsDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="b82f6f15-57c6-3f49-5d51-b142eac955f4" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="a45e9b7c-8697-73a5-8ef0-7e0e21037173" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderName" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderNamespace" />
        <element api="P:System.ServiceModel.MessageHeaderException.IsDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="53b7f678-dba1-acd1-f072-b7d184e7ca4d" />
    </api>
    <api id="Events.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="f468be61-facf-152c-767c-22f1801f6c78" />
    </api>
    <api id="Overload:System.ServiceModel.MessageHeaderException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="38670388-3af9-b713-a4d9-57e4b1421caf" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="1ed29948-7c5d-751c-6c84-fe0f482f9a1e" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="0ed7464f-ce77-730a-6403-010ff175295d" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="bcac8ff3-92c0-7070-3524-401bfa080c10" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="858c1c82-79f4-f671-046c-dae831fbb888" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="e10954d3-5c9c-2521-2780-fdb80e5c09de" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="235f50f7-74b9-911e-e988-25ab1cac20d8" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="40d4c345-6d12-3ad2-91c4-bcf860eb7205" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="cbfc7835-d246-9382-f1fd-7a4993493d57" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="5a9d0f87-41b2-2e0e-6c89-a9661e31cde4" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <topicdata group="api" />
      <apidata name="HeaderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HeaderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="036be137-f612-aac6-fa1c-6073c173c1ed" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <topicdata group="api" />
      <apidata name="HeaderNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HeaderNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="e9398bb0-c09c-22d2-1683-1b2ff59583aa" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <topicdata group="api" />
      <apidata name="IsDuplicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDuplicate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="c4022a48-8568-37fc-8d20-bf21eaba0e80" />
    </api>
    <api id="T:System.ServiceModel.MessageParameterAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0843a798-7355-2e66-dd34-e214cf4afa3c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="03edba34-e7dc-0f44-28ed-3a6f44b2b45a" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="de925407-3f37-0b2c-63ee-c738e3672b25" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="5ccc4cdd-0b31-4afe-9612-ee35867f0da2" />
    </api>
    <api id="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" ref="true" />
      </containers>
      <file name="ce6b5e4a-94a5-5503-d2db-7cbbb5877356" />
    </api>
    <api id="P:System.ServiceModel.MessageParameterAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" ref="true" />
      </containers>
      <file name="ed8457cc-f188-ceea-0b93-90d6be070c08" />
    </api>
    <api id="T:System.ServiceModel.MessagePropertyAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessagePropertyAttribute" />
      <apidata name="MessagePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessagePropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="12d5e9d7-0554-8a7c-79b9-463ac43c2079" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessagePropertyAttribute">
      <topicdata name="MessagePropertyAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessagePropertyAttribute" />
      <apidata name="MessagePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessagePropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessagePropertyAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessagePropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessagePropertyAttribute" />
      </containers>
      <file name="ea0ff814-034d-b165-9623-5054aff09dc1" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessagePropertyAttribute">
      <topicdata name="MessagePropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessagePropertyAttribute" />
      <apidata name="MessagePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessagePropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessagePropertyAttribute" />
      </containers>
      <file name="a0e81c3d-82d0-acb6-ba23-a6ce8422b8b6" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessagePropertyAttribute">
      <topicdata name="MessagePropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessagePropertyAttribute" />
      <apidata name="MessagePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessagePropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessagePropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessagePropertyAttribute" />
      </containers>
      <file name="335c7958-3c66-a1d4-13e1-996298ca2a80" />
    </api>
    <api id="M:System.ServiceModel.MessagePropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessagePropertyAttribute" ref="true" />
      </containers>
      <file name="76395cc5-c607-744d-8d1f-1a7cf36bda4d" />
    </api>
    <api id="P:System.ServiceModel.MessagePropertyAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessagePropertyAttribute" ref="true" />
      </containers>
      <file name="fbfa88ff-0283-a6be-1cd8-f5d9682d9662" />
    </api>
    <api id="T:System.ServiceModel.MessageQuerySet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageQuerySet" />
      <apidata name="MessageQuerySet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageQuerySet.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="01232897-b238-1c4c-31ce-d4043303889e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageQuerySet">
      <topicdata name="MessageQuerySet" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageQuerySet" />
      <apidata name="MessageQuerySet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageQuerySet.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
        <element api="M:System.Collections.Generic.Dictionary`2.Clear" />
        <element api="P:System.Collections.Generic.Dictionary`2.Comparer" />
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
        <element api="P:System.Collections.Generic.Dictionary`2.Count" />
        <element api="M:System.Collections.Generic.Dictionary`2.GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
        <element api="P:System.Collections.Generic.Dictionary`2.Keys" />
        <element api="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
        <element api="P:System.Collections.Generic.Dictionary`2.Values" />
        <element api="Overload:System.ServiceModel.MessageQuerySet.#ctor">
          <element api="M:System.ServiceModel.MessageQuerySet.#ctor" />
          <element api="M:System.ServiceModel.MessageQuerySet.#ctor(System.ServiceModel.Dispatcher.MessageQueryTable{System.String})" />
        </element>
        <element api="M:System.ServiceModel.MessageQuerySet.GetMessageQueryTable" />
        <element api="P:System.ServiceModel.MessageQuerySet.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" />
      </containers>
      <file name="da0314cd-5c29-77ec-e451-3cdb9152ea94" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageQuerySet">
      <topicdata name="MessageQuerySet" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageQuerySet" />
      <apidata name="MessageQuerySet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageQuerySet.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
        <element api="M:System.Collections.Generic.Dictionary`2.Clear" />
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
        <element api="M:System.Collections.Generic.Dictionary`2.GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
        <element api="M:System.ServiceModel.MessageQuerySet.GetMessageQueryTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" />
      </containers>
      <file name="c110bc39-d682-3c6c-15d9-830bf85d4d45" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageQuerySet">
      <topicdata name="MessageQuerySet" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageQuerySet" />
      <apidata name="MessageQuerySet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageQuerySet.#ctor" />
      <elements>
        <element api="P:System.Collections.Generic.Dictionary`2.Comparer" />
        <element api="P:System.Collections.Generic.Dictionary`2.Count" />
        <element api="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
        <element api="P:System.Collections.Generic.Dictionary`2.Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values" />
        <element api="P:System.Collections.Generic.Dictionary`2.Values" />
        <element api="P:System.ServiceModel.MessageQuerySet.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" />
      </containers>
      <file name="7d009f5a-4e55-eb3d-addb-b99125acb4f7" />
    </api>
    <api id="Overload:System.ServiceModel.MessageQuerySet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageQuerySet" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MessageQuerySet.#ctor" />
        <element api="M:System.ServiceModel.MessageQuerySet.#ctor(System.ServiceModel.Dispatcher.MessageQueryTable{System.String})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </containers>
      <file name="59d535d1-ffdd-3038-0314-af5cf255b3c8" />
    </api>
    <api id="M:System.ServiceModel.MessageQuerySet.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageQuerySet.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </containers>
      <file name="b08567ca-2983-3b56-b82d-539a00b4abb9" />
    </api>
    <api id="M:System.ServiceModel.MessageQuerySet.#ctor(System.ServiceModel.Dispatcher.MessageQueryTable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageQuerySet.#ctor" />
      <parameters>
        <parameter name="queryTable">
          <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </containers>
      <file name="96e4c787-9240-b02e-d0eb-89012f7b002d" />
    </api>
    <api id="M:System.ServiceModel.MessageQuerySet.GetMessageQueryTable">
      <topicdata group="api" />
      <apidata name="GetMessageQueryTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </containers>
      <file name="f336aa04-772e-d8a6-3b90-ec599ca7d958" />
    </api>
    <api id="P:System.ServiceModel.MessageQuerySet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="b66f29f4-59cb-aa57-5c8d-0af713bf0d63" />
    </api>
    <api id="T:System.ServiceModel.MessageSecurityOverHttp">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageSecurityOverHttp" />
      <apidata name="MessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="b3465122-3a75-f631-b692-f88793a64bf9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageSecurityOverHttp">
      <topicdata name="MessageSecurityOverHttp" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageSecurityOverHttp" />
      <apidata name="MessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" />
      </containers>
      <file name="5019c808-11a8-cbf4-5176-17b26f4c3f5f" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageSecurityOverHttp">
      <topicdata name="MessageSecurityOverHttp" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageSecurityOverHttp" />
      <apidata name="MessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" />
      </containers>
      <file name="aa24d8ca-1225-d7fc-2036-e7df55fb3b92" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageSecurityOverHttp">
      <topicdata name="MessageSecurityOverHttp" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageSecurityOverHttp" />
      <apidata name="MessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" />
      </containers>
      <file name="631c110b-7543-d913-c7fb-f50a2d07deff" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverHttp.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="110a8148-d796-bcf7-c817-e7489183dc4c" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite">
      <topicdata group="api" />
      <apidata name="AlgorithmSuite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AlgorithmSuite" />
      <setter name="set_AlgorithmSuite" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="65139ab3-70e3-846e-102a-315b6bcd06a9" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="240832f2-05f5-d881-f1fc-150675072913" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled">
      <topicdata group="api" />
      <apidata name="IsSecureConversationEnabled" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="8053d857-1819-8493-9e53-c4bac0709de2" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential">
      <topicdata group="api" />
      <apidata name="NegotiateServiceCredential" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NegotiateServiceCredential" />
      <setter name="set_NegotiateServiceCredential" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="4724136f-7b65-6fc4-4938-32cf496a2be0" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="ShouldSerializeAlgorithmSuite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f9a50725-b652-37ef-2b38-e7c6fd0422bc" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType">
      <topicdata group="api" />
      <apidata name="ShouldSerializeClientCredentialType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="531c3f77-7163-ec39-a8a2-b8cd5e826bc3" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <topicdata group="api" />
      <apidata name="ShouldSerializeNegotiateServiceCredential" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e216dc2d-a610-c9e3-05b1-ae59d010eaa2" />
    </api>
    <api id="T:System.ServiceModel.MessageSecurityOverMsmq">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageSecurityOverMsmq" />
      <apidata name="MessageSecurityOverMsmq" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f17bb28d-28a6-6a15-bde9-85678132fc52" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageSecurityOverMsmq">
      <topicdata name="MessageSecurityOverMsmq" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageSecurityOverMsmq" />
      <apidata name="MessageSecurityOverMsmq" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
        <element api="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" />
      </containers>
      <file name="5a205b7a-b7a5-008e-7feb-2028215ea322" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageSecurityOverMsmq">
      <topicdata name="MessageSecurityOverMsmq" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageSecurityOverMsmq" />
      <apidata name="MessageSecurityOverMsmq" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" />
      </containers>
      <file name="301cf726-84ed-36c3-8cfc-a139d0976203" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageSecurityOverMsmq">
      <topicdata name="MessageSecurityOverMsmq" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageSecurityOverMsmq" />
      <apidata name="MessageSecurityOverMsmq" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" />
      </containers>
      <file name="8cef3fbd-b830-054c-1bc4-71b289a86493" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" ref="true" />
      </containers>
      <file name="d401b983-f88a-6ae9-481d-d96cb4e258b9" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite">
      <topicdata group="api" />
      <apidata name="AlgorithmSuite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AlgorithmSuite" />
      <setter name="set_AlgorithmSuite" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Default</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2bece46a-eddc-0322-721b-b35c674ccc80" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
            <enumValue>
              <field name="Windows" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="529c42c6-a0a3-666c-9cc0-a6957f48abfa" />
    </api>
    <api id="T:System.ServiceModel.MessageSecurityOverTcp">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageSecurityOverTcp" />
      <apidata name="MessageSecurityOverTcp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverTcp.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bac37b34-dbb4-f094-f7f2-ef041b252c7c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageSecurityOverTcp">
      <topicdata name="MessageSecurityOverTcp" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageSecurityOverTcp" />
      <apidata name="MessageSecurityOverTcp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverTcp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageSecurityOverTcp.#ctor" />
        <element api="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" />
      </containers>
      <file name="9700bceb-e5f7-6dcb-cf81-6a72728b833c" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageSecurityOverTcp">
      <topicdata name="MessageSecurityOverTcp" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageSecurityOverTcp" />
      <apidata name="MessageSecurityOverTcp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverTcp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" />
      </containers>
      <file name="bd77f299-925d-a95f-0085-6afc53fca347" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageSecurityOverTcp">
      <topicdata name="MessageSecurityOverTcp" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageSecurityOverTcp" />
      <apidata name="MessageSecurityOverTcp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageSecurityOverTcp.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" />
      </containers>
      <file name="a25d0558-f429-825b-ffa4-e8d4802ef72a" />
    </api>
    <api id="M:System.ServiceModel.MessageSecurityOverTcp.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" ref="true" />
      </containers>
      <file name="c1e39bc3-8cbf-3560-fdb5-c6a0ce0af64b" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite">
      <topicdata group="api" />
      <apidata name="AlgorithmSuite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AlgorithmSuite" />
      <setter name="set_AlgorithmSuite" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Default</value>
          </argument>
        </attribute>
      </attributes>
      <file name="402b9048-4d02-8c73-9c17-8319c5d94596" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.MessageCredentialType" ref="false" />
            <enumValue>
              <field name="Windows" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ad2b2bf6-3177-b7c6-24f9-f11fbabfb42b" />
    </api>
    <api id="T:System.ServiceModel.MessageSecurityVersion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageSecurityVersion" />
      <apidata name="MessageSecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="243f15b2-4da8-4f31-9808-eced976c0086" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageSecurityVersion">
      <topicdata name="MessageSecurityVersion" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageSecurityVersion" />
      <apidata name="MessageSecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.Default" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.TrustVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" />
      </containers>
      <file name="c7798e4b-5081-b94b-c0e8-4d6c3d413049" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageSecurityVersion">
      <topicdata name="MessageSecurityVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageSecurityVersion" />
      <apidata name="MessageSecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" />
      </containers>
      <file name="55a4b1ee-aacc-9d6c-1ad7-92560d493572" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageSecurityVersion">
      <topicdata name="MessageSecurityVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageSecurityVersion" />
      <apidata name="MessageSecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.Default" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.TrustVersion" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11" />
        <element api="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" />
      </containers>
      <file name="7b35e4c5-9cf5-d00c-9955-bca2195a8620" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion">
      <topicdata group="api" />
      <apidata name="BasicSecurityProfileVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BasicSecurityProfileVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="c288a384-4d45-0c03-1f0c-e97ec6d0703e" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="3f101da2-d2c1-c32e-9613-e61c036af62e" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion">
      <topicdata group="api" />
      <apidata name="SecureConversationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecureConversationVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="d7d5f3c9-2795-5dbc-03be-87e87826fe34" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion">
      <topicdata group="api" />
      <apidata name="SecurityPolicyVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SecurityPolicyVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="a6880cf7-9d6e-765c-fbaf-ac728aab197d" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion">
      <topicdata group="api" />
      <apidata name="SecurityTokenVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenVersion" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="c1e43b79-c07a-180e-dedf-0c64ef6535cd" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion">
      <topicdata group="api" />
      <apidata name="SecurityVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="33542922-2d93-82f3-b449-6498a5f63258" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.TrustVersion">
      <topicdata group="api" />
      <apidata name="TrustVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrustVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="3662960b-1737-2ba8-d675-ac1c8d2b2479" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <topicdata group="api" />
      <apidata name="WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="fb977301-90f7-67b4-3964-4d35816474e0" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <topicdata group="api" />
      <apidata name="WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="5e2e70c0-4ad1-7c0d-1f1d-215f0b660917" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12">
      <topicdata group="api" />
      <apidata name="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="d73bee84-cdee-3df9-5069-8f1b3e7e58c1" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <topicdata group="api" />
      <apidata name="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="909031b3-31ca-504e-cde5-822ea067689e" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11">
      <topicdata group="api" />
      <apidata name="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="3aa66fec-8899-8e8f-4dc9-831c39403550" />
    </api>
    <api id="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <topicdata group="api" />
      <apidata name="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageSecurityVersion" ref="true" />
      </containers>
      <file name="50ce7df4-0ac1-9a69-5f97-972c2a01868f" />
    </api>
    <api id="T:System.ServiceModel.MsmqAuthenticationMode">
      <topicdata group="api" />
      <apidata name="MsmqAuthenticationMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.MsmqAuthenticationMode.None" />
        <element api="F:System.ServiceModel.MsmqAuthenticationMode.WindowsDomain" />
        <element api="F:System.ServiceModel.MsmqAuthenticationMode.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bac8f475-ed6d-1927-4971-050f3d8723ef" />
    </api>
    <api id="F:System.ServiceModel.MsmqAuthenticationMode.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </containers>
      <file name="bc608ae8-f911-ea2a-47fb-8aa4a76fa5d3" />
    </api>
    <api id="F:System.ServiceModel.MsmqAuthenticationMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </containers>
      <file name="67f4d54a-a9e1-2ac0-cb5b-861bea190e67" />
    </api>
    <api id="F:System.ServiceModel.MsmqAuthenticationMode.WindowsDomain">
      <topicdata group="api" notopic="" />
      <apidata name="WindowsDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </containers>
      <file name="2aff5d52-7520-ced1-9afe-70ef23fedd06" />
    </api>
    <api id="T:System.ServiceModel.MsmqBindingBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqBindingBase" />
      <apidata name="MsmqBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
          <type api="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="98b5f57d-1e30-a110-f19a-7c24ed4033d5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MsmqBindingBase">
      <topicdata name="MsmqBindingBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MsmqBindingBase" />
      <apidata name="MsmqBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MsmqBindingBase.#ctor" />
        <element api="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Durable" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
        <element api="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Scheme" />
        <element api="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
        <element api="Overload:System.ServiceModel.MsmqBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" />
      </containers>
      <file name="3857dca0-9782-837f-3b5c-277aa48875d4" />
    </api>
    <api id="Methods.T:System.ServiceModel.MsmqBindingBase">
      <topicdata name="MsmqBindingBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MsmqBindingBase" />
      <apidata name="MsmqBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.MsmqBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.MsmqBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" />
      </containers>
      <file name="c80ea627-b09f-f790-f6f9-195a7e69b938" />
    </api>
    <api id="Properties.T:System.ServiceModel.MsmqBindingBase">
      <topicdata name="MsmqBindingBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MsmqBindingBase" />
      <apidata name="MsmqBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Durable" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
        <element api="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Scheme" />
        <element api="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" />
      </containers>
      <file name="7a567ee3-b401-1db5-9dd9-8f33ea5b63fd" />
    </api>
    <api id="M:System.ServiceModel.MsmqBindingBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <file name="6266b0a9-efae-b519-4fcd-0dd66ed5c214" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue">
      <topicdata group="api" />
      <apidata name="CustomDeadLetterQueue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomDeadLetterQueue" />
      <setter name="set_CustomDeadLetterQueue" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="08d75070-74a2-4888-3c69-061504862bd0" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue">
      <topicdata group="api" />
      <apidata name="DeadLetterQueue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeadLetterQueue" />
      <setter name="set_DeadLetterQueue" />
      <returns>
        <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.DeadLetterQueue" ref="false" />
            <enumValue>
              <field name="System" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="83523e3a-135d-87cf-c16b-29af907bea17" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.Durable">
      <topicdata group="api" />
      <apidata name="Durable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Durable" />
      <setter name="set_Durable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="537d7775-9355-440f-0029-36c31644e783" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce">
      <topicdata group="api" />
      <apidata name="ExactlyOnce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExactlyOnce" />
      <setter name="set_ExactlyOnce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ab97cb14-f819-9d38-1ed4-d20550624312" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eb95672b-66b0-a012-d71b-0b997f4da429" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles">
      <topicdata group="api" />
      <apidata name="MaxRetryCycles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxRetryCycles" />
      <setter name="set_MaxRetryCycles" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5a4a682b-0f73-8f21-83bb-2fad3f093ddb" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled">
      <topicdata group="api" />
      <apidata name="ReceiveContextEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveContextEnabled" />
      <setter name="set_ReceiveContextEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4d2102c7-59f0-f95e-923b-250e653c55be" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling">
      <topicdata group="api" />
      <apidata name="ReceiveErrorHandling" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveErrorHandling" />
      <setter name="set_ReceiveErrorHandling" />
      <returns>
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
            <enumValue>
              <field name="Fault" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="38c6c0dd-ced0-8680-d0bf-e2beebdcaf02" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount">
      <topicdata group="api" />
      <apidata name="ReceiveRetryCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveRetryCount" />
      <setter name="set_ReceiveRetryCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>5</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3de6fd17-c59f-ab6e-03b6-7950cdebb84c" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay">
      <topicdata group="api" />
      <apidata name="RetryCycleDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RetryCycleDelay" />
      <setter name="set_RetryCycleDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.TimeSpan" ref="false" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>00:30:00</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b203e974-05cc-c0d8-bf41-23009a510ed1" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <file name="24aac9c9-ce7c-6112-7777-6f1954b12090" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <file name="1cd1f5b1-43e5-d5bb-4802-4b2248b389fa" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.TimeToLive">
      <topicdata group="api" />
      <apidata name="TimeToLive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeToLive" />
      <setter name="set_TimeToLive" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.TimeSpan" ref="false" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.00:00:00</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5e3fb9d8-36b9-a05b-3f9e-33389a1f25d2" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing">
      <topicdata group="api" />
      <apidata name="UseMsmqTracing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseMsmqTracing" />
      <setter name="set_UseMsmqTracing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43c2dee9-9f79-cec8-e9ac-ed798e2db6d2" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal">
      <topicdata group="api" />
      <apidata name="UseSourceJournal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSourceJournal" />
      <setter name="set_UseSourceJournal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="06cb9648-d29f-becd-4f59-0697806d65c9" />
    </api>
    <api id="P:System.ServiceModel.MsmqBindingBase.ValidityDuration">
      <topicdata group="api" />
      <apidata name="ValidityDuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidityDuration" />
      <setter name="set_ValidityDuration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.TimeSpan" ref="false" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>00:05:00</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0704342f-ac94-c97a-b094-8d335b66e508" />
    </api>
    <api id="T:System.ServiceModel.MsmqEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="MsmqEncryptionAlgorithm" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.MsmqEncryptionAlgorithm.RC4Stream" />
        <element api="F:System.ServiceModel.MsmqEncryptionAlgorithm.Aes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="4b62341d-2863-adc0-3710-1ad2ab0e31b5" />
    </api>
    <api id="F:System.ServiceModel.MsmqEncryptionAlgorithm.Aes">
      <topicdata group="api" notopic="" />
      <apidata name="Aes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
      </containers>
      <file name="6140d849-58fe-17f4-0546-f586e04c605b" />
    </api>
    <api id="F:System.ServiceModel.MsmqEncryptionAlgorithm.RC4Stream">
      <topicdata group="api" notopic="" />
      <apidata name="RC4Stream" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
      </containers>
      <file name="1849133c-9c7a-072e-c706-91391d5da4ad" />
    </api>
    <api id="T:System.ServiceModel.MsmqException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqException" />
      <apidata name="MsmqException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ea9f4f4f-8c5c-9851-b5f5-b571862bfe64" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MsmqException">
      <topicdata name="MsmqException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MsmqException" />
      <apidata name="MsmqException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
        <element api="Overload:System.ServiceModel.MsmqException.#ctor">
          <element api="M:System.ServiceModel.MsmqException.#ctor" />
          <element api="M:System.ServiceModel.MsmqException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" />
      </containers>
      <file name="c7aac71b-6b36-0dc1-2896-933412aea055" />
    </api>
    <api id="Methods.T:System.ServiceModel.MsmqException">
      <topicdata name="MsmqException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MsmqException" />
      <apidata name="MsmqException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" />
      </containers>
      <file name="d16192dc-0858-24a4-0cba-ce0416611bbf" />
    </api>
    <api id="Properties.T:System.ServiceModel.MsmqException">
      <topicdata name="MsmqException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MsmqException" />
      <apidata name="MsmqException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" />
      </containers>
      <file name="82ba9167-d5c2-588c-1e4c-265135b92af8" />
    </api>
    <api id="Events.T:System.ServiceModel.MsmqException">
      <topicdata name="MsmqException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.MsmqException" />
      <apidata name="MsmqException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" />
      </containers>
      <file name="c4f208e6-3dde-ebad-db49-acc2d4985318" />
    </api>
    <api id="Overload:System.ServiceModel.MsmqException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MsmqException.#ctor" />
        <element api="M:System.ServiceModel.MsmqException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="e2993ca6-003f-51bd-d539-bd2abd23c7ca" />
    </api>
    <api id="M:System.ServiceModel.MsmqException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="50b612b9-16a6-8d1e-5038-5cae2f625be0" />
    </api>
    <api id="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.MsmqException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="af9c2a7b-7b93-979e-6d3d-701f89415bf0" />
    </api>
    <api id="M:System.ServiceModel.MsmqException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="41725038-e2ed-06b7-bbd5-827dfe6fc40d" />
    </api>
    <api id="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="0c6be725-621e-cb4e-19e2-5e983e75ade1" />
    </api>
    <api id="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqException" ref="true" />
      </containers>
      <file name="a762f7cd-0edf-cdcd-d3d4-2c5b89778810" />
    </api>
    <api id="T:System.ServiceModel.MsmqPoisonMessageException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name="MsmqPoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="78300f5f-265b-b972-f247-f9544711dc82" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MsmqPoisonMessageException">
      <topicdata name="MsmqPoisonMessageException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name="MsmqPoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor">
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)" />
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)" />
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" />
      </containers>
      <file name="72d7bf60-fbb3-46e9-621c-af79a21b77a2" />
    </api>
    <api id="Methods.T:System.ServiceModel.MsmqPoisonMessageException">
      <topicdata name="MsmqPoisonMessageException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name="MsmqPoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" />
      </containers>
      <file name="7b057814-2c59-ed4b-3fd5-643788a9e4dd" />
    </api>
    <api id="Properties.T:System.ServiceModel.MsmqPoisonMessageException">
      <topicdata name="MsmqPoisonMessageException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name="MsmqPoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" />
      </containers>
      <file name="e997e842-d9ba-347a-a3db-8a0a9fa9286a" />
    </api>
    <api id="Events.T:System.ServiceModel.MsmqPoisonMessageException">
      <topicdata name="MsmqPoisonMessageException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name="MsmqPoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" />
      </containers>
      <file name="e52ac3c4-5335-eddc-d37a-0dfca36950e1" />
    </api>
    <api id="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqPoisonMessageException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="592fe45f-0cfe-42ad-3774-030bd1fa623d" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="77627755-fa2b-1923-72da-eb286766d5e2" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <parameters>
        <parameter name="messageLookupId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="70862903-498f-654f-a64f-c35d24695fa5" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <parameters>
        <parameter name="messageLookupId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="1d0bd15d-104f-0e0b-3df2-47377c9c4580" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="64f5b440-31e3-39c2-6795-82f2023ee41e" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="34d8247c-d149-4642-50a4-57baf0310844" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqPoisonMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="7f802db3-7000-5b36-5c7f-a179618aeba4" />
    </api>
    <api id="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="296fb59b-2dfa-bf81-cd2e-4d4a5cffa54d" />
    </api>
    <api id="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId">
      <topicdata group="api" />
      <apidata name="MessageLookupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageLookupId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
      </containers>
      <file name="3e054cfb-90de-6693-9bc2-2265ebef85c6" />
    </api>
    <api id="T:System.ServiceModel.MsmqSecureHashAlgorithm">
      <topicdata group="api" />
      <apidata name="MsmqSecureHashAlgorithm" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.MsmqSecureHashAlgorithm.MD5" />
        <element api="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha1" />
        <element api="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha256" />
        <element api="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha512" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="098339dd-0e63-a8bd-133c-2657e93ed173" />
    </api>
    <api id="F:System.ServiceModel.MsmqSecureHashAlgorithm.MD5">
      <topicdata group="api" notopic="" />
      <apidata name="MD5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </containers>
      <file name="15928f38-d7b6-c717-938b-682c69d45ab1" />
    </api>
    <api id="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha1">
      <topicdata group="api" notopic="" />
      <apidata name="Sha1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </containers>
      <file name="9b9df74f-55a9-0ff8-cd48-53f5acf1d539" />
    </api>
    <api id="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha256">
      <topicdata group="api" notopic="" />
      <apidata name="Sha256" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </containers>
      <file name="3631b086-327b-c4bb-8aa1-1440508e2c6d" />
    </api>
    <api id="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha512">
      <topicdata group="api" notopic="" />
      <apidata name="Sha512" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </containers>
      <file name="03ee320b-632c-5f00-7cc6-71a64d6e4364" />
    </api>
    <api id="T:System.ServiceModel.MsmqTransportSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqTransportSecurity" />
      <apidata name="MsmqTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bca5e938-4c71-5844-dbd3-03f102c5874e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MsmqTransportSecurity">
      <topicdata name="MsmqTransportSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MsmqTransportSecurity" />
      <apidata name="MsmqTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.MsmqTransportSecurity.#ctor">
          <element api="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
          <element api="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)" />
        </element>
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" />
      </containers>
      <file name="fa809c27-0223-8dd1-696e-175717f5cf95" />
    </api>
    <api id="Methods.T:System.ServiceModel.MsmqTransportSecurity">
      <topicdata name="MsmqTransportSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MsmqTransportSecurity" />
      <apidata name="MsmqTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" />
      </containers>
      <file name="c429ddf9-80c8-783d-14f6-18e9c85042c1" />
    </api>
    <api id="Properties.T:System.ServiceModel.MsmqTransportSecurity">
      <topicdata name="MsmqTransportSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MsmqTransportSecurity" />
      <apidata name="MsmqTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" />
        <element api="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" />
      </containers>
      <file name="82ba22f9-9395-e886-e872-b4db0e4c28f2" />
    </api>
    <api id="Overload:System.ServiceModel.MsmqTransportSecurity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MsmqTransportSecurity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MsmqTransportSecurity.#ctor" />
        <element api="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <file name="b0ad7d27-4b03-bf02-bcef-1306b88d2ae9" />
    </api>
    <api id="M:System.ServiceModel.MsmqTransportSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <file name="05e99997-e072-9dc5-fd53-20c89b4ac119" />
    </api>
    <api id="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MsmqTransportSecurity.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <file name="dea6f712-e8e5-f9aa-d5e5-e3438250b689" />
    </api>
    <api id="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode">
      <topicdata group="api" />
      <apidata name="MsmqAuthenticationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MsmqAuthenticationMode" />
      <setter name="set_MsmqAuthenticationMode" />
      <returns>
        <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.MsmqAuthenticationMode" ref="false" />
            <enumValue>
              <field name="WindowsDomain" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="10b5e2f3-6782-7753-7c8e-6b116f39098c" />
    </api>
    <api id="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="MsmqEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MsmqEncryptionAlgorithm" />
      <setter name="set_MsmqEncryptionAlgorithm" />
      <returns>
        <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.MsmqEncryptionAlgorithm" ref="false" />
            <enumValue>
              <field name="RC4Stream" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a0f59282-4fd4-1e2e-0886-338efd9e30fa" />
    </api>
    <api id="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel">
      <topicdata group="api" />
      <apidata name="MsmqProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MsmqProtectionLevel" />
      <setter name="set_MsmqProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
            <enumValue>
              <field name="Sign" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0a701681-16d5-f45d-ff6b-ac570e0c0627" />
    </api>
    <api id="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm">
      <topicdata group="api" />
      <apidata name="MsmqSecureHashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MsmqSecureHashAlgorithm" />
      <setter name="set_MsmqSecureHashAlgorithm" />
      <returns>
        <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.MsmqSecureHashAlgorithm" ref="false" />
            <enumValue>
              <field name="Sha1" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="98810525-24fe-5328-f2ce-943753c8afae" />
    </api>
    <api id="T:System.ServiceModel.NamedPipeTransportSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NamedPipeTransportSecurity" />
      <apidata name="NamedPipeTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1c1cd588-1e22-5b21-293b-679d60c30480" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NamedPipeTransportSecurity">
      <topicdata name="NamedPipeTransportSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NamedPipeTransportSecurity" />
      <apidata name="NamedPipeTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor" />
        <element api="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" />
      </containers>
      <file name="8bb73df6-b06a-57ea-3bc8-30715a27084a" />
    </api>
    <api id="Methods.T:System.ServiceModel.NamedPipeTransportSecurity">
      <topicdata name="NamedPipeTransportSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NamedPipeTransportSecurity" />
      <apidata name="NamedPipeTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" />
      </containers>
      <file name="eda393ab-02bc-dd47-3d66-511c6f5b1c72" />
    </api>
    <api id="Properties.T:System.ServiceModel.NamedPipeTransportSecurity">
      <topicdata name="NamedPipeTransportSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NamedPipeTransportSecurity" />
      <apidata name="NamedPipeTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" />
      </containers>
      <file name="90e9ecfa-0ca7-dc45-8353-803ecbb8cb84" />
    </api>
    <api id="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" ref="true" />
      </containers>
      <file name="fa7af5cc-3fd5-a79c-13b0-de8fd3d925d1" />
    </api>
    <api id="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
            <enumValue>
              <field name="EncryptAndSign" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="36fd0b57-1cad-01bf-b43d-837a59cada0e" />
    </api>
    <api id="T:System.ServiceModel.NetHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpBinding" />
      <apidata name="NetHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3aaf5c9d-3f62-033f-0167-08d13e3bb8ee" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetHttpBinding">
      <topicdata name="NetHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetHttpBinding" />
      <apidata name="NetHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.NetHttpBinding.#ctor">
          <element api="M:System.ServiceModel.NetHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
          <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.NetHttpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.NetHttpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetHttpBinding.Security" />
        <element api="M:System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.NetHttpBinding.WebSocketSettings" />
        <element api="Overload:System.ServiceModel.NetHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" />
      </containers>
      <file name="88a98101-653a-3a20-65bc-7f26298d27a6" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetHttpBinding">
      <topicdata name="NetHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetHttpBinding" />
      <apidata name="NetHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.NetHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.NetHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity" />
        <element api="Overload:System.ServiceModel.NetHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" />
      </containers>
      <file name="ad1d1c35-9658-68b7-1d6f-382c925e3217" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetHttpBinding">
      <topicdata name="NetHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetHttpBinding" />
      <apidata name="NetHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.NetHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.NetHttpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetHttpBinding.Security" />
        <element api="P:System.ServiceModel.NetHttpBinding.WebSocketSettings" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" />
      </containers>
      <file name="fd750c63-e8a0-99f0-37a2-39e9f40681d4" />
    </api>
    <api id="Overload:System.ServiceModel.NetHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
        <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="240fa355-da7a-c3aa-9438-0349a57ef6fb" />
    </api>
    <api id="Overload:System.ServiceModel.NetHttpBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="5b0aa6ff-39fc-dd87-2472-71ab3681f776" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="fedbe82f-d0a8-7dbd-c17b-c04660b74ab1" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="3df03f79-5e91-7bf0-23c2-d3e82fbc6c36" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="072afb70-6111-ad88-ffb8-a720c3eec073" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="8b0e1f0c-1122-addf-99bf-8ec3284d1b0a" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.NetHttpBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="3b645246-cb4b-a9a6-49f0-994538cf9228" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="494ac7c8-0326-07f6-56d7-8abb55840ead" />
    </api>
    <api id="P:System.ServiceModel.NetHttpBinding.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
            <enumValue>
              <field name="Binary" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cce49cb1-6bde-3987-0941-163578bd9b6c" />
    </api>
    <api id="P:System.ServiceModel.NetHttpBinding.ReliableSession">
      <topicdata group="api" />
      <apidata name="ReliableSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReliableSession" />
      <setter name="set_ReliableSession" />
      <returns>
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="91ea688f-43ba-31aa-2a14-da11b53e32be" />
    </api>
    <api id="P:System.ServiceModel.NetHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="04c8f170-39c0-b5e6-82ad-464a85880544" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReliableSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="edb55dc0-6524-9c1e-0a29-0e9e08d6fbb8" />
    </api>
    <api id="M:System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="030f19c1-76c8-7615-b8b3-65495a2827a8" />
    </api>
    <api id="P:System.ServiceModel.NetHttpBinding.WebSocketSettings">
      <topicdata group="api" />
      <apidata name="WebSocketSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WebSocketSettings" />
      <returns>
        <type api="T:System.ServiceModel.Channels.WebSocketTransportSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpBinding" ref="true" />
      </containers>
      <file name="561934a1-0122-1dae-32a1-a754aecdd744" />
    </api>
    <api id="T:System.ServiceModel.NetHttpMessageEncoding">
      <topicdata group="api" />
      <apidata name="NetHttpMessageEncoding" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.NetHttpMessageEncoding.Binary" />
        <element api="F:System.ServiceModel.NetHttpMessageEncoding.Text" />
        <element api="F:System.ServiceModel.NetHttpMessageEncoding.Mtom" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2fbefcb8-68ee-932e-21a0-7dbea058a5c8" />
    </api>
    <api id="F:System.ServiceModel.NetHttpMessageEncoding.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </containers>
      <file name="e4b18e7d-3bd9-591a-6cd9-18a27f694ed3" />
    </api>
    <api id="F:System.ServiceModel.NetHttpMessageEncoding.Mtom">
      <topicdata group="api" notopic="" />
      <apidata name="Mtom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </containers>
      <file name="273e64de-0843-539b-3715-f25f7f9b1a1b" />
    </api>
    <api id="F:System.ServiceModel.NetHttpMessageEncoding.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </containers>
      <file name="d1639706-c335-360f-9fc0-cd234debc74c" />
    </api>
    <api id="T:System.ServiceModel.NetHttpsBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpsBinding" />
      <apidata name="NetHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpsBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.HttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f1b67ad1-10ba-f4dd-47cc-9f71c4855f0c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetHttpsBinding">
      <topicdata name="NetHttpsBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetHttpsBinding" />
      <apidata name="NetHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpsBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.NetHttpsBinding.#ctor">
          <element api="M:System.ServiceModel.NetHttpsBinding.#ctor" />
          <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)" />
          <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.NetHttpsBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetHttpsBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.NetHttpsBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetHttpsBinding.Security" />
        <element api="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.NetHttpsBinding.WebSocketSettings" />
        <element api="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpsBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpsBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" />
      </containers>
      <file name="771a8c5d-e090-76e8-308d-f7722c3aa338" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetHttpsBinding">
      <topicdata name="NetHttpsBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetHttpsBinding" />
      <apidata name="NetHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpsBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.NetHttpsBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeSecurity" />
        <element api="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpsBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetHttpsBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" />
      </containers>
      <file name="4a7592f1-ac20-f310-55dd-1cd3606306f8" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetHttpsBinding">
      <topicdata name="NetHttpsBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetHttpsBinding" />
      <apidata name="NetHttpsBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetHttpsBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.HttpBindingBase.AllowCookies" />
        <element api="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.HttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxBufferSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.HttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.HttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.HttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.HttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.HttpBindingBase.TransferMode" />
        <element api="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.NetHttpsBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.NetHttpsBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetHttpsBinding.Security" />
        <element api="P:System.ServiceModel.NetHttpsBinding.WebSocketSettings" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" />
      </containers>
      <file name="2e2308cd-f261-e79f-7d7d-038c206239ef" />
    </api>
    <api id="Overload:System.ServiceModel.NetHttpsBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpsBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetHttpsBinding.#ctor" />
        <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)" />
        <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="158dc38b-ada5-603f-79c3-2d41406fd8e6" />
    </api>
    <api id="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetHttpsBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="ca5738b4-fb34-32ff-98e1-2340d0470913" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpsBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="5bc46b05-6c15-4972-ff00-40b484c0ff70" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpsBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="8d5e61c3-3f61-d2eb-eeca-7633a9f02d25" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpsBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpsSecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="e6e29770-21d4-b3f5-bde2-3243a9b6798c" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetHttpsBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="3324c02a-bc39-1d23-a1ab-7ca5bf5bbac0" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.NetHttpsBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="a9d88675-0389-7263-409f-298a0d4ce538" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="f4647fae-fafe-b86a-90ae-e799acd475b9" />
    </api>
    <api id="P:System.ServiceModel.NetHttpsBinding.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.NetHttpMessageEncoding" ref="false" />
            <enumValue>
              <field name="Binary" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f822d943-4af8-7108-e403-c6e35594bdc0" />
    </api>
    <api id="P:System.ServiceModel.NetHttpsBinding.ReliableSession">
      <topicdata group="api" />
      <apidata name="ReliableSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReliableSession" />
      <setter name="set_ReliableSession" />
      <returns>
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="ce307aa5-c600-b866-9c49-c848008dc491" />
    </api>
    <api id="P:System.ServiceModel.NetHttpsBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpsSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="3b63cc92-84bd-ee2a-c316-25076cfa5843" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeReliableSession">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReliableSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5bc2eb42-7f79-1d3a-336f-d45cba4c2f5f" />
    </api>
    <api id="M:System.ServiceModel.NetHttpsBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="acc16fc1-249f-9074-7e05-ab8710375676" />
    </api>
    <api id="P:System.ServiceModel.NetHttpsBinding.WebSocketSettings">
      <topicdata group="api" />
      <apidata name="WebSocketSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WebSocketSettings" />
      <returns>
        <type api="T:System.ServiceModel.Channels.WebSocketTransportSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetHttpsBinding" ref="true" />
      </containers>
      <file name="fec8faf4-e9f5-d1e9-78be-ad99e95cff2a" />
    </api>
    <api id="T:System.ServiceModel.NetMsmqBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetMsmqBinding" />
      <apidata name="NetMsmqBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MsmqBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c90a77d1-0303-f900-1ad0-adae2c007d45" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetMsmqBinding">
      <topicdata name="NetMsmqBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetMsmqBinding" />
      <apidata name="NetMsmqBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Durable" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
        <element api="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Scheme" />
        <element api="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
        <element api="Overload:System.ServiceModel.NetMsmqBinding.#ctor">
          <element api="M:System.ServiceModel.NetMsmqBinding.#ctor" />
          <element api="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)" />
          <element api="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol" />
        <element api="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetMsmqBinding.Security" />
        <element api="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory" />
        <element api="Overload:System.ServiceModel.NetMsmqBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" />
      </containers>
      <file name="aa037b50-b72e-167a-d82e-8b20ee5cdbdb" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetMsmqBinding">
      <topicdata name="NetMsmqBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetMsmqBinding" />
      <apidata name="NetMsmqBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity" />
        <element api="Overload:System.ServiceModel.NetMsmqBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetMsmqBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" />
      </containers>
      <file name="5f232926-58da-8922-8a6f-f3636fbb2a81" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetMsmqBinding">
      <topicdata name="NetMsmqBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetMsmqBinding" />
      <apidata name="NetMsmqBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Durable" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
        <element api="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
        <element api="P:System.ServiceModel.MsmqBindingBase.Scheme" />
        <element api="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
        <element api="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
        <element api="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
        <element api="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol" />
        <element api="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetMsmqBinding.Security" />
        <element api="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" />
      </containers>
      <file name="08346847-5346-8693-ce9c-11aecdc77bac" />
    </api>
    <api id="Overload:System.ServiceModel.NetMsmqBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetMsmqBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetMsmqBinding.#ctor" />
        <element api="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)" />
        <element api="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="33a15a43-8731-14c2-0d3b-087f41ffc8cc" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetMsmqBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="54bf46ad-edae-0e0f-f813-04199c49be2f" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetMsmqBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="4f3de6e0-6c04-ad3b-47cf-402bb52db8d6" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetMsmqBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="b8f17ae9-6971-1f74-a54a-b92eb419b2c2" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="5cacbc3d-8913-ef2e-8d05-e2c95097e72a" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="c2bfb5fa-d2a9-f33e-3d4e-15b4c890eacf" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="56d55cab-64ec-3ee4-26ef-c2df2e47922b" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol">
      <topicdata group="api" />
      <apidata name="QueueTransferProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_QueueTransferProtocol" />
      <setter name="set_QueueTransferProtocol" />
      <returns>
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
            <enumValue>
              <field name="Native" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="692ee7c0-071b-b7c4-6c09-c4fea28c3d9f" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="a3aa9438-d49b-5717-6bce-5a5562b4d3b7" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <file name="59249284-41d1-8eb6-9a38-4adc81912621" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1f4dbea8-48f0-73d8-f2ca-a2503ea5e811" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="46070fd4-09cc-32c8-68fa-817183eede1f" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory">
      <topicdata group="api" />
      <apidata name="UseActiveDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseActiveDirectory" />
      <setter name="set_UseActiveDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fbf1a293-98d7-5aa6-0f38-f5430d9def9b" />
    </api>
    <api id="T:System.ServiceModel.NetMsmqSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetMsmqSecurity" />
      <apidata name="NetMsmqSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1dc0281d-1f3d-5265-dc09-8f235cc8a6ce" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetMsmqSecurity">
      <topicdata name="NetMsmqSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetMsmqSecurity" />
      <apidata name="NetMsmqSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetMsmqSecurity.#ctor" />
        <element api="P:System.ServiceModel.NetMsmqSecurity.Message" />
        <element api="P:System.ServiceModel.NetMsmqSecurity.Mode" />
        <element api="P:System.ServiceModel.NetMsmqSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" />
      </containers>
      <file name="0208d4f5-5aab-c426-e273-c077a78a78e6" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetMsmqSecurity">
      <topicdata name="NetMsmqSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetMsmqSecurity" />
      <apidata name="NetMsmqSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" />
      </containers>
      <file name="b5493d81-b481-64e9-f157-5097a864b360" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetMsmqSecurity">
      <topicdata name="NetMsmqSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetMsmqSecurity" />
      <apidata name="NetMsmqSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetMsmqSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetMsmqSecurity.Message" />
        <element api="P:System.ServiceModel.NetMsmqSecurity.Mode" />
        <element api="P:System.ServiceModel.NetMsmqSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" />
      </containers>
      <file name="0ac832e7-bf42-fb77-0cd0-7c273f3ef05b" />
    </api>
    <api id="M:System.ServiceModel.NetMsmqSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" ref="true" />
      </containers>
      <file name="7f18348b-8cd5-85cd-9613-55da6c894a86" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityOverMsmq" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" ref="true" />
      </containers>
      <file name="f1b7b1bf-f292-4498-be90-efce0a3972b7" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
            <enumValue>
              <field name="Transport" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2bd66be2-f9d9-f4e6-9330-9211988fb895" />
    </api>
    <api id="P:System.ServiceModel.NetMsmqSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.MsmqTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurity" ref="true" />
      </containers>
      <file name="206d07cc-f8d7-23b0-565f-f6dc2cc55793" />
    </api>
    <api id="T:System.ServiceModel.NetMsmqSecurityMode">
      <topicdata group="api" />
      <apidata name="NetMsmqSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.NetMsmqSecurityMode.None" />
        <element api="F:System.ServiceModel.NetMsmqSecurityMode.Transport" />
        <element api="F:System.ServiceModel.NetMsmqSecurityMode.Message" />
        <element api="F:System.ServiceModel.NetMsmqSecurityMode.Both" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8e1629e2-92da-1f1c-cd94-11963385192d" />
    </api>
    <api id="F:System.ServiceModel.NetMsmqSecurityMode.Both">
      <topicdata group="api" notopic="" />
      <apidata name="Both" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </containers>
      <file name="9ee630bf-b7ab-13cc-beb0-a9cdafa3ea8b" />
    </api>
    <api id="F:System.ServiceModel.NetMsmqSecurityMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </containers>
      <file name="61441b01-833d-8680-8a42-16218e60ba48" />
    </api>
    <api id="F:System.ServiceModel.NetMsmqSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </containers>
      <file name="911682d2-495c-ba85-0a42-e3577f1a6317" />
    </api>
    <api id="F:System.ServiceModel.NetMsmqSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetMsmqSecurityMode" ref="false" />
      </containers>
      <file name="38bb3f59-06c1-da4f-197a-65f1d743fbc2" />
    </api>
    <api id="T:System.ServiceModel.NetNamedPipeBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetNamedPipeBinding" />
      <apidata name="NetNamedPipeBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="7a199873-7f60-da02-bc5f-87c0789462dc" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetNamedPipeBinding">
      <topicdata name="NetNamedPipeBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetNamedPipeBinding" />
      <apidata name="NetNamedPipeBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.#ctor">
          <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
          <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)" />
          <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.Scheme" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.Security" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransferMode" />
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" />
      </containers>
      <file name="6664d5de-71b2-f0a7-c6b8-283bc5ddb08d" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetNamedPipeBinding">
      <topicdata name="NetNamedPipeBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetNamedPipeBinding" />
      <apidata name="NetNamedPipeBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol" />
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetNamedPipeBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" />
      </containers>
      <file name="d0d9be45-4574-c767-76a0-6f695afcbb94" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetNamedPipeBinding">
      <topicdata name="NetNamedPipeBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetNamedPipeBinding" />
      <apidata name="NetNamedPipeBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.Scheme" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.Security" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetNamedPipeBinding.TransferMode" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" />
      </containers>
      <file name="b7401a39-1ed3-6cd7-8dfb-b679d29d2f30" />
    </api>
    <api id="Overload:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetNamedPipeBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)" />
        <element api="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="0ec8b2df-b024-14ef-5844-731996c34d13" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="f9164def-ebde-c02d-7d57-65758e73de30" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="577b7ed1-9c05-1a22-c845-73cc27e1629e" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="53594a37-a361-2d28-bc3e-fe14de568478" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="2cb951a4-25d1-0b10-39ca-f7dce70a42bd" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="2fc83168-155a-a7aa-7f5a-87a6e9e03371" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1d72ad90-5515-17a3-c0b9-526fed853755" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6d3c911b-d7bb-e69e-8ee4-654589f36a74" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize">
      <topicdata group="api" />
      <apidata name="MaxBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferSize" />
      <setter name="set_MaxBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8730d68e-3c97-401b-d1c2-93086063a06e" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections">
      <topicdata group="api" />
      <apidata name="MaxConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConnections" />
      <setter name="set_MaxConnections" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="38815289-09be-ad55-2474-af6328f6ead1" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1e1ff7d0-e509-cdc8-ba00-367d2bfda90d" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="133e02da-b3e1-6352-8d26-f8c04b363863" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="8bf56a9c-2294-5b5f-0245-6231fdb37ee0" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="9823634e-ae09-7509-ec4f-7fcece0a2e07" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMaxConnections" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b5d16850-1907-b6ee-18cb-4f19e2718eba" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fb3c5e84-42f9-bdef-9d85-2be0edfe6610" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="85121b34-6f1e-d6db-2472-d7495383ce90" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransactionProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="bb668092-cecc-b418-c386-49bdca690322" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="173a9c93-5faa-47e6-2ca4-5a507507ab88" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow">
      <topicdata group="api" />
      <apidata name="TransactionFlow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionFlow" />
      <setter name="set_TransactionFlow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c21ad0c-053e-5476-b0d1-2dda9c4a5459" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol">
      <topicdata group="api" />
      <apidata name="TransactionProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionProtocol" />
      <setter name="set_TransactionProtocol" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <file name="e3102ecf-2b34-9ab2-ca6b-c727d7fe49bc" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeBinding.TransferMode">
      <topicdata group="api" />
      <apidata name="TransferMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferMode" />
      <setter name="set_TransferMode" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransferMode" ref="false" />
            <enumValue>
              <field name="Buffered" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="74a51b49-7228-79ca-8655-0f195b174456" />
    </api>
    <api id="T:System.ServiceModel.NetNamedPipeSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetNamedPipeSecurity" />
      <apidata name="NetNamedPipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a4c6d42f-ce19-8481-93f4-a9d6e8b00065" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetNamedPipeSecurity">
      <topicdata name="NetNamedPipeSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetNamedPipeSecurity" />
      <apidata name="NetNamedPipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetNamedPipeSecurity.#ctor" />
        <element api="P:System.ServiceModel.NetNamedPipeSecurity.Mode" />
        <element api="M:System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.NetNamedPipeSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" />
      </containers>
      <file name="1e2d1545-4586-ac0a-17a1-238b5a2ca29e" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetNamedPipeSecurity">
      <topicdata name="NetNamedPipeSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetNamedPipeSecurity" />
      <apidata name="NetNamedPipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" />
      </containers>
      <file name="ee81192d-36b3-4a9d-d712-65e3ebd912a4" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetNamedPipeSecurity">
      <topicdata name="NetNamedPipeSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetNamedPipeSecurity" />
      <apidata name="NetNamedPipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetNamedPipeSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetNamedPipeSecurity.Mode" />
        <element api="P:System.ServiceModel.NetNamedPipeSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" />
      </containers>
      <file name="7858c65a-9138-8bf5-9f2f-8abc9a5a7029" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" ref="true" />
      </containers>
      <file name="965f8450-707e-2aa7-5adf-0cc6607a5d85" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
            <enumValue>
              <field name="Transport" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2b4dcb79-5777-ffad-c094-ead12f5ce715" />
    </api>
    <api id="M:System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="93b458b6-f6bf-9772-5fa2-141a1969f40d" />
    </api>
    <api id="P:System.ServiceModel.NetNamedPipeSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.NamedPipeTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurity" ref="true" />
      </containers>
      <file name="9acac110-5d35-0cd6-24fe-ed4117f9840b" />
    </api>
    <api id="T:System.ServiceModel.NetNamedPipeSecurityMode">
      <topicdata group="api" />
      <apidata name="NetNamedPipeSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.NetNamedPipeSecurityMode.None" />
        <element api="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="909d3280-46bd-0ac2-24ae-08b437642c0f" />
    </api>
    <api id="F:System.ServiceModel.NetNamedPipeSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
      </containers>
      <file name="218fa1c8-b2d2-2bc0-22b2-e921f5dc41d7" />
    </api>
    <api id="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetNamedPipeSecurityMode" ref="false" />
      </containers>
      <file name="3e330f33-e78b-edfa-993c-819448021323" />
    </api>
    <api id="T:System.ServiceModel.NetPeerTcpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetPeerTcpBinding" />
      <apidata name="NetPeerTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PeerChannel feature is obsolete and will be removed in the future.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9ff315e3-1cf1-b4a0-224e-5d42a240d4c8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetPeerTcpBinding">
      <topicdata name="NetPeerTcpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetPeerTcpBinding" />
      <apidata name="NetPeerTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.#ctor">
          <element api="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
          <element api="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Port" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Resolver" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Security" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" />
      </containers>
      <file name="a1c8d9e8-5031-1777-ecc7-83f941f287c3" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetPeerTcpBinding">
      <topicdata name="NetPeerTcpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetPeerTcpBinding" />
      <apidata name="NetPeerTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity" />
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetPeerTcpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" />
      </containers>
      <file name="e4dbe336-5072-4a00-fefd-7a95311e08d0" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetPeerTcpBinding">
      <topicdata name="NetPeerTcpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetPeerTcpBinding" />
      <apidata name="NetPeerTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Port" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Resolver" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.Security" />
        <element api="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" />
      </containers>
      <file name="f6e10cca-e5c9-c24a-e078-c8625863259d" />
    </api>
    <api id="Overload:System.ServiceModel.NetPeerTcpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetPeerTcpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
        <element api="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="af6b9bcc-d15d-8c48-411d-b3d178de82d4" />
    </api>
    <api id="M:System.ServiceModel.NetPeerTcpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="cb41f6ab-80e7-2153-43dc-4432e63feac0" />
    </api>
    <api id="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="e909b24b-d630-079f-075c-df1d418a81b5" />
    </api>
    <api id="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="31b99d5a-6a78-e0a2-d52a-8108e75e66ba" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="9e2de87d-c68b-f0e6-8199-d74b1ddb8f29" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable">
      <topicdata group="api" />
      <apidata name="IsPnrpAvailable" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPnrpAvailable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="1ecab428-605e-c19f-d64f-de156ea84d4c" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress">
      <topicdata group="api" />
      <apidata name="ListenIPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListenIPAddress" />
      <setter name="set_ListenIPAddress" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="9163b815-e65d-6c29-83d4-647aaca4cd50" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a4fd177c-9d53-07df-fb41-5df3623575d2" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="421067c5-d20d-6817-5c6f-018117b06b18" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3885fb89-6e70-81b3-8527-b91798ae1b58" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="16a8d569-b0cc-1bc0-d120-d9a6253ab3cb" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.Resolver">
      <topicdata group="api" />
      <apidata name="Resolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Resolver" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="f5b8cdee-bdc8-0ad2-4875-db45ed7bb1f7" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="00fe84e6-c081-cab9-065c-7eb8fef47a35" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="ca0ee8b7-d968-b801-4ce2-0e7e8353a42b" />
    </api>
    <api id="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d2d7401d-3184-fccf-babf-52b55b655c8d" />
    </api>
    <api id="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5f87da8c-e215-31d8-f0db-06b089c49bdd" />
    </api>
    <api id="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetPeerTcpBinding" ref="true" />
      </containers>
      <file name="bf7887f2-36ea-e101-3bab-e653fde217b9" />
    </api>
    <api id="T:System.ServiceModel.NetTcpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetTcpBinding" />
      <apidata name="NetTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="d3cbdf06-061a-1a5c-7f43-8d5ab1f475ac" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetTcpBinding">
      <topicdata name="NetTcpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetTcpBinding" />
      <apidata name="NetTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.NetTcpBinding.#ctor">
          <element api="M:System.ServiceModel.NetTcpBinding.#ctor" />
          <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)" />
          <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.NetTcpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetTcpBinding.ListenBacklog" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetTcpBinding.Security" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransferMode" />
        <element api="Overload:System.ServiceModel.NetTcpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" />
      </containers>
      <file name="6e1af775-4baa-d919-30be-d382a17011a5" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetTcpBinding">
      <topicdata name="NetTcpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetTcpBinding" />
      <apidata name="NetTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetTcpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol" />
        <element api="Overload:System.ServiceModel.NetTcpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" />
      </containers>
      <file name="79bfd46b-d692-e3ac-0736-38cf1075e28c" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetTcpBinding">
      <topicdata name="NetTcpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetTcpBinding" />
      <apidata name="NetTcpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetTcpBinding.ListenBacklog" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetTcpBinding.Security" />
        <element api="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransferMode" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" />
      </containers>
      <file name="a7fed876-3501-0676-cb9f-8faa2911d465" />
    </api>
    <api id="Overload:System.ServiceModel.NetTcpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetTcpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetTcpBinding.#ctor" />
        <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)" />
        <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="d6903d9b-e229-7a03-9b63-27826abcbace" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="86b50b86-e4d6-87b5-9b8a-534484ecf73d" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="115dfa38-cab9-87cc-bd00-ac872129f64b" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="a6e07dde-a3bf-8f13-637b-9a844963bb77" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="f70f6696-1510-3206-1d29-3ebbf6a24471" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="9ddf8d69-e875-adda-4c77-cd7cdf533af0" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="4868604a-6dda-21ce-6792-226b46e647d6" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="99b8c33b-2899-8a0a-7037-d1fe1c4fd534" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.ListenBacklog">
      <topicdata group="api" />
      <apidata name="ListenBacklog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListenBacklog" />
      <setter name="set_ListenBacklog" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="1bed5ec4-32a5-a166-3460-6c042805ca19" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e4317688-dc24-0c65-3525-120524250990" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.MaxBufferSize">
      <topicdata group="api" />
      <apidata name="MaxBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferSize" />
      <setter name="set_MaxBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9d082fc9-b3aa-e594-2a5c-4cc8ac54740e" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.MaxConnections">
      <topicdata group="api" />
      <apidata name="MaxConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConnections" />
      <setter name="set_MaxConnections" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="95b3a289-1e9e-d07d-82e8-abd029e524a2" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1e2dfb91-1491-d82b-45f3-1e9404aaebe8" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled">
      <topicdata group="api" />
      <apidata name="PortSharingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PortSharingEnabled" />
      <setter name="set_PortSharingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c93bfef5-8167-dfa1-d919-50096f49f7e8" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="a476e019-2156-410f-cdb4-ee7459312146" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.ReliableSession">
      <topicdata group="api" />
      <apidata name="ReliableSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReliableSession" />
      <setter name="set_ReliableSession" />
      <returns>
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="d2288a01-c985-d8e2-e095-ca6985a1417c" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="92263b11-843c-417f-5d8c-bd244aa47987" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.NetTcpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="3a3da8c3-ea24-b179-dc6f-f4f906c69edd" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog">
      <topicdata group="api" />
      <apidata name="ShouldSerializeListenBacklog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3370e1de-d2f6-2e84-25d6-63b4936ab1d8" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMaxConnections" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="842c66f4-8428-6d3f-1af8-7847ae8756aa" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="583aa3a8-21d6-f4c6-30ac-f9333f6bb30d" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReliableSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="101f49ff-4182-70f2-c591-ff2735479f35" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8550a176-2eee-6e89-5dd8-c5a3119c258e" />
    </api>
    <api id="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransactionProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b9e4e6f3-840d-5a37-a1bf-2bbc0f187386" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="f8d5a6c9-7ba5-a2b9-02ec-919ea39051db" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.TransactionFlow">
      <topicdata group="api" />
      <apidata name="TransactionFlow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionFlow" />
      <setter name="set_TransactionFlow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6c9a25bb-b1b5-670c-f1d5-755c4c3ad977" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.TransactionProtocol">
      <topicdata group="api" />
      <apidata name="TransactionProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionProtocol" />
      <setter name="set_TransactionProtocol" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <file name="737d73e4-48fc-b4ae-d180-bf8d1ed0c21f" />
    </api>
    <api id="P:System.ServiceModel.NetTcpBinding.TransferMode">
      <topicdata group="api" />
      <apidata name="TransferMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferMode" />
      <setter name="set_TransferMode" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransferMode" ref="false" />
            <enumValue>
              <field name="Buffered" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="03530262-23d5-2af1-661f-445c6a5ed3a3" />
    </api>
    <api id="T:System.ServiceModel.NetTcpContextBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetTcpContextBinding" />
      <apidata name="NetTcpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="418587c0-2754-2f9a-d7d1-225932190259" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetTcpContextBinding">
      <topicdata name="NetTcpContextBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetTcpContextBinding" />
      <apidata name="NetTcpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetTcpBinding.ListenBacklog" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetTcpBinding.Security" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransferMode" />
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.#ctor">
          <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
          <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode)" />
          <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.NetTcpContextBinding.ClientCallbackAddress" />
        <element api="P:System.ServiceModel.NetTcpContextBinding.ContextManagementEnabled" />
        <element api="P:System.ServiceModel.NetTcpContextBinding.ContextProtectionLevel" />
        <element api="M:System.ServiceModel.NetTcpContextBinding.CreateBindingElements" />
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" />
      </containers>
      <file name="f7a3085e-adec-9d7b-a27f-7fa31db0ca7a" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetTcpContextBinding">
      <topicdata name="NetTcpContextBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetTcpContextBinding" />
      <apidata name="NetTcpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol" />
        <element api="M:System.ServiceModel.NetTcpContextBinding.CreateBindingElements" />
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.NetTcpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" />
      </containers>
      <file name="6d35f93e-60f1-33e9-f0cd-fe86a0612a44" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetTcpContextBinding">
      <topicdata name="NetTcpContextBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetTcpContextBinding" />
      <apidata name="NetTcpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.NetTcpBinding.ListenBacklog" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxConnections" />
        <element api="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.NetTcpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.NetTcpBinding.Scheme" />
        <element api="P:System.ServiceModel.NetTcpBinding.Security" />
        <element api="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" />
        <element api="P:System.ServiceModel.NetTcpBinding.TransferMode" />
        <element api="P:System.ServiceModel.NetTcpContextBinding.ClientCallbackAddress" />
        <element api="P:System.ServiceModel.NetTcpContextBinding.ContextManagementEnabled" />
        <element api="P:System.ServiceModel.NetTcpContextBinding.ContextProtectionLevel" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" />
      </containers>
      <file name="ec5b77ba-7b9b-a2c1-5d99-1db2d6f403d5" />
    </api>
    <api id="Overload:System.ServiceModel.NetTcpContextBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.NetTcpContextBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor" />
        <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode)" />
        <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="7e8fa273-356e-f8ed-6954-d33b44246ecf" />
    </api>
    <api id="M:System.ServiceModel.NetTcpContextBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="6340f500-b1b1-ac6d-3155-bfa5ecc8753d" />
    </api>
    <api id="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="7e2e0e26-7956-50b6-ee50-12d68476b532" />
    </api>
    <api id="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="20bd1388-87eb-ff28-e349-8fb36c431b70" />
    </api>
    <api id="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.NetTcpContextBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="0327d68c-6194-0774-98e9-bc3c5ab2b062" />
    </api>
    <api id="P:System.ServiceModel.NetTcpContextBinding.ClientCallbackAddress">
      <topicdata group="api" />
      <apidata name="ClientCallbackAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCallbackAddress" />
      <setter name="set_ClientCallbackAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="f09bb465-6cf9-17db-0fd1-afd6b69092b8" />
    </api>
    <api id="P:System.ServiceModel.NetTcpContextBinding.ContextManagementEnabled">
      <topicdata group="api" />
      <apidata name="ContextManagementEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextManagementEnabled" />
      <setter name="set_ContextManagementEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c45b9b09-7b94-5789-6c1a-68ff6f69ea0f" />
    </api>
    <api id="P:System.ServiceModel.NetTcpContextBinding.ContextProtectionLevel">
      <topicdata group="api" />
      <apidata name="ContextProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextProtectionLevel" />
      <setter name="set_ContextProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
            <enumValue>
              <field name="Sign" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3c7e5315-c83c-e3ed-ff4d-21eeded12981" />
    </api>
    <api id="M:System.ServiceModel.NetTcpContextBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
          <type api="T:System.ServiceModel.NetTcpBinding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpContextBinding" ref="true" />
      </containers>
      <file name="823f58ef-7554-80a8-e49a-bafb31743b51" />
    </api>
    <api id="T:System.ServiceModel.NetTcpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NetTcpSecurity" />
      <apidata name="NetTcpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1933c9e9-5911-883f-4cf5-afe3ff83c858" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NetTcpSecurity">
      <topicdata name="NetTcpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NetTcpSecurity" />
      <apidata name="NetTcpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.NetTcpSecurity.#ctor" />
        <element api="P:System.ServiceModel.NetTcpSecurity.Message" />
        <element api="P:System.ServiceModel.NetTcpSecurity.Mode" />
        <element api="P:System.ServiceModel.NetTcpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" />
      </containers>
      <file name="1fc05d12-d93b-6048-6a2e-0750f9ec6897" />
    </api>
    <api id="Methods.T:System.ServiceModel.NetTcpSecurity">
      <topicdata name="NetTcpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NetTcpSecurity" />
      <apidata name="NetTcpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" />
      </containers>
      <file name="1e2a8ba2-7318-5eb5-25c9-b9ac9170a1f2" />
    </api>
    <api id="Properties.T:System.ServiceModel.NetTcpSecurity">
      <topicdata name="NetTcpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NetTcpSecurity" />
      <apidata name="NetTcpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NetTcpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.NetTcpSecurity.Message" />
        <element api="P:System.ServiceModel.NetTcpSecurity.Mode" />
        <element api="P:System.ServiceModel.NetTcpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" />
      </containers>
      <file name="0d54dbf5-ba02-1c27-08c8-0fa0ab9f5bf1" />
    </api>
    <api id="M:System.ServiceModel.NetTcpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" ref="true" />
      </containers>
      <file name="f3ae2fd0-9315-986c-b33d-5445ae63f8c1" />
    </api>
    <api id="P:System.ServiceModel.NetTcpSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityOverTcp" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" ref="true" />
      </containers>
      <file name="2f28e736-ad0b-a096-ac7e-90306012a039" />
    </api>
    <api id="P:System.ServiceModel.NetTcpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.SecurityMode" ref="false" />
            <enumValue>
              <field name="Transport" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e43c5d68-648a-159f-83eb-94354ebf5999" />
    </api>
    <api id="P:System.ServiceModel.NetTcpSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NetTcpSecurity" ref="true" />
      </containers>
      <file name="3e0896d4-1bf2-e36a-ece4-7f8759241f1e" />
    </api>
    <api id="T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      <apidata name="NonDualMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ad425db3-a9ec-13c3-20cb-c77a2e8e19bd" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <topicdata name="NonDualMessageSecurityOverHttp" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      <apidata name="NonDualMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
        <element api="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor" />
        <element api="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      </containers>
      <file name="8c732313-46bd-1045-962c-d08867f5ee64" />
    </api>
    <api id="Methods.T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <topicdata name="NonDualMessageSecurityOverHttp" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      <apidata name="NonDualMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType" />
        <element api="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      </containers>
      <file name="b331ce6b-507a-4def-d44f-8e912ccb50b3" />
    </api>
    <api id="Properties.T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <topicdata name="NonDualMessageSecurityOverHttp" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      <apidata name="NonDualMessageSecurityOverHttp" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
        <element api="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
        <element api="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" />
      </containers>
      <file name="ea02b3fa-c0e1-447f-20e6-d23eeea27207" />
    </api>
    <api id="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="0227dab8-229b-ab83-7d93-b7690511ac0c" />
    </api>
    <api id="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext">
      <topicdata group="api" />
      <apidata name="EstablishSecurityContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EstablishSecurityContext" />
      <setter name="set_EstablishSecurityContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" ref="true" />
      </containers>
      <file name="8d692175-2df5-87a2-5011-2826a96f8450" />
    </api>
    <api id="T:System.ServiceModel.OperationBehaviorAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationBehaviorAttribute" />
      <apidata name="OperationBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b7318cb1-a396-3398-6382-c7595b5188f5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationBehaviorAttribute">
      <topicdata name="OperationBehaviorAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationBehaviorAttribute" />
      <apidata name="OperationBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" />
      </containers>
      <file name="3900f179-c101-4566-9a5a-cb6b54d129bc" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationBehaviorAttribute">
      <topicdata name="OperationBehaviorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationBehaviorAttribute" />
      <apidata name="OperationBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" />
      </containers>
      <file name="cd9298c0-5f71-1502-ec33-ecb14b550cd0" />
    </api>
    <api id="Properties.T:System.ServiceModel.OperationBehaviorAttribute">
      <topicdata name="OperationBehaviorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OperationBehaviorAttribute" />
      <apidata name="OperationBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
        <element api="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" />
      </containers>
      <file name="b5bccc77-041e-5b65-3434-0d5f1a91868e" />
    </api>
    <api id="M:System.ServiceModel.OperationBehaviorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="f6672aab-f21d-01ca-472d-d5c5f14f1409" />
    </api>
    <api id="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters">
      <topicdata group="api" />
      <apidata name="AutoDisposeParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoDisposeParameters" />
      <setter name="set_AutoDisposeParameters" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="b33cfb4c-014a-12ba-fa61-0b984b36ac4d" />
    </api>
    <api id="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation">
      <topicdata group="api" />
      <apidata name="Impersonation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Impersonation" />
      <setter name="set_Impersonation" />
      <returns>
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="61844844-a9dd-ba2e-236d-84a6ae662118" />
    </api>
    <api id="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode">
      <topicdata group="api" />
      <apidata name="ReleaseInstanceMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReleaseInstanceMode" />
      <setter name="set_ReleaseInstanceMode" />
      <returns>
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="593b03be-9fc8-4b68-0073-15e1352a7b31" />
    </api>
    <api id="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IOperationBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="fe8e76a2-7e87-7dbf-5e14-ce14254e2a99" />
    </api>
    <api id="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <topicdata group="api" eiiName="IOperationBehavior.ApplyClientBehavior" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="e7ceaa67-fd68-e0ad-3be9-a2c9a6b32fe2" />
    </api>
    <api id="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <topicdata group="api" eiiName="IOperationBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="dispatch">
          <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="3561424d-09cf-4124-d23d-31f525f1a338" />
    </api>
    <api id="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <topicdata group="api" eiiName="IOperationBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="c8f536a1-7a1a-4e20-691a-29943fce54b8" />
    </api>
    <api id="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete">
      <topicdata group="api" />
      <apidata name="TransactionAutoComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionAutoComplete" />
      <setter name="set_TransactionAutoComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="923da434-d49b-31e2-ec98-3e4be090cd9b" />
    </api>
    <api id="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired">
      <topicdata group="api" />
      <apidata name="TransactionScopeRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionScopeRequired" />
      <setter name="set_TransactionScopeRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
      </containers>
      <file name="843e2d5c-0f41-0222-df7e-922697ccdbc3" />
    </api>
    <api id="T:System.ServiceModel.OperationContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.OperationContext" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="5288166f-e62a-ea6e-e57f-0c0e23794387" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
        <element api="P:System.ServiceModel.OperationContext.Channel" />
        <element api="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
        <element api="P:System.ServiceModel.OperationContext.Current" />
        <element api="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
        <element api="P:System.ServiceModel.OperationContext.Extensions" />
        <element api="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
        <element api="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
        <element api="P:System.ServiceModel.OperationContext.Host" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
        <element api="P:System.ServiceModel.OperationContext.InstanceContext" />
        <element api="P:System.ServiceModel.OperationContext.IsUserContext" />
        <element api="E:System.ServiceModel.OperationContext.OperationCompleted" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.RequestContext" />
        <element api="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
        <element api="P:System.ServiceModel.OperationContext.SessionId" />
        <element api="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
        <element api="P:System.ServiceModel.OperationContext.SupportingTokens" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="45cfc803-e5a0-561f-74cc-ea32b33a45ec" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
        <element api="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="8c276a16-5be0-06d6-a16c-e34a45ffc8ca" />
    </api>
    <api id="Properties.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.OperationContext.Channel" />
        <element api="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
        <element api="P:System.ServiceModel.OperationContext.Current" />
        <element api="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
        <element api="P:System.ServiceModel.OperationContext.Extensions" />
        <element api="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
        <element api="P:System.ServiceModel.OperationContext.Host" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
        <element api="P:System.ServiceModel.OperationContext.InstanceContext" />
        <element api="P:System.ServiceModel.OperationContext.IsUserContext" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.RequestContext" />
        <element api="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
        <element api="P:System.ServiceModel.OperationContext.SessionId" />
        <element api="P:System.ServiceModel.OperationContext.SupportingTokens" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="d572dc2b-e8fe-22c1-4f93-9861ab417740" />
    </api>
    <api id="Events.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.OperationContext.OperationCompleted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="19dc1513-7220-dc54-8944-de8460c4f955" />
    </api>
    <api id="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="bea79c4a-adac-6268-863c-25abe462462f" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.Channel">
      <topicdata group="api" />
      <apidata name="Channel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Channel" />
      <returns>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="eadbbaea-13a7-5fc1-80b4-8ba922feb5e3" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimsPrincipal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="4478ca7e-1a14-33e4-4440-f5d17c112650" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="7b762d4a-ba7e-b1e5-e9cd-35dd826a0472" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.EndpointDispatcher">
      <topicdata group="api" />
      <apidata name="EndpointDispatcher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointDispatcher" />
      <setter name="set_EndpointDispatcher" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="e50859ec-08a7-2c10-59ae-4f44b1255d9a" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.OperationContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.OperationContext" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="9d06ce98-8f32-bd08-b2dc-3b2264226f75" />
    </api>
    <api id="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
      <topicdata group="api" />
      <apidata name="GetCallbackChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="49e584e7-581c-1b89-725f-ca086b498667" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.HasSupportingTokens">
      <topicdata group="api" />
      <apidata name="HasSupportingTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasSupportingTokens" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="e4599bcb-1f50-fcd5-e5c8-afbc9b2e90c5" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="7924ff15-d619-7f56-dac2-8e4763b251a1" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <topicdata group="api" />
      <apidata name="IncomingMessageHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageHeaders" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="f3c616b4-1172-ec0f-5d45-c64b4ea1ef5e" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <topicdata group="api" />
      <apidata name="IncomingMessageProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageProperties" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="2418b6c1-7e74-f004-5eac-27edeb841c80" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <topicdata group="api" />
      <apidata name="IncomingMessageVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageVersion" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="9fb43978-2ebc-6011-8fde-cee3e8054563" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.InstanceContext">
      <topicdata group="api" />
      <apidata name="InstanceContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceContext" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="ee2bea18-a1a1-a16f-62a5-e7f8eea9845b" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IsUserContext">
      <topicdata group="api" />
      <apidata name="IsUserContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsUserContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="7d8d6ec6-74df-f7a6-2ce9-5d00eab49e06" />
    </api>
    <api id="E:System.ServiceModel.OperationContext.OperationCompleted">
      <topicdata group="api" />
      <apidata name="OperationCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OperationCompleted" />
      <remover name="remove_OperationCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="93a768b3-f862-0a99-3146-c41e2806cda6" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <topicdata group="api" />
      <apidata name="OutgoingMessageHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingMessageHeaders" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="0ad69f7c-a124-73e2-4a9a-ea6a10abd2d7" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <topicdata group="api" />
      <apidata name="OutgoingMessageProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingMessageProperties" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="f50c3619-e9a3-e406-e333-07d175de9ec0" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.RequestContext">
      <topicdata group="api" />
      <apidata name="RequestContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestContext" />
      <setter name="set_RequestContext" />
      <returns>
        <type api="T:System.ServiceModel.Channels.RequestContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="fc477850-0aeb-777e-8561-93f01c35c4a7" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
      <topicdata group="api" />
      <apidata name="ServiceSecurityContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceSecurityContext" />
      <returns>
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="b536f089-3b11-3c59-9a3b-d6ce511af100" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="2e27237d-b108-cd82-c718-964eafcfb384" />
    </api>
    <api id="M:System.ServiceModel.OperationContext.SetTransactionComplete">
      <topicdata group="api" />
      <apidata name="SetTransactionComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="137aa251-2e6b-d97b-d641-6e789bbe8ec3" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.SupportingTokens">
      <topicdata group="api" />
      <apidata name="SupportingTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportingTokens" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="1dbd2b44-431c-055f-c0f6-9ac81cc0e6eb" />
    </api>
    <api id="T:System.ServiceModel.OperationContextScope">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a2dc610d-747b-2285-3955-22cf4a44faea" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContextScope">
      <topicdata name="OperationContextScope" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.OperationContextScope.#ctor">
          <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
          <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
        </element>
        <element api="M:System.ServiceModel.OperationContextScope.Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" />
      </containers>
      <file name="7566afd6-f576-60b0-e567-e9b076bcd3f9" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContextScope">
      <topicdata name="OperationContextScope" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContextScope.Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" />
      </containers>
      <file name="b09b73f3-67c7-c586-3964-d8043ef9f4ef" />
    </api>
    <api id="Overload:System.ServiceModel.OperationContextScope.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContextScope" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="d4191e1f-dbc1-ec46-ab0b-728019c921b8" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OperationContextScope.#ctor" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="e18a35cf-6f11-2df2-4ab7-e2d0e41bde5f" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OperationContextScope.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="630e31bb-2c6f-4641-3939-6dfc37eaab11" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="d676758d-ace5-2b06-23d3-f299b199097c" />
    </api>
    <api id="T:System.ServiceModel.OperationContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="660ed223-8c13-6635-13c9-3a40d4ab14c5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Action" />
        <element api="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
        <element api="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Name" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="f17bcaaf-79d5-7522-0de7-ee86636b7066" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="7d9e843c-5692-f933-6349-d4881f87ae84" />
    </api>
    <api id="Properties.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Action" />
        <element api="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
        <element api="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Name" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="2556a065-519d-89a8-5076-bf93e5230e4e" />
    </api>
    <api id="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="abc7aa18-10c9-395a-2b14-99695a0ecc2a" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="03e6483a-1017-e895-eb03-40f428cd94ea" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <topicdata group="api" />
      <apidata name="AsyncPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsyncPattern" />
      <setter name="set_AsyncPattern" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="8f30a5e2-5dad-68f0-d98a-cd99bb7eb1c6" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="ece00fb6-fa03-c8e1-1184-4154ad367904" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
      <topicdata group="api" />
      <apidata name="IsInitiating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInitiating" />
      <setter name="set_IsInitiating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="7e15644d-f9b1-66ed-91d3-486ba288fe06" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="a6f50cda-0543-ed3d-2801-3bdf736a2cfb" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
      <topicdata group="api" />
      <apidata name="IsTerminating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTerminating" />
      <setter name="set_IsTerminating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="f0b2b249-b299-229b-6c2a-518372e9561d" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="90e30377-ee14-3d23-8c48-c48890664098" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="bd63dd68-6acd-8726-6fb8-e5a60e2ff5e5" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <topicdata group="api" />
      <apidata name="ReplyAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplyAction" />
      <setter name="set_ReplyAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="f403677e-05eb-283f-81a0-4f874e07fc0b" />
    </api>
    <api id="T:System.ServiceModel.OperationFormatStyle">
      <topicdata group="api" />
      <apidata name="OperationFormatStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.OperationFormatStyle.Document" />
        <element api="F:System.ServiceModel.OperationFormatStyle.Rpc" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bfd24c6b-f2de-a13c-76d0-555adb8855e4" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatStyle.Document">
      <topicdata group="api" notopic="" />
      <apidata name="Document" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </containers>
      <file name="c94bd5b7-42c9-59e4-1496-1985c54db651" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <topicdata group="api" notopic="" />
      <apidata name="Rpc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </containers>
      <file name="c2bfafc6-41d4-3f88-b7f2-c58bbc64f6ba" />
    </api>
    <api id="T:System.ServiceModel.OperationFormatUse">
      <topicdata group="api" />
      <apidata name="OperationFormatUse" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.OperationFormatUse.Literal" />
        <element api="F:System.ServiceModel.OperationFormatUse.Encoded" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="357c0c83-5ebe-ea2d-7bff-16d31d323689" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatUse.Encoded">
      <topicdata group="api" notopic="" />
      <apidata name="Encoded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatUse" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatUse" ref="false" />
      </containers>
      <file name="958b7625-6e5d-7206-f68d-2041efb0e4ac" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatUse.Literal">
      <topicdata group="api" notopic="" />
      <apidata name="Literal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatUse" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatUse" ref="false" />
      </containers>
      <file name="40209b16-ccc9-719e-3d20-19435557f287" />
    </api>
    <api id="T:System.ServiceModel.OptionalReliableSession">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OptionalReliableSession" />
      <apidata name="OptionalReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.OptionalReliableSession.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ReliableSession" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="551a5c08-423d-6cc9-982f-b0f470a096d7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OptionalReliableSession">
      <topicdata name="OptionalReliableSession" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OptionalReliableSession" />
      <apidata name="OptionalReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.OptionalReliableSession.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.OptionalReliableSession.#ctor">
          <element api="M:System.ServiceModel.OptionalReliableSession.#ctor" />
          <element api="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
        </element>
        <element api="P:System.ServiceModel.OptionalReliableSession.Enabled" />
        <element api="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
        <element api="P:System.ServiceModel.ReliableSession.Ordered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" />
      </containers>
      <file name="0d91cf67-d7a0-0578-42b7-4ca464d05744" />
    </api>
    <api id="Methods.T:System.ServiceModel.OptionalReliableSession">
      <topicdata name="OptionalReliableSession" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OptionalReliableSession" />
      <apidata name="OptionalReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.OptionalReliableSession.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" />
      </containers>
      <file name="8c3e29a5-c631-7072-90c5-0bdfa33869b2" />
    </api>
    <api id="Properties.T:System.ServiceModel.OptionalReliableSession">
      <topicdata name="OptionalReliableSession" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OptionalReliableSession" />
      <apidata name="OptionalReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.OptionalReliableSession.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.OptionalReliableSession.Enabled" />
        <element api="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
        <element api="P:System.ServiceModel.ReliableSession.Ordered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" />
      </containers>
      <file name="c75bf5ed-9313-e799-ef7c-5166830a3451" />
    </api>
    <api id="Overload:System.ServiceModel.OptionalReliableSession.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.OptionalReliableSession" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.OptionalReliableSession.#ctor" />
        <element api="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </containers>
      <file name="1b36a8be-de0d-f707-cd83-8ccf0a667d00" />
    </api>
    <api id="M:System.ServiceModel.OptionalReliableSession.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OptionalReliableSession.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </containers>
      <file name="b17367d6-0a56-1225-943f-cf0796c1417e" />
    </api>
    <api id="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OptionalReliableSession.#ctor" />
      <parameters>
        <parameter name="reliableSessionBindingElement">
          <type api="T:System.ServiceModel.Channels.ReliableSessionBindingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </containers>
      <file name="9a457483-20e9-7e06-43c2-b8dfa7ad2abc" />
    </api>
    <api id="P:System.ServiceModel.OptionalReliableSession.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </containers>
      <file name="f7447947-c9f1-411d-a9cc-843550287f06" />
    </api>
    <api id="T:System.ServiceModel.PeerHopCountAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerHopCountAttribute" />
      <apidata name="PeerHopCountAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerHopCountAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageHeaderAttribute" ref="true" />
          <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0bea378b-2c56-7bbc-f983-54f6753ace4c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerHopCountAttribute">
      <topicdata name="PeerHopCountAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerHopCountAttribute" />
      <apidata name="PeerHopCountAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerHopCountAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="M:System.ServiceModel.PeerHopCountAttribute.#ctor" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Actor" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Name" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Namespace" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" />
      </containers>
      <file name="a6f89c25-3ad2-ad14-361e-cbe11909805c" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerHopCountAttribute">
      <topicdata name="PeerHopCountAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerHopCountAttribute" />
      <apidata name="PeerHopCountAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerHopCountAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" />
      </containers>
      <file name="9338e728-18b5-4c12-eb61-73e37f0c6fa3" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerHopCountAttribute">
      <topicdata name="PeerHopCountAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerHopCountAttribute" />
      <apidata name="PeerHopCountAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerHopCountAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Actor" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Name" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Namespace" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.PeerHopCountAttribute.Relay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" />
      </containers>
      <file name="3cbf2112-6670-3f09-88b0-13e7b97e99eb" />
    </api>
    <api id="M:System.ServiceModel.PeerHopCountAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="27f72b02-c43d-c304-80c3-49082fed0021" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.Actor">
      <topicdata group="api" />
      <apidata name="Actor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Actor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="f0ce6820-ee49-672e-525e-c974cc9baadd" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand">
      <topicdata group="api" />
      <apidata name="MustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="92e0ef82-561d-4e02-6232-541261b0c465" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="48da8700-ceda-5444-953c-6709ee3438bf" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="d94c7316-ca0a-1bea-9594-2d01164a82a5" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="70ebd5c4-ff34-ea4b-ae6e-eebf83e21524" />
    </api>
    <api id="P:System.ServiceModel.PeerHopCountAttribute.Relay">
      <topicdata group="api" />
      <apidata name="Relay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Relay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerHopCountAttribute" ref="true" />
      </containers>
      <file name="87b907e1-c7f6-b5ac-2093-ec5652155d53" />
    </api>
    <api id="T:System.ServiceModel.PeerMessageOrigination">
      <topicdata group="api" />
      <apidata name="PeerMessageOrigination" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerMessageOrigination.Local" />
        <element api="F:System.ServiceModel.PeerMessageOrigination.Remote" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="02ef1f95-1f55-76c2-2a11-4b37db2742dc" />
    </api>
    <api id="F:System.ServiceModel.PeerMessageOrigination.Local">
      <topicdata group="api" notopic="" />
      <apidata name="Local" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessageOrigination" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessageOrigination" ref="false" />
      </containers>
      <file name="8007ae7c-8ade-1856-1905-b374300f3d87" />
    </api>
    <api id="F:System.ServiceModel.PeerMessageOrigination.Remote">
      <topicdata group="api" notopic="" />
      <apidata name="Remote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessageOrigination" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessageOrigination" ref="false" />
      </containers>
      <file name="ec641393-7b0e-b897-e4d1-cbbac76940a5" />
    </api>
    <api id="T:System.ServiceModel.PeerMessagePropagation">
      <topicdata group="api" />
      <apidata name="PeerMessagePropagation" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerMessagePropagation.None" />
        <element api="F:System.ServiceModel.PeerMessagePropagation.Local" />
        <element api="F:System.ServiceModel.PeerMessagePropagation.Remote" />
        <element api="F:System.ServiceModel.PeerMessagePropagation.LocalAndRemote" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ba8016aa-0db3-77eb-daf8-74e331011ba6" />
    </api>
    <api id="F:System.ServiceModel.PeerMessagePropagation.Local">
      <topicdata group="api" notopic="" />
      <apidata name="Local" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </containers>
      <file name="0adac302-c836-b326-11e8-18f2e63856a3" />
    </api>
    <api id="F:System.ServiceModel.PeerMessagePropagation.LocalAndRemote">
      <topicdata group="api" notopic="" />
      <apidata name="LocalAndRemote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </containers>
      <file name="25fe5f02-4e68-d575-f38b-bbd4da652c93" />
    </api>
    <api id="F:System.ServiceModel.PeerMessagePropagation.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </containers>
      <file name="019342d7-1dcb-ca1c-b399-a41f254e8512" />
    </api>
    <api id="F:System.ServiceModel.PeerMessagePropagation.Remote">
      <topicdata group="api" notopic="" />
      <apidata name="Remote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </containers>
      <file name="972c88ad-5f81-5102-8171-9f0e103e9a86" />
    </api>
    <api id="T:System.ServiceModel.PeerMessagePropagationFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerMessagePropagationFilter" />
      <apidata name="PeerMessagePropagationFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0cbfd11e-d3d1-f576-f17b-3063a09ccfd5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerMessagePropagationFilter">
      <topicdata name="PeerMessagePropagationFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerMessagePropagationFilter" />
      <apidata name="PeerMessagePropagationFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerMessagePropagationFilter.#ctor" />
        <element api="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagationFilter" />
      </containers>
      <file name="b7f445c6-67ef-99ab-f78c-240d0aed23f8" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerMessagePropagationFilter">
      <topicdata name="PeerMessagePropagationFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerMessagePropagationFilter" />
      <apidata name="PeerMessagePropagationFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagationFilter" />
      </containers>
      <file name="5bba2df4-6500-4995-afae-2cab7d626c2d" />
    </api>
    <api id="M:System.ServiceModel.PeerMessagePropagationFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagationFilter" ref="true" />
      </containers>
      <file name="23c4d3ad-8f06-992b-168f-7a5681661d6d" />
    </api>
    <api id="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)">
      <topicdata group="api" />
      <apidata name="ShouldMessagePropagate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="origination">
          <type api="T:System.ServiceModel.PeerMessageOrigination" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerMessagePropagationFilter" ref="true" />
      </containers>
      <file name="779a9513-bc43-0c4c-5d45-00b05b63efa8" />
    </api>
    <api id="T:System.ServiceModel.PeerNode">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerNode" />
      <apidata name="PeerNode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="7adbe2c9-e46f-e649-f9b1-2507a2237785" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerNode">
      <topicdata name="PeerNode" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerNode" />
      <apidata name="PeerNode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ServiceModel.PeerNode.IsOnline" />
        <element api="P:System.ServiceModel.PeerNode.MessagePropagationFilter" />
        <element api="E:System.ServiceModel.PeerNode.Offline" />
        <element api="E:System.ServiceModel.PeerNode.Online" />
        <element api="P:System.ServiceModel.PeerNode.Port" />
        <element api="M:System.ServiceModel.PeerNode.RefreshConnection" />
        <element api="M:System.ServiceModel.PeerNode.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" />
      </containers>
      <file name="f136909e-f334-e2b5-ca28-f21d2d05f537" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerNode">
      <topicdata name="PeerNode" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerNode" />
      <apidata name="PeerNode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.PeerNode.RefreshConnection" />
        <element api="M:System.ServiceModel.PeerNode.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" />
      </containers>
      <file name="8176d53d-bbbd-e5ca-8d40-899a15cb7164" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerNode">
      <topicdata name="PeerNode" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerNode" />
      <apidata name="PeerNode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.PeerNode.IsOnline" />
        <element api="P:System.ServiceModel.PeerNode.MessagePropagationFilter" />
        <element api="P:System.ServiceModel.PeerNode.Port" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" />
      </containers>
      <file name="9dba9040-a8cc-85b1-9540-0e090b93bdf6" />
    </api>
    <api id="Events.T:System.ServiceModel.PeerNode">
      <topicdata name="PeerNode" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.PeerNode" />
      <apidata name="PeerNode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.PeerNode.Offline" />
        <element api="E:System.ServiceModel.PeerNode.Online" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" />
      </containers>
      <file name="7c572ca4-944f-f0d0-c615-b7cc027cbd65" />
    </api>
    <api id="P:System.ServiceModel.PeerNode.IsOnline">
      <topicdata group="api" />
      <apidata name="IsOnline" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsOnline" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IOnlineStatus.IsOnline">
          <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="6a304bf9-024a-b803-86b3-25a2a4419960" />
    </api>
    <api id="P:System.ServiceModel.PeerNode.MessagePropagationFilter">
      <topicdata group="api" />
      <apidata name="MessagePropagationFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessagePropagationFilter" />
      <setter name="set_MessagePropagationFilter" />
      <returns>
        <type api="T:System.ServiceModel.PeerMessagePropagationFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="a8c47dd7-4142-6475-af24-ced8e561cda1" />
    </api>
    <api id="E:System.ServiceModel.PeerNode.Offline">
      <topicdata group="api" />
      <apidata name="Offline" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Offline" />
      <remover name="remove_Offline" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.IOnlineStatus.Offline">
          <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="28fb9e45-3b22-9d82-1455-da4c6ea6a4c9" />
    </api>
    <api id="E:System.ServiceModel.PeerNode.Online">
      <topicdata group="api" />
      <apidata name="Online" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Online" />
      <remover name="remove_Online" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.IOnlineStatus.Online">
          <type api="T:System.ServiceModel.IOnlineStatus" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="4f24f393-b7fd-e600-36d6-9766fbc9a502" />
    </api>
    <api id="P:System.ServiceModel.PeerNode.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="ade44008-1c0f-b127-18bd-a9e30c9a1cc5" />
    </api>
    <api id="M:System.ServiceModel.PeerNode.RefreshConnection">
      <topicdata group="api" />
      <apidata name="RefreshConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="bc6a7be4-b2a1-eb73-e7e2-731721917d8c" />
    </api>
    <api id="M:System.ServiceModel.PeerNode.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNode" ref="true" />
      </containers>
      <file name="d8ee8edb-6cc8-4a58-db7c-ffc59e08a637" />
    </api>
    <api id="T:System.ServiceModel.PeerNodeAddress">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerNodeAddress" />
      <apidata name="PeerNodeAddress" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>PeerNodeAddress</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <arrayOf rank="1">
                <type api="T:System.Net.IPAddress" ref="true" />
              </arrayOf>
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6d664af4-a75e-5ced-ede7-2e2278bb905d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerNodeAddress">
      <topicdata name="PeerNodeAddress" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerNodeAddress" />
      <apidata name="PeerNodeAddress" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})" />
        <element api="P:System.ServiceModel.PeerNodeAddress.EndpointAddress" />
        <element api="P:System.ServiceModel.PeerNodeAddress.IPAddresses" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" />
      </containers>
      <file name="6d0a15d1-c793-223a-f121-2149b129db25" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerNodeAddress">
      <topicdata name="PeerNodeAddress" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerNodeAddress" />
      <apidata name="PeerNodeAddress" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" />
      </containers>
      <file name="0bf0f17f-ebf4-4daa-2c7b-56e7d18bdd0d" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerNodeAddress">
      <topicdata name="PeerNodeAddress" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerNodeAddress" />
      <apidata name="PeerNodeAddress" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.PeerNodeAddress.EndpointAddress" />
        <element api="P:System.ServiceModel.PeerNodeAddress.IPAddresses" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" />
      </containers>
      <file name="b85eaa32-e712-aab4-a2c2-90eabef62e1e" />
    </api>
    <api id="M:System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="ipAddresses">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPAddress" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
      </containers>
      <file name="ead76b34-4515-896b-00ff-bcce2d46637b" />
    </api>
    <api id="P:System.ServiceModel.PeerNodeAddress.EndpointAddress">
      <topicdata group="api" />
      <apidata name="EndpointAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
      </containers>
      <file name="0f9195f9-2240-7cec-3caa-be6132470820" />
    </api>
    <api id="P:System.ServiceModel.PeerNodeAddress.IPAddresses">
      <topicdata group="api" />
      <apidata name="IPAddresses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IPAddresses" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.IPAddress" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
      </containers>
      <file name="eb814747-878c-e63d-df85-9a9c2ea066c1" />
    </api>
    <api id="T:System.ServiceModel.PeerResolver">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerResolver" />
      <apidata name="PeerResolver" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="20b9a0cd-026c-089b-3e1f-712c6f47cc96" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerResolver">
      <topicdata name="PeerResolver" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerResolver" />
      <apidata name="PeerResolver" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolver.#ctor" />
        <element api="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
        <element api="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
        <element api="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" />
      </containers>
      <file name="41c2a6e3-d486-6547-00b7-5eb1d77f7ae9" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolver">
      <topicdata name="PeerResolver" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolver" />
      <apidata name="PeerResolver" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
        <element api="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
        <element api="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" />
      </containers>
      <file name="a5e5f10b-25ce-6204-dd0a-c8ab85792d45" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolver">
      <topicdata name="PeerResolver" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolver" />
      <apidata name="PeerResolver" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" />
      </containers>
      <file name="03b0aea8-2790-f137-8da8-1408d51e06b3" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="2961fa96-e066-8ad3-9aac-89e83edc27e0" />
    </api>
    <api id="P:System.ServiceModel.PeerResolver.CanShareReferrals">
      <topicdata group="api" />
      <apidata name="CanShareReferrals" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanShareReferrals" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="2c2be9fd-74ef-5b8c-58cf-4de462e56912" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="credentials">
          <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
        </parameter>
        <parameter name="referralPolicy">
          <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="96db743b-a8a6-3cc4-c61e-5597ba2e7e72" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nodeAddress">
          <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="ced47b98-62ff-8a2a-b529-409e9c273620" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxAddresses">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="2a9d506b-ed83-72aa-756c-1aed6e0ebbb0" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="registrationId">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="0405f1d8-55f7-3340-e09d-d7a54f358728" />
    </api>
    <api id="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="registrationId">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="updatedNodeAddress">
          <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </containers>
      <file name="d4b412c1-26b1-3705-ab08-05da82d2f2e4" />
    </api>
    <api id="T:System.ServiceModel.PeerSecuritySettings">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerSecuritySettings" />
      <apidata name="PeerSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerSecuritySettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="5268dcf1-6c33-7972-a960-e50c7161dbc4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerSecuritySettings">
      <topicdata name="PeerSecuritySettings" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerSecuritySettings" />
      <apidata name="PeerSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerSecuritySettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerSecuritySettings.#ctor" />
        <element api="P:System.ServiceModel.PeerSecuritySettings.Mode" />
        <element api="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.PeerSecuritySettings.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" />
      </containers>
      <file name="1133484d-8863-e59d-753b-897babb3c9db" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerSecuritySettings">
      <topicdata name="PeerSecuritySettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerSecuritySettings" />
      <apidata name="PeerSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerSecuritySettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" />
      </containers>
      <file name="1ddd5b96-22c6-5726-23bd-0445b35ffc54" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerSecuritySettings">
      <topicdata name="PeerSecuritySettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerSecuritySettings" />
      <apidata name="PeerSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerSecuritySettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerSecuritySettings.Mode" />
        <element api="P:System.ServiceModel.PeerSecuritySettings.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" />
      </containers>
      <file name="57561a50-0be3-259d-f7af-eb53cfe0d734" />
    </api>
    <api id="M:System.ServiceModel.PeerSecuritySettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </containers>
      <file name="d5350593-4707-199e-c388-40fcffa8ad3e" />
    </api>
    <api id="P:System.ServiceModel.PeerSecuritySettings.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </containers>
      <file name="7a05104a-afea-d6af-96e0-8e18c8344c9c" />
    </api>
    <api id="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeMode">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dfc59a48-8573-078a-dff7-9380864a5347" />
    </api>
    <api id="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="bf4f4651-c93e-a85f-cbbe-d0afdeb4976e" />
    </api>
    <api id="P:System.ServiceModel.PeerSecuritySettings.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerSecuritySettings" ref="true" />
      </containers>
      <file name="31ed0c49-3db0-00cf-2ecc-790dd0d2a679" />
    </api>
    <api id="T:System.ServiceModel.PeerTransportCredentialType">
      <topicdata group="api" />
      <apidata name="PeerTransportCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerTransportCredentialType.Password" />
        <element api="F:System.ServiceModel.PeerTransportCredentialType.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="37d6ba5b-16ef-6764-7539-a5ab486aa53a" />
    </api>
    <api id="F:System.ServiceModel.PeerTransportCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerTransportCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportCredentialType" ref="false" />
      </containers>
      <file name="d1d4aaf0-2e8f-e5b6-9f3d-f541127491eb" />
    </api>
    <api id="F:System.ServiceModel.PeerTransportCredentialType.Password">
      <topicdata group="api" notopic="" />
      <apidata name="Password" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerTransportCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportCredentialType" ref="false" />
      </containers>
      <file name="d0228d1f-f9ca-4674-94a1-4c77ed9289b0" />
    </api>
    <api id="T:System.ServiceModel.PeerTransportSecuritySettings">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PeerTransportSecuritySettings" />
      <apidata name="PeerTransportSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="fab33cc2-3310-b8ad-c17d-8fab17db6384" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PeerTransportSecuritySettings">
      <topicdata name="PeerTransportSecuritySettings" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PeerTransportSecuritySettings" />
      <apidata name="PeerTransportSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor" />
        <element api="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" />
      </containers>
      <file name="e314c040-6565-b16f-33a4-49284f73b97e" />
    </api>
    <api id="Methods.T:System.ServiceModel.PeerTransportSecuritySettings">
      <topicdata name="PeerTransportSecuritySettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerTransportSecuritySettings" />
      <apidata name="PeerTransportSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" />
      </containers>
      <file name="0ac54142-40f2-3d7d-c449-239027ee6d45" />
    </api>
    <api id="Properties.T:System.ServiceModel.PeerTransportSecuritySettings">
      <topicdata name="PeerTransportSecuritySettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerTransportSecuritySettings" />
      <apidata name="PeerTransportSecuritySettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" />
      </containers>
      <file name="f097c4ab-c4b5-13e2-7253-b9d042e621c1" />
    </api>
    <api id="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" ref="true" />
      </containers>
      <file name="056e8ac4-2e53-21d0-a82e-d70bc17c83de" />
    </api>
    <api id="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType">
      <topicdata group="api" />
      <apidata name="CredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CredentialType" />
      <setter name="set_CredentialType" />
      <returns>
        <type api="T:System.ServiceModel.PeerTransportCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PeerTransportSecuritySettings" ref="true" />
      </containers>
      <file name="328c9eef-78d8-cefd-f5df-2ffcbd7dc24b" />
    </api>
    <api id="T:System.ServiceModel.PoisonMessageException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.PoisonMessageException" />
      <apidata name="PoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.PoisonMessageException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MsmqPoisonMessageException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="561ebb67-84b5-34fd-1020-18929dadb8fe" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.PoisonMessageException">
      <topicdata name="PoisonMessageException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.PoisonMessageException" />
      <apidata name="PoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.PoisonMessageException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.PoisonMessageException.#ctor">
          <element api="M:System.ServiceModel.PoisonMessageException.#ctor" />
          <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" />
      </containers>
      <file name="ca31384e-6be6-13bc-4ed6-76cf2e73b831" />
    </api>
    <api id="Methods.T:System.ServiceModel.PoisonMessageException">
      <topicdata name="PoisonMessageException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PoisonMessageException" />
      <apidata name="PoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.PoisonMessageException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" />
      </containers>
      <file name="da44cc12-80ab-47fc-2536-85efa4179b4e" />
    </api>
    <api id="Properties.T:System.ServiceModel.PoisonMessageException">
      <topicdata name="PoisonMessageException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PoisonMessageException" />
      <apidata name="PoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.PoisonMessageException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" />
      </containers>
      <file name="004e2904-d6dd-15d6-d66c-c20fd9becfe4" />
    </api>
    <api id="Events.T:System.ServiceModel.PoisonMessageException">
      <topicdata name="PoisonMessageException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.PoisonMessageException" />
      <apidata name="PoisonMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.PoisonMessageException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" />
      </containers>
      <file name="5bed3f06-ac8f-92af-a754-0171889b0786" />
    </api>
    <api id="Overload:System.ServiceModel.PoisonMessageException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.PoisonMessageException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PoisonMessageException.#ctor" />
        <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
      </containers>
      <file name="3df083dd-db99-7e41-4743-f2950cad0d44" />
    </api>
    <api id="M:System.ServiceModel.PoisonMessageException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PoisonMessageException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
      </containers>
      <file name="3475854f-00aa-a87c-24ba-e421926cde05" />
    </api>
    <api id="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.PoisonMessageException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
      </containers>
      <file name="d1806095-24d4-7800-42fa-1f512623286c" />
    </api>
    <api id="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PoisonMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
      </containers>
      <file name="d34455bb-0c9a-b70a-6f25-923b95ed4e25" />
    </api>
    <api id="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PoisonMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.PoisonMessageException" ref="true" />
      </containers>
      <file name="28cbea1c-80c7-4479-ebe9-3173277691dc" />
    </api>
    <api id="T:System.ServiceModel.ProtocolException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="29881e86-a2d3-54e4-d82e-bb73b324b365" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.ProtocolException.#ctor">
          <element api="M:System.ServiceModel.ProtocolException.#ctor" />
          <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="6b99e77d-ed1d-0046-7531-e4dd5f28380e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="8de5f823-87fe-1de2-9ce7-956adfadac2f" />
    </api>
    <api id="Properties.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="2a1b5747-7fb7-eb0e-03dd-f9d5cad324c8" />
    </api>
    <api id="Events.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="8b9813a4-a3e5-7fa2-fc3c-23271d3da71c" />
    </api>
    <api id="Overload:System.ServiceModel.ProtocolException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ProtocolException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ProtocolException.#ctor" />
        <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="9d6fcd25-de62-7c36-58e1-8482d4d68fbf" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="f8cbd5c7-5ea2-782e-3fd6-e75053a80859" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="48600e57-b2fe-8379-3c60-18cf01d585fd" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="097e45d7-9445-f5de-85d5-8205cd9571c7" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="f35b130b-6acd-20b2-4162-13702a083860" />
    </api>
    <api id="T:System.ServiceModel.QueuedDeliveryRequirementsMode">
      <topicdata group="api" />
      <apidata name="QueuedDeliveryRequirementsMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />
        <element api="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required" />
        <element api="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="35dd7069-55fe-322f-f9bd-2befa7e4c1af" />
    </api>
    <api id="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed">
      <topicdata group="api" notopic="" />
      <apidata name="Allowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </containers>
      <file name="177a2b7b-81ca-c0b4-9ece-bf15d5f04d1c" />
    </api>
    <api id="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="NotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </containers>
      <file name="018b1bd7-3baa-495c-8d83-69b3d571a769" />
    </api>
    <api id="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required">
      <topicdata group="api" notopic="" />
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueuedDeliveryRequirementsMode" ref="false" />
      </containers>
      <file name="723f03ce-77ef-035f-26af-b7be1b3a86bc" />
    </api>
    <api id="T:System.ServiceModel.QueueTransferProtocol">
      <topicdata group="api" />
      <apidata name="QueueTransferProtocol" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.QueueTransferProtocol.Native" />
        <element api="F:System.ServiceModel.QueueTransferProtocol.Srmp" />
        <element api="F:System.ServiceModel.QueueTransferProtocol.SrmpSecure" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2536b13d-e89d-6daa-b51e-73a33b970972" />
    </api>
    <api id="F:System.ServiceModel.QueueTransferProtocol.Native">
      <topicdata group="api" notopic="" />
      <apidata name="Native" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </containers>
      <file name="95e49ec8-afc0-202a-c018-47c97d62328f" />
    </api>
    <api id="F:System.ServiceModel.QueueTransferProtocol.Srmp">
      <topicdata group="api" notopic="" />
      <apidata name="Srmp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </containers>
      <file name="ed4b1020-b971-e2d3-b0fe-0a3909d3b8a0" />
    </api>
    <api id="F:System.ServiceModel.QueueTransferProtocol.SrmpSecure">
      <topicdata group="api" notopic="" />
      <apidata name="SrmpSecure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QueueTransferProtocol" ref="false" />
      </containers>
      <file name="53a5eb1c-818c-51fb-82ff-6d9428ab4bfc" />
    </api>
    <api id="T:System.ServiceModel.QuotaExceededException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3e5e01e5-7157-23b9-8b62-e87b75559bc8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.QuotaExceededException.#ctor">
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor" />
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="edfa6667-c91e-4d26-39c8-ffcbd3d89b16" />
    </api>
    <api id="Methods.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="3f3bd13a-12dd-ca44-fd6b-c41ead4e35d7" />
    </api>
    <api id="Properties.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="89bc35e1-f685-62cd-f4b5-2f1e8256bbdf" />
    </api>
    <api id="Events.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="5b5af0b4-ca2b-92e2-961c-6e006dfdfd75" />
    </api>
    <api id="Overload:System.ServiceModel.QuotaExceededException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.QuotaExceededException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor" />
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="55ae4b1b-1d73-76ae-3476-151c44e9b33d" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="d32fefac-34d9-6c17-2b19-c4277d13db6a" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="255db7d2-d6ad-39a5-fab2-85781854cd53" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="c7808277-3aa4-1ebf-a954-a94e618e3593" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="e42c8486-bee9-885b-f210-1f59f95fa786" />
    </api>
    <api id="T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      <apidata name="ReceiveContextEnabledAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="07f5a3dc-ac5b-b8c9-2798-2ca7379758f2" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <topicdata name="ReceiveContextEnabledAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      <apidata name="ReceiveContextEnabledAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="P:System.ServiceModel.ReceiveContextEnabledAttribute.ManualControl" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.Validate(System.ServiceModel.Description.OperationDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      </containers>
      <file name="b1888535-c58b-9439-e8a7-86254a29cae0" />
    </api>
    <api id="Methods.T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <topicdata name="ReceiveContextEnabledAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      <apidata name="ReceiveContextEnabledAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="M:System.ServiceModel.ReceiveContextEnabledAttribute.Validate(System.ServiceModel.Description.OperationDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      </containers>
      <file name="2d8dfbbd-5eb3-54d3-8c5c-a0841440e809" />
    </api>
    <api id="Properties.T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <topicdata name="ReceiveContextEnabledAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      <apidata name="ReceiveContextEnabledAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.ReceiveContextEnabledAttribute.ManualControl" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" />
      </containers>
      <file name="d61fb5ac-d134-d7a3-d6c1-3ae6ebb8d614" />
    </api>
    <api id="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="89a4b8af-b8b8-cf04-75b1-b0367e3c93be" />
    </api>
    <api id="M:System.ServiceModel.ReceiveContextEnabledAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="operationDescription">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="f6c2dadc-6d87-8755-acbd-33ccc17ec6e4" />
    </api>
    <api id="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <topicdata group="api" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="operationDescription">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="clientOperation">
          <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="d8c2654f-b232-5f7f-2938-acd3ebfde3d2" />
    </api>
    <api id="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <topicdata group="api" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="operationDescription">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="dispatchOperation">
          <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="4171fae4-338b-f024-e474-eb13a27ec458" />
    </api>
    <api id="P:System.ServiceModel.ReceiveContextEnabledAttribute.ManualControl">
      <topicdata group="api" />
      <apidata name="ManualControl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ManualControl" />
      <setter name="set_ManualControl" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="afac1a5d-17d8-43b0-e288-ce408f4316fb" />
    </api>
    <api id="M:System.ServiceModel.ReceiveContextEnabledAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="operationDescription">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveContextEnabledAttribute" ref="true" />
      </containers>
      <file name="5d983875-3f0e-6419-3861-e65def442d9a" />
    </api>
    <api id="T:System.ServiceModel.ReceiveErrorHandling">
      <topicdata group="api" />
      <apidata name="ReceiveErrorHandling" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.ReceiveErrorHandling.Fault" />
        <element api="F:System.ServiceModel.ReceiveErrorHandling.Drop" />
        <element api="F:System.ServiceModel.ReceiveErrorHandling.Reject" />
        <element api="F:System.ServiceModel.ReceiveErrorHandling.Move" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="fe25808b-9218-ecbd-099d-5d9312195b86" />
    </api>
    <api id="F:System.ServiceModel.ReceiveErrorHandling.Drop">
      <topicdata group="api" notopic="" />
      <apidata name="Drop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </containers>
      <file name="52d056b1-5159-9012-d927-7f294883a1ed" />
    </api>
    <api id="F:System.ServiceModel.ReceiveErrorHandling.Fault">
      <topicdata group="api" notopic="" />
      <apidata name="Fault" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </containers>
      <file name="60053987-005d-3f8a-2b24-1f93fb7c2c29" />
    </api>
    <api id="F:System.ServiceModel.ReceiveErrorHandling.Move">
      <topicdata group="api" notopic="" />
      <apidata name="Move" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </containers>
      <file name="a4d8d115-52da-6ad2-1d84-78258b1f8708" />
    </api>
    <api id="F:System.ServiceModel.ReceiveErrorHandling.Reject">
      <topicdata group="api" notopic="" />
      <apidata name="Reject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReceiveErrorHandling" ref="false" />
      </containers>
      <file name="f5e4103d-9318-c109-b414-d50b2fd30e97" />
    </api>
    <api id="T:System.ServiceModel.ReleaseInstanceMode">
      <topicdata group="api" />
      <apidata name="ReleaseInstanceMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.ReleaseInstanceMode.None" />
        <element api="F:System.ServiceModel.ReleaseInstanceMode.BeforeCall" />
        <element api="F:System.ServiceModel.ReleaseInstanceMode.AfterCall" />
        <element api="F:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="87ea0f3a-f1d6-e471-4ec4-feae22b5cd18" />
    </api>
    <api id="F:System.ServiceModel.ReleaseInstanceMode.AfterCall">
      <topicdata group="api" notopic="" />
      <apidata name="AfterCall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </containers>
      <file name="bd5a201b-05a7-400f-4057-023091f48574" />
    </api>
    <api id="F:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall">
      <topicdata group="api" notopic="" />
      <apidata name="BeforeAndAfterCall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </containers>
      <file name="e33b267f-2921-cc94-b056-e416d83e15e8" />
    </api>
    <api id="F:System.ServiceModel.ReleaseInstanceMode.BeforeCall">
      <topicdata group="api" notopic="" />
      <apidata name="BeforeCall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </containers>
      <file name="087136d7-a424-cdf2-512a-d784e96fd598" />
    </api>
    <api id="F:System.ServiceModel.ReleaseInstanceMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReleaseInstanceMode" ref="false" />
      </containers>
      <file name="440da909-26aa-dbc7-f607-2000446ca6aa" />
    </api>
    <api id="T:System.ServiceModel.ReliableMessagingVersion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ReliableMessagingVersion" />
      <apidata name="ReliableMessagingVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6b4032a8-6cce-fa9d-03b8-c4d88b7415b7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ReliableMessagingVersion">
      <topicdata name="ReliableMessagingVersion" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ReliableMessagingVersion" />
      <apidata name="ReliableMessagingVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.ReliableMessagingVersion.Default" />
        <element api="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11" />
        <element api="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" />
      </containers>
      <file name="a36ebbaf-b1a8-e933-2dd9-350dc24ca29e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ReliableMessagingVersion">
      <topicdata name="ReliableMessagingVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ReliableMessagingVersion" />
      <apidata name="ReliableMessagingVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" />
      </containers>
      <file name="8dd64d4c-d174-db06-4a69-d1d56aef1586" />
    </api>
    <api id="Properties.T:System.ServiceModel.ReliableMessagingVersion">
      <topicdata name="ReliableMessagingVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ReliableMessagingVersion" />
      <apidata name="ReliableMessagingVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ReliableMessagingVersion.Default" />
        <element api="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11" />
        <element api="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" />
      </containers>
      <file name="d365b76f-b7a3-7d73-869d-ce725cbe2c0b" />
    </api>
    <api id="P:System.ServiceModel.ReliableMessagingVersion.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </containers>
      <file name="b16474fa-0b33-342a-55a8-904712e8e234" />
    </api>
    <api id="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11">
      <topicdata group="api" />
      <apidata name="WSReliableMessaging11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSReliableMessaging11" />
      <returns>
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </containers>
      <file name="46ccdb5d-6f6c-b1e2-6e20-f9e5659c0360" />
    </api>
    <api id="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005">
      <topicdata group="api" />
      <apidata name="WSReliableMessagingFebruary2005" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSReliableMessagingFebruary2005" />
      <returns>
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableMessagingVersion" ref="true" />
      </containers>
      <file name="bf58ccea-d4e0-f70e-9c22-8e4e852560ec" />
    </api>
    <api id="T:System.ServiceModel.ReliableSession">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ReliableSession" />
      <apidata name="ReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ReliableSession.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0f9fe301-cb77-c2e9-0215-e8f9c835b744" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ReliableSession">
      <topicdata name="ReliableSession" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ReliableSession" />
      <apidata name="ReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ReliableSession.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ReliableSession.#ctor">
          <element api="M:System.ServiceModel.ReliableSession.#ctor" />
          <element api="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
        </element>
        <element api="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
        <element api="P:System.ServiceModel.ReliableSession.Ordered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" />
      </containers>
      <file name="b8fd3027-a70e-3ab5-8201-8655b28ae94d" />
    </api>
    <api id="Methods.T:System.ServiceModel.ReliableSession">
      <topicdata name="ReliableSession" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ReliableSession" />
      <apidata name="ReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ReliableSession.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" />
      </containers>
      <file name="3d06c3d8-7c36-e49b-7297-fbbbb5b081c6" />
    </api>
    <api id="Properties.T:System.ServiceModel.ReliableSession">
      <topicdata name="ReliableSession" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ReliableSession" />
      <apidata name="ReliableSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ReliableSession.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
        <element api="P:System.ServiceModel.ReliableSession.Ordered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" />
      </containers>
      <file name="7282b719-8f58-698c-ded6-1920d0e51551" />
    </api>
    <api id="Overload:System.ServiceModel.ReliableSession.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ReliableSession" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ReliableSession.#ctor" />
        <element api="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </containers>
      <file name="e4869b00-f024-b11e-5e26-6a5d5dd02a74" />
    </api>
    <api id="M:System.ServiceModel.ReliableSession.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ReliableSession.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </containers>
      <file name="02c976d9-3c35-0239-9347-e9e98220b6ed" />
    </api>
    <api id="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ReliableSession.#ctor" />
      <parameters>
        <parameter name="reliableSessionBindingElement">
          <type api="T:System.ServiceModel.Channels.ReliableSessionBindingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </containers>
      <file name="f4cdac5d-13d0-ca23-c42c-8677e6529c8a" />
    </api>
    <api id="P:System.ServiceModel.ReliableSession.InactivityTimeout">
      <topicdata group="api" />
      <apidata name="InactivityTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InactivityTimeout" />
      <setter name="set_InactivityTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </containers>
      <file name="fa8f1588-eb27-373f-9087-9b0ed8aeb0ee" />
    </api>
    <api id="P:System.ServiceModel.ReliableSession.Ordered">
      <topicdata group="api" />
      <apidata name="Ordered" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Ordered" />
      <setter name="set_Ordered" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="74c8eb18-b32a-ea4e-a197-0d3f824c18fa" />
    </api>
    <api id="T:System.ServiceModel.RsaEndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.RsaEndpointIdentity" />
      <apidata name="RsaEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="edff958e-e345-583e-b077-c7c3b690bd58" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.RsaEndpointIdentity">
      <topicdata name="RsaEndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.RsaEndpointIdentity" />
      <apidata name="RsaEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.RsaEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
        <element api="Overload:System.ServiceModel.RsaEndpointIdentity.#ctor">
          <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)" />
          <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" />
      </containers>
      <file name="6b090055-d6b8-468e-8d72-7259899dd708" />
    </api>
    <api id="Methods.T:System.ServiceModel.RsaEndpointIdentity">
      <topicdata name="RsaEndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.RsaEndpointIdentity" />
      <apidata name="RsaEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.RsaEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" />
      </containers>
      <file name="ca6ef3cf-13d8-4097-7111-b9c4422f6fae" />
    </api>
    <api id="Properties.T:System.ServiceModel.RsaEndpointIdentity">
      <topicdata name="RsaEndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.RsaEndpointIdentity" />
      <apidata name="RsaEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" />
      </containers>
      <file name="fe1c550a-a4fc-82cc-56d8-fc06a2ca9d96" />
    </api>
    <api id="Overload:System.ServiceModel.RsaEndpointIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.RsaEndpointIdentity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)" />
        <element api="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" ref="true" />
      </containers>
      <file name="c3bce8e2-9a64-f089-5b0a-680cbf9ec15d" />
    </api>
    <api id="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.RsaEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" ref="true" />
      </containers>
      <file name="233d2fa4-f3f1-d948-408f-70cb730dc7cc" />
    </api>
    <api id="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.RsaEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" ref="true" />
      </containers>
      <file name="fafa9413-bd02-ef09-14c7-a5e9607282f5" />
    </api>
    <api id="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.RsaEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="publicKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.RsaEndpointIdentity" ref="true" />
      </containers>
      <file name="bbf968fc-01bc-0297-77d7-91324d366576" />
    </api>
    <api id="T:System.ServiceModel.SecurityMode">
      <topicdata group="api" />
      <apidata name="SecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.SecurityMode.None" />
        <element api="F:System.ServiceModel.SecurityMode.Transport" />
        <element api="F:System.ServiceModel.SecurityMode.Message" />
        <element api="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="aa9062f7-b5e1-338a-003e-6f38c71a45f7" />
    </api>
    <api id="F:System.ServiceModel.SecurityMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </containers>
      <file name="bcacc111-1daa-37b1-2f13-ac98022fccef" />
    </api>
    <api id="F:System.ServiceModel.SecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </containers>
      <file name="668e5015-9e37-4d86-fadd-5850beffda8b" />
    </api>
    <api id="F:System.ServiceModel.SecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </containers>
      <file name="64424131-06df-835f-28d1-71c8de8a46d6" />
    </api>
    <api id="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <topicdata group="api" notopic="" />
      <apidata name="TransportWithMessageCredential" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </containers>
      <file name="49470eaa-c567-9efd-82ea-613862c22fe1" />
    </api>
    <api id="T:System.ServiceModel.ServerTooBusyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2da5ea05-a090-f3c6-90bc-20d29c601f72" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.ServerTooBusyException.#ctor">
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor" />
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="41e3325c-0d63-10b3-71b7-668e89bf4037" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="47844500-027a-0e78-f568-ab0786faa1c0" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="85bccd34-d41a-02df-3e8e-b593584c30b3" />
    </api>
    <api id="Events.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="9722d208-9a90-337b-ce4a-e1138dccb6ee" />
    </api>
    <api id="Overload:System.ServiceModel.ServerTooBusyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServerTooBusyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor" />
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="cda4ed2b-3c84-98cb-67a4-4f4a425eba79" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="d2c33d4d-9df0-bdb9-eaf0-281b5af4bb32" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="99569bda-6b4a-efb8-22c6-fdacedce6964" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="945fd782-a138-d743-6e7d-40b9179ed50b" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="c68559b3-4b60-86f6-0675-cc9d9f8ffd11" />
    </api>
    <api id="T:System.ServiceModel.ServiceActivationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a3c94023-79a5-968c-b444-863aad0e44e1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.ServiceActivationException.#ctor">
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor" />
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="9b2248be-bb9d-3dad-3a9d-638478cca0ab" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="9ed5e5fc-a56a-a258-ada9-56621e76d896" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="f64b1490-76da-af33-a9e3-ba17dc16f63e" />
    </api>
    <api id="Events.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="480821c7-0669-ecd2-affc-e537f0f0bbfb" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceActivationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceActivationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor" />
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="cbf842f3-94b5-af87-c8f3-952040daf03b" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="fc697796-29eb-1848-72a3-11055588d2eb" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="2f50c395-a67b-17db-8fe2-b7d44a645bde" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="09204208-191d-e2ea-f926-8094416ed272" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="89955b08-d995-88b8-b52a-8d8b6f431bb6" />
    </api>
    <api id="T:System.ServiceModel.ServiceAuthenticationManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceAuthenticationManager" />
      <apidata name="ServiceAuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthenticationManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="93296bd9-0466-9fe3-2fe6-086f2a75cf8e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceAuthenticationManager">
      <topicdata name="ServiceAuthenticationManager" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceAuthenticationManager" />
      <apidata name="ServiceAuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthenticationManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceAuthenticationManager.#ctor" />
        <element api="M:System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthenticationManager" />
      </containers>
      <file name="78247bcb-08f9-30a6-8aa8-368dd41e6c70" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceAuthenticationManager">
      <topicdata name="ServiceAuthenticationManager" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceAuthenticationManager" />
      <apidata name="ServiceAuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthenticationManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthenticationManager" />
      </containers>
      <file name="30fb390b-d4ee-8c95-85e4-a69c8f47c7f1" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthenticationManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthenticationManager" ref="true" />
      </containers>
      <file name="d5afb402-6a43-b236-d074-398d0f30c146" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)">
      <topicdata group="api" />
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="authPolicy">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="message">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthenticationManager" ref="true" />
      </containers>
      <file name="f82f7d48-40d9-0b9f-7122-cbfefda621b4" />
    </api>
    <api id="T:System.ServiceModel.ServiceAuthorizationManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceAuthorizationManager" />
      <apidata name="ServiceAuthorizationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="48279fe6-cf38-2ab0-27a2-b7037d85d3c4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceAuthorizationManager">
      <topicdata name="ServiceAuthorizationManager" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceAuthorizationManager" />
      <apidata name="ServiceAuthorizationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
        <element api="Overload:System.ServiceModel.ServiceAuthorizationManager.CheckAccess">
          <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
          <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
        </element>
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" />
      </containers>
      <file name="4e3dd9c2-d78b-374d-29e9-679cc5f7988c" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceAuthorizationManager">
      <topicdata name="ServiceAuthorizationManager" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceAuthorizationManager" />
      <apidata name="ServiceAuthorizationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceAuthorizationManager.CheckAccess">
          <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
          <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
        </element>
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" />
      </containers>
      <file name="a4315580-845e-fa06-fed5-b703c329f810" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceAuthorizationManager.CheckAccess">
      <topicdata name="CheckAccess" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceAuthorizationManager" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="0e1a940a-48a2-be5e-2bd8-25f5b76ac945" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="daff45a2-ec92-eb7f-6415-8f4faa337701" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceAuthorizationManager.CheckAccess" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="21ce61a9-5fdb-85d6-8b77-bc39bc69c02d" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
      <topicdata group="api" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceAuthorizationManager.CheckAccess" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
        <parameter name="message">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="0f69def8-b90b-3ea5-d63f-8b5399582689" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name="CheckAccessCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="65416d88-de8c-c9c6-bc73-43119e112c45" />
    </api>
    <api id="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name="GetAuthorizationPolicies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </containers>
      <file name="090cbb4f-be8e-8330-e37b-3738a6f8eccb" />
    </api>
    <api id="T:System.ServiceModel.ServiceBehaviorAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceBehaviorAttribute" />
      <apidata name="ServiceBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="88efb135-d425-e5b1-57d6-01a67158c1a5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceBehaviorAttribute">
      <topicdata name="ServiceBehaviorAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceBehaviorAttribute" />
      <apidata name="ServiceBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" />
      </containers>
      <file name="c76983dc-d85b-b149-a638-233c0ffdbb5f" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceBehaviorAttribute">
      <topicdata name="ServiceBehaviorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceBehaviorAttribute" />
      <apidata name="ServiceBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" />
      </containers>
      <file name="46311ef3-4340-9cbc-146c-f00fc29b6ad4" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceBehaviorAttribute">
      <topicdata name="ServiceBehaviorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceBehaviorAttribute" />
      <apidata name="ServiceBehaviorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
        <element api="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" />
      </containers>
      <file name="d85a5c28-04d2-30a0-4215-54472a17c93a" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="99f633d6-af76-7eb7-ba46-2468648005a8" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
      <topicdata group="api" />
      <apidata name="AddressFilterMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddressFilterMode" />
      <setter name="set_AddressFilterMode" />
      <returns>
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
            <enumValue>
              <field name="Exact" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="81af282c-232b-e796-7abf-39203c3dd4b5" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
      <topicdata group="api" />
      <apidata name="AutomaticSessionShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticSessionShutdown" />
      <setter name="set_AutomaticSessionShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3e2b6ea7-83fd-2a7b-97ca-c91274da9d17" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
      <topicdata group="api" />
      <apidata name="ConcurrencyMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConcurrencyMode" />
      <setter name="set_ConcurrencyMode" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
            <enumValue>
              <field name="Single" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a66ad8f8-f6b7-ee5b-7c2e-45a60d8233c8" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
      <topicdata group="api" />
      <apidata name="ConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigurationName" />
      <setter name="set_ConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="1443ea2c-955c-ab71-7de3-6de090edd457" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch">
      <topicdata group="api" />
      <apidata name="EnsureOrderedDispatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureOrderedDispatch" />
      <setter name="set_EnsureOrderedDispatch" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="96692fb2-7813-46df-f7f9-de17d5e72177" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
      <topicdata group="api" />
      <apidata name="GetWellKnownSingleton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="f752164e-57b0-eaf6-4975-1a9e5fc80578" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
      <topicdata group="api" />
      <apidata name="IgnoreExtensionDataObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreExtensionDataObject" />
      <setter name="set_IgnoreExtensionDataObject" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="577f8f6e-a878-aa65-9e21-56b5c478b055" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
      <topicdata group="api" />
      <apidata name="IncludeExceptionDetailInFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeExceptionDetailInFaults" />
      <setter name="set_IncludeExceptionDetailInFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="27e9dd5c-d1c1-99ca-2126-2026547b814a" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
      <topicdata group="api" />
      <apidata name="InstanceContextMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceContextMode" />
      <setter name="set_InstanceContextMode" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="PerSession" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="43f2ffba-0420-908c-0409-9f662cf03836" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
      <topicdata group="api" />
      <apidata name="MaxItemsInObjectGraph" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxItemsInObjectGraph" />
      <setter name="set_MaxItemsInObjectGraph" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </argument>
        </attribute>
      </attributes>
      <file name="44657479-013c-01a6-2e37-9c0871ee4440" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="f2e73cd8-746a-3eb1-21ef-463a8a0c4e9c" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="f63d2a69-008f-1bc8-5d89-8b54a8f4ea46" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
      <topicdata group="api" />
      <apidata name="ReleaseServiceInstanceOnTransactionComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReleaseServiceInstanceOnTransactionComplete" />
      <setter name="set_ReleaseServiceInstanceOnTransactionComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="cefe1ca2-459a-c25b-e927-44555633e886" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
      <topicdata group="api" />
      <apidata name="SetWellKnownSingleton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="a3da1a4b-1918-9576-57c2-0b5921805609" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName">
      <topicdata group="api" />
      <apidata name="ShouldSerializeConfigurationName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="68a731ea-63bf-ee59-0b9c-097c6008f8f3" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReleaseServiceInstanceOnTransactionComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="fddd8857-2baa-cb3b-5ee9-e4181cbc228f" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransactionAutoCompleteOnSessionClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="72782bdf-46b8-900e-d9ae-4ff4c7600f27" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransactionIsolationLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="bf40a412-d452-1142-afe1-9e158f52ccf6" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransactionTimeout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="98f84b40-de6f-65e6-eb3b-e74068eb9739" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IServiceBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
        <parameter name="endpoints">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="7b1e5853-4cf6-ff42-a96d-3a596088623a" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="8dca8ea1-74ca-f212-fff1-73fc9da490a8" />
    </api>
    <api id="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="6d63947f-9475-60f0-9f0c-2bd7ad0a7cc8" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
      <topicdata group="api" />
      <apidata name="TransactionAutoCompleteOnSessionClose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionAutoCompleteOnSessionClose" />
      <setter name="set_TransactionAutoCompleteOnSessionClose" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="b0a0768e-7209-7eaa-4e84-6265fa56f81f" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
      <topicdata group="api" />
      <apidata name="TransactionIsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionIsolationLevel" />
      <setter name="set_TransactionIsolationLevel" />
      <returns>
        <type api="T:System.Transactions.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="5f77ba5d-e5c2-4f72-f376-1f1bd79ddd3e" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
      <topicdata group="api" />
      <apidata name="TransactionTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionTimeout" />
      <setter name="set_TransactionTimeout" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <file name="08aad0fc-0526-a189-0e03-4d66d679fec6" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
      <topicdata group="api" />
      <apidata name="UseSynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSynchronizationContext" />
      <setter name="set_UseSynchronizationContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="56704099-ca0a-d7cc-057d-0c45682adc3a" />
    </api>
    <api id="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
      <topicdata group="api" />
      <apidata name="ValidateMustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidateMustUnderstand" />
      <setter name="set_ValidateMustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a95ea4b4-b21e-611f-5d14-0027117c71ad" />
    </api>
    <api id="T:System.ServiceModel.ServiceConfiguration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="ServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2e2585d9-16c6-01c0-8a1d-5061895c9d38" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceConfiguration">
      <topicdata name="ServiceConfiguration" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="ServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="P:System.ServiceModel.ServiceConfiguration.Authentication" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Authorization" />
        <element api="P:System.ServiceModel.ServiceConfiguration.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceConfiguration.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Credentials" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Description" />
        <element api="M:System.ServiceModel.ServiceConfiguration.EnableProtocol(System.ServiceModel.Channels.Binding)" />
        <element api="P:System.ServiceModel.ServiceConfiguration.IdentityConfiguration" />
        <element api="Overload:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration">
          <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration" />
          <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration(System.Configuration.Configuration)" />
        </element>
        <element api="P:System.ServiceModel.ServiceConfiguration.OpenTimeout" />
        <element api="M:System.ServiceModel.ServiceConfiguration.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="P:System.ServiceModel.ServiceConfiguration.UseIdentityConfiguration" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" />
      </containers>
      <file name="edf5cf13-6ada-452b-e8d1-803e851333f1" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceConfiguration">
      <topicdata name="ServiceConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="ServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceConfiguration.EnableProtocol(System.ServiceModel.Channels.Binding)" />
        <element api="Overload:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration">
          <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration" />
          <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration(System.Configuration.Configuration)" />
        </element>
        <element api="M:System.ServiceModel.ServiceConfiguration.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" />
      </containers>
      <file name="0cd63743-1bcf-a273-4a06-5979f874e7f7" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceConfiguration">
      <topicdata name="ServiceConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="ServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceConfiguration.Authentication" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Authorization" />
        <element api="P:System.ServiceModel.ServiceConfiguration.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceConfiguration.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Credentials" />
        <element api="P:System.ServiceModel.ServiceConfiguration.Description" />
        <element api="P:System.ServiceModel.ServiceConfiguration.IdentityConfiguration" />
        <element api="P:System.ServiceModel.ServiceConfiguration.OpenTimeout" />
        <element api="P:System.ServiceModel.ServiceConfiguration.UseIdentityConfiguration" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" />
      </containers>
      <file name="3105dcd6-999d-89d6-9a6d-94c4a2a74d66" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint">
      <topicdata name="AddServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="a325dc3d-62f9-7ad4-abbe-c91e26176d1c" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration">
      <topicdata name="LoadFromConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceConfiguration" />
      <apidata name="LoadFromConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration" />
        <element api="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration(System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="9554d592-9c52-c6a9-8c90-e981568a81d8" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="91410004-98b0-5790-059f-55f662c9c891" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="b7d7b21a-c541-2811-bc8c-db39129c8daa" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="870ecb67-999e-d527-1800-e8f8e0c99c45" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="2e7fa04d-7855-87ec-ed60-f40cfb6d97dc" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="4ffa44ba-823c-c121-0a7c-0e6634c90323" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.Authentication">
      <topicdata group="api" />
      <apidata name="Authentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authentication" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceAuthenticationBehavior" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="529cde99-85df-d0eb-a8d2-ed038139be72" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.Authorization">
      <topicdata group="api" />
      <apidata name="Authorization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authorization" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="d82487c1-25e6-10a7-a68d-8228346e73ae" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.BaseAddresses">
      <topicdata group="api" />
      <apidata name="BaseAddresses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseAddresses" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="3b76cad8-6c3e-45e4-61ec-6510afd23630" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.CloseTimeout">
      <topicdata group="api" />
      <apidata name="CloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CloseTimeout" />
      <setter name="set_CloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="30e3ebdd-b665-ddcb-8349-fb932c7dc189" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Credentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="21d221b6-09b5-d1e2-c01b-1e48ddf25055" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="0116d398-7089-83b2-e658-c3084e443622" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.EnableProtocol(System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name="EnableProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="protocol">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="53145044-b768-3d6e-167f-acbc77302790" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.IdentityConfiguration">
      <topicdata group="api" />
      <apidata name="IdentityConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IdentityConfiguration" />
      <setter name="set_IdentityConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.IdentityConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="4cde9f2f-44d1-5d84-8ddf-6010732fac7b" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration">
      <topicdata group="api" />
      <apidata name="LoadFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="cb742b58-703f-9b15-7f66-5fe7062728ed" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration(System.Configuration.Configuration)">
      <topicdata group="api" />
      <apidata name="LoadFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.Configuration.Configuration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="46456432-6add-53fe-2087-7f8ee1f23b27" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.OpenTimeout">
      <topicdata group="api" />
      <apidata name="OpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OpenTimeout" />
      <setter name="set_OpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="38f21382-92aa-ecd2-03f4-403efb7fd847" />
    </api>
    <api id="M:System.ServiceModel.ServiceConfiguration.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
      <topicdata group="api" />
      <apidata name="SetEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="relativeAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="57e7ee79-19df-44c7-777a-731d1f5ac3d3" />
    </api>
    <api id="P:System.ServiceModel.ServiceConfiguration.UseIdentityConfiguration">
      <topicdata group="api" />
      <apidata name="UseIdentityConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseIdentityConfiguration" />
      <setter name="set_UseIdentityConfiguration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceConfiguration" ref="true" />
      </containers>
      <file name="bf312afd-2074-ac79-0eda-4a55a8010008" />
    </api>
    <api id="T:System.ServiceModel.ServiceContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6ec087ce-d2bc-722c-7632-4bdc64210a29" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="f7b6d56d-5584-f926-b86f-d282481ec518" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="7ab3707b-d130-3294-1116-3b1f23562978" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="501a5236-72d7-5919-8288-571d12f0d1f1" />
    </api>
    <api id="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="796619ab-6b2a-4928-3d30-808645e31db3" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <topicdata group="api" />
      <apidata name="CallbackContract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CallbackContract" />
      <setter name="set_CallbackContract" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="675e24e1-52fa-50c0-2215-b34470e9ad04" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <topicdata group="api" />
      <apidata name="ConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigurationName" />
      <setter name="set_ConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="4a99e0f6-5a81-4151-059c-d8ce018fd320" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="e0d9f743-1985-3a44-ea9a-8ae2b76d1c2f" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="819680b3-82f9-6758-53a2-966af01a82e1" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="5c521378-9957-9fd8-d69d-e8a8c1b2c6ef" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="b9df2f70-7c30-5518-38b2-b8155dcfa394" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
      <topicdata group="api" />
      <apidata name="SessionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionMode" />
      <setter name="set_SessionMode" />
      <returns>
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="31e091af-5698-58ad-08be-83357d26c133" />
    </api>
    <api id="T:System.ServiceModel.ServiceHost">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHost" />
      <apidata name="ServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
          <type api="T:System.ServiceModel.Web.WebServiceHost" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8b3a18a4-0892-9625-78f2-a013e056cc0d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceHost">
      <topicdata name="ServiceHost" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceHost" />
      <apidata name="ServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceHost.#ctor">
          <element api="M:System.ServiceModel.ServiceHost.#ctor" />
          <element api="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
          <element api="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.ServiceModel.ServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.ServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" />
      </containers>
      <file name="54fccecc-31b1-d054-c5c3-978332e941ef" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceHost">
      <topicdata name="ServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceHost" />
      <apidata name="ServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.ServiceModel.ServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.ServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" />
      </containers>
      <file name="48954b8c-3136-20e7-2888-3714fb9acba5" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceHost">
      <topicdata name="ServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceHost" />
      <apidata name="ServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" />
      </containers>
      <file name="3ea29819-dda4-2cb6-1a68-c2690396c420" />
    </api>
    <api id="Events.T:System.ServiceModel.ServiceHost">
      <topicdata name="ServiceHost" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ServiceHost" />
      <apidata name="ServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" />
      </containers>
      <file name="4c6b18fa-eeec-74c8-c6a8-d0b464f37656" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceHost.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHost" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHost.#ctor" />
        <element api="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
        <element api="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="50175d36-345f-a701-06d6-2dd0cbf858d5" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint">
      <topicdata name="AddServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHost" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="4a0ae023-0d92-f030-547e-f9b215434bff" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceHost.InitializeDescription">
      <topicdata name="InitializeDescription" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHost" />
      <apidata name="InitializeDescription" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="22d297c8-6d85-c718-7594-f4468fd3bded" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ServiceHost.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="38d16fa1-63fd-3607-ec4f-95fe8ef86a2b" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceHost.#ctor" />
      <parameters>
        <parameter name="singletonInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="40c8c53b-50f2-8942-f0bb-b94cafc8e1e2" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceHost.#ctor" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="2d5c9b69-7d0f-4f05-7d29-8a86de44051a" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="671f320f-5576-8903-1f2b-75c04137dbe2" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="c75d96b3-ac74-be40-fd57-114569d9e837" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="73669c31-d173-86f7-dc09-4646c9aeb19e" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="44d2a88e-0f5e-d1e5-b256-9832e820b016" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="0451112d-c834-4a05-cdf2-51598f6de533" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="implementedContracts" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="6c819197-bcd7-2801-37c4-cfb8bc74d039" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
      <topicdata group="api" />
      <apidata name="InitializeDescription" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ServiceHost.InitializeDescription" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="singletonInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseAddresses">
          <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="ed55ec3e-a404-6e49-ddd9-3a2a8c62b5e2" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
      <topicdata group="api" />
      <apidata name="InitializeDescription" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ServiceHost.InitializeDescription" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses">
          <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="54e08577-5892-ac58-137c-02f98ab1a233" />
    </api>
    <api id="M:System.ServiceModel.ServiceHost.OnClosed">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.OnClosed">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="016e33de-1178-a9aa-bcf2-ddb764cfcd15" />
    </api>
    <api id="P:System.ServiceModel.ServiceHost.SingletonInstance">
      <topicdata group="api" />
      <apidata name="SingletonInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SingletonInstance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </containers>
      <file name="f87c7188-71ca-a047-5603-b7d0b0789a7f" />
    </api>
    <api id="T:System.ServiceModel.ServiceHostBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHostBase" />
      <apidata name="ServiceHostBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
          <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0bd81bdc-6c5a-e74b-0a15-a07428b77d7f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceHostBase">
      <topicdata name="ServiceHostBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceHostBase" />
      <apidata name="ServiceHostBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceHostBase.#ctor" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHostBase.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHostBase.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" />
      </containers>
      <file name="43ca1eeb-1203-d7d1-a021-22381ee5d996" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceHostBase">
      <topicdata name="ServiceHostBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceHostBase" />
      <apidata name="ServiceHostBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHostBase.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ServiceHostBase.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.ServiceHostBase.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" />
      </containers>
      <file name="b5f7e186-fdd0-c714-9198-d8540678f112" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceHostBase">
      <topicdata name="ServiceHostBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceHostBase" />
      <apidata name="ServiceHostBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" />
      </containers>
      <file name="21a97a80-f1ce-560a-6dd7-56e12191a7cf" />
    </api>
    <api id="Events.T:System.ServiceModel.ServiceHostBase">
      <topicdata name="ServiceHostBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ServiceHostBase" />
      <apidata name="ServiceHostBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" />
      </containers>
      <file name="20aba261-b77c-599b-5738-f5b08beadca1" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint">
      <topicdata name="AddServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHostBase" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="9487286b-1da9-b0e5-21b3-edadff6dabd1" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="e82c05d3-d740-2e3c-3529-5b4b74567f0b" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
      <topicdata group="api" />
      <apidata name="AddBaseAddress" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseAddress">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="f56a69d2-0381-e160-25b2-2c4372de006c" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
      <topicdata group="api" />
      <apidata name="AddDefaultEndpoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="ccd0623e-b249-cec8-879f-741863923986" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="18d92f03-2561-2c8b-b49b-876d587a5873" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="8ebce901-b792-d8df-18ad-28e8be0756e8" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="4686395a-cb03-21e4-ac9e-85acff3deec7" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="6b0ac697-b5f2-74d8-74b9-ed9c520519be" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ServiceHostBase.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="7089b90c-c48d-30ee-f671-15dd075ae648" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="52cd39be-eb46-e100-823e-3c6475241afd" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.Authentication">
      <topicdata group="api" />
      <apidata name="Authentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authentication" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceAuthenticationBehavior" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="734dd096-8cee-edce-10a4-41ff3f1b537d" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.Authorization">
      <topicdata group="api" />
      <apidata name="Authorization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authorization" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="35ada92c-8537-fbe9-4570-2706d5c2a9d8" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
      <topicdata group="api" />
      <apidata name="BaseAddresses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseAddresses" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="14be1840-57c0-b9b2-9d82-b2cd025e780b" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
      <topicdata group="api" />
      <apidata name="ChannelDispatchers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelDispatchers" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="bc13acae-cca0-67b5-6074-ca74f1389b1b" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
      <topicdata group="api" />
      <apidata name="CloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CloseTimeout" />
      <setter name="set_CloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="7562a3e0-a9b0-48a3-c64b-cae818eb48cd" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="implementedContracts" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="352f9e81-b383-6a69-92f6-7161635c06f4" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Credentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="b700e337-cf6b-9f1d-bd2b-554e2de5ed50" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
      <topicdata group="api" />
      <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="7daced33-e94d-8e12-60d3-c3b49e34afb2" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
      <topicdata group="api" />
      <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultOpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="e0d5d22d-ad22-9d27-83f5-431f1c542ff4" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="02ea0e21-f49b-3410-8534-8ab6e1395652" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="2fcc2fcc-a2fb-c79f-aede-6d9569ef658b" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
      <topicdata group="api" />
      <apidata name="ImplementedContracts" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImplementedContracts" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="5d4c367b-073c-ddac-c4d6-fb93159b9ed2" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
      <topicdata group="api" />
      <apidata name="IncrementManualFlowControlLimit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="incrementBy">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="bf59019c-c3e9-f767-54a8-a5d2bd347966" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
      <topicdata group="api" />
      <apidata name="InitializeDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseAddresses">
          <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="2044c06c-be6d-8f67-1da8-1b8ee1132e94" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
      <topicdata group="api" />
      <apidata name="InitializeRuntime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="70786755-6a4b-602c-3fea-604d2865b95a" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
      <topicdata group="api" />
      <apidata name="LoadConfigurationSection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceSection">
          <type api="T:System.ServiceModel.Configuration.ServiceElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="3f1e477e-f71b-2e57-9f5b-dc33ec0f1787" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
      <topicdata group="api" />
      <apidata name="ManualFlowControlLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ManualFlowControlLimit" />
      <setter name="set_ManualFlowControlLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="8d680ae6-5b15-ea40-6c82-ea39207a9303" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="603b1c73-70c2-818c-f368-cd00f62fde8b" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="afe13fe1-eded-fd57-7454-6656cce05f84" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="07f60b72-1343-d261-594d-41708d7fef36" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="c852e6d8-9eb0-8188-1ca0-f4fa7163496f" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnClosed">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="cbee5257-7559-e35a-ab22-dbcbacb6b231" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="d19202e2-78d7-999a-7dad-6429cf38f9e9" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="08b1f332-8e2a-5597-57e2-76d906b60cd0" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="07277377-50e2-2c81-3f93-367cdf244d15" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.OnOpened">
      <topicdata group="api" />
      <apidata name="OnOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="80a9cd5b-9767-3e2a-81cb-ff6203518667" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
      <topicdata group="api" />
      <apidata name="OpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OpenTimeout" />
      <setter name="set_OpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="ca24540b-d6ce-6284-8144-54d1a86179f2" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
      <topicdata group="api" />
      <apidata name="ReleasePerformanceCounters" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="f624706e-c259-0ac5-1d7b-4c4de1c9d93f" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
      <topicdata group="api" />
      <apidata name="SetEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="relativeAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="76845249-b0a4-7709-0908-d5493c1a6b97" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="97fbd5eb-e658-9166-e103-2e8733198610" />
    </api>
    <api id="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
      <topicdata group="api" />
      <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownMessageReceived" />
      <remover name="remove_UnknownMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </containers>
      <file name="3c9c191d-885e-67ae-313e-1bc39b78be83" />
    </api>
    <api id="T:System.ServiceModel.ServiceHostingEnvironment">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceHostingEnvironment" />
      <apidata name="ServiceHostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="927dd131-cad8-1115-8bcf-afc60237a400" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceHostingEnvironment">
      <topicdata name="ServiceHostingEnvironment" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceHostingEnvironment" />
      <apidata name="ServiceHostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled" />
        <element api="M:System.ServiceModel.ServiceHostingEnvironment.EnsureInitialized" />
        <element api="M:System.ServiceModel.ServiceHostingEnvironment.EnsureServiceAvailable(System.String)" />
        <element api="P:System.ServiceModel.ServiceHostingEnvironment.MultipleSiteBindingsEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" />
      </containers>
      <file name="c3a8a746-4c1f-146f-7caa-c57991922ff6" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceHostingEnvironment">
      <topicdata name="ServiceHostingEnvironment" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceHostingEnvironment" />
      <apidata name="ServiceHostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHostingEnvironment.EnsureInitialized" />
        <element api="M:System.ServiceModel.ServiceHostingEnvironment.EnsureServiceAvailable(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" />
      </containers>
      <file name="25c7ca81-e7d4-613c-6008-893f82067db3" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceHostingEnvironment">
      <topicdata name="ServiceHostingEnvironment" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceHostingEnvironment" />
      <apidata name="ServiceHostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled" />
        <element api="P:System.ServiceModel.ServiceHostingEnvironment.MultipleSiteBindingsEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" />
      </containers>
      <file name="4f949164-cb0c-a2df-a7fe-7efacd5bc63c" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled">
      <topicdata group="api" />
      <apidata name="AspNetCompatibilityEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AspNetCompatibilityEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" ref="true" />
      </containers>
      <file name="91ff2640-e1e7-a388-4eea-473f6557bdc9" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostingEnvironment.EnsureInitialized">
      <topicdata group="api" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7f355850-7c01-93b2-f554-b6b1d0ba3974" />
    </api>
    <api id="M:System.ServiceModel.ServiceHostingEnvironment.EnsureServiceAvailable(System.String)">
      <topicdata group="api" />
      <apidata name="EnsureServiceAvailable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" ref="true" />
      </containers>
      <file name="c1caf6e5-d225-4800-e889-a2a886b67d93" />
    </api>
    <api id="P:System.ServiceModel.ServiceHostingEnvironment.MultipleSiteBindingsEnabled">
      <topicdata group="api" />
      <apidata name="MultipleSiteBindingsEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MultipleSiteBindingsEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceHostingEnvironment" ref="true" />
      </containers>
      <file name="ca8e7dab-bc4d-b1d4-977e-e4896a03ec9a" />
    </api>
    <api id="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b810ede4-b572-baaf-91d6-869f8fef8f67" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor">
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="24e74c39-4f73-e0b6-4afe-8f392aafc23c" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="eec1e6c5-49c3-c73e-72b9-02f0261ffb81" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="75673bd1-2ed0-cdd2-0721-197220db8f82" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="32501f32-a84c-2528-f741-0945f135b8a4" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="270794ca-67c7-e945-4d78-6f606913b5bd" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="declaringType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="6f11c7cf-ca8e-f41e-4931-711c07baae36" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="9ea3fbf1-23c4-306b-dcb4-a15f573831a3" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <topicdata group="api" />
      <apidata name="DeclaringType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DeclaringType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="479c97af-3759-98ea-99ad-69e1e4428a0f" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="203ca0e0-9204-4402-d181-53b9a8d8c1f7" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="429eaf84-64f2-2051-1b56-df5c173345c3" />
    </api>
    <api id="T:System.ServiceModel.ServiceSecurityContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceSecurityContext" />
      <apidata name="ServiceSecurityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="892b3ca1-66fe-7898-b3bb-2f643c7ab514" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceSecurityContext">
      <topicdata name="ServiceSecurityContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceSecurityContext" />
      <apidata name="ServiceSecurityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceSecurityContext.#ctor">
          <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)" />
          <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
          <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
        </element>
        <element api="P:System.ServiceModel.ServiceSecurityContext.Anonymous" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.Current" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" />
      </containers>
      <file name="0390f274-180f-9b5b-5293-bb63bda4789e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceSecurityContext">
      <topicdata name="ServiceSecurityContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceSecurityContext" />
      <apidata name="ServiceSecurityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" />
      </containers>
      <file name="e8b9903a-e751-7538-b08e-9325b4c89153" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceSecurityContext">
      <topicdata name="ServiceSecurityContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceSecurityContext" />
      <apidata name="ServiceSecurityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceSecurityContext.Anonymous" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.Current" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
        <element api="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" />
      </containers>
      <file name="2c1af8c2-d901-b1d8-9b78-2946f53589eb" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceSecurityContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceSecurityContext" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)" />
        <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
        <element api="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="d75b9bb5-8f74-4e6b-7ce8-ca1f2991d0b4" />
    </api>
    <api id="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceSecurityContext.#ctor" />
      <parameters>
        <parameter name="authorizationPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="e71a6a1b-1a3a-fd91-8689-56922da6ae71" />
    </api>
    <api id="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceSecurityContext.#ctor" />
      <parameters>
        <parameter name="authorizationContext">
          <type api="T:System.IdentityModel.Policy.AuthorizationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="7e3f8415-688b-01a2-4128-dbef5ffd89dc" />
    </api>
    <api id="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceSecurityContext.#ctor" />
      <parameters>
        <parameter name="authorizationContext">
          <type api="T:System.IdentityModel.Policy.AuthorizationContext" ref="true" />
        </parameter>
        <parameter name="authorizationPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="33144951-f2ad-77a7-d68e-068114973525" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
      <topicdata group="api" />
      <apidata name="Anonymous" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Anonymous" />
      <returns>
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="613ddafb-a284-99c1-3e94-6f73db454ad4" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
      <topicdata group="api" />
      <apidata name="AuthorizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorizationContext" />
      <returns>
        <type api="T:System.IdentityModel.Policy.AuthorizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="62080fa7-61f2-638c-ccc1-e13ff24818fa" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
      <topicdata group="api" />
      <apidata name="AuthorizationPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthorizationPolicies" />
      <setter name="set_AuthorizationPolicies" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="edfecceb-6c11-da41-7744-db37fd0e6361" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="07a1dbf2-c81c-0be3-1280-4ba99ea6ead0" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
      <topicdata group="api" />
      <apidata name="IsAnonymous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAnonymous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="ccdd1a44-8900-5d56-b863-412b23e1cae5" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
      <topicdata group="api" />
      <apidata name="PrimaryIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrimaryIdentity" />
      <returns>
        <type api="T:System.Security.Principal.IIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="f96f602a-462f-e6d0-975a-513d708361ac" />
    </api>
    <api id="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </containers>
      <file name="f1dca614-e934-1c27-0aff-792ccbd9d56b" />
    </api>
    <api id="T:System.ServiceModel.SessionMode">
      <topicdata group="api" />
      <apidata name="SessionMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.SessionMode.Allowed" />
        <element api="F:System.ServiceModel.SessionMode.Required" />
        <element api="F:System.ServiceModel.SessionMode.NotAllowed" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8470a483-3331-cfc8-493a-5d14c90d7ae1" />
    </api>
    <api id="F:System.ServiceModel.SessionMode.Allowed">
      <topicdata group="api" notopic="" />
      <apidata name="Allowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </containers>
      <file name="c5b4bda8-2001-77d4-0fed-464ce94f74fe" />
    </api>
    <api id="F:System.ServiceModel.SessionMode.NotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="NotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </containers>
      <file name="4ca13727-ec41-1acc-0bab-ff3f8f75d802" />
    </api>
    <api id="F:System.ServiceModel.SessionMode.Required">
      <topicdata group="api" notopic="" />
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SessionMode" ref="false" />
      </containers>
      <file name="9ad808d4-985c-940c-84c7-a0f216096312" />
    </api>
    <api id="T:System.ServiceModel.SpnEndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.SpnEndpointIdentity" />
      <apidata name="SpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="276e2ba0-d82b-4d21-213a-5ce963eb2398" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.SpnEndpointIdentity">
      <topicdata name="SpnEndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.SpnEndpointIdentity" />
      <apidata name="SpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.SpnEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
        <element api="Overload:System.ServiceModel.SpnEndpointIdentity.#ctor">
          <element api="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)" />
        </element>
        <element api="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" />
      </containers>
      <file name="349bc230-fe33-123f-1ba2-ae0c50079696" />
    </api>
    <api id="Methods.T:System.ServiceModel.SpnEndpointIdentity">
      <topicdata name="SpnEndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.SpnEndpointIdentity" />
      <apidata name="SpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.SpnEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" />
      </containers>
      <file name="8a10782c-23d7-c444-9992-a91d1a4aaf11" />
    </api>
    <api id="Properties.T:System.ServiceModel.SpnEndpointIdentity">
      <topicdata name="SpnEndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.SpnEndpointIdentity" />
      <apidata name="SpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" />
      </containers>
      <file name="7de645a9-bc50-f070-95fd-e88f834c5e7a" />
    </api>
    <api id="Overload:System.ServiceModel.SpnEndpointIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.SpnEndpointIdentity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" ref="true" />
      </containers>
      <file name="a3597dbb-ac0a-ef65-4fef-2315cc4a9754" />
    </api>
    <api id="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.SpnEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" ref="true" />
      </containers>
      <file name="496a95ab-3fc0-a9ad-3cc5-78fc7b0c1bde" />
    </api>
    <api id="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.SpnEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="spnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" ref="true" />
      </containers>
      <file name="89f08c9c-841f-32c1-c5ae-2ed0d743e320" />
    </api>
    <api id="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime">
      <topicdata group="api" />
      <apidata name="SpnLookupTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SpnLookupTime" />
      <setter name="set_SpnLookupTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.SpnEndpointIdentity" ref="true" />
      </containers>
      <file name="23edb6ef-8c17-6280-f049-6f982f32efc0" />
    </api>
    <api id="T:System.ServiceModel.TcpClientCredentialType">
      <topicdata group="api" />
      <apidata name="TcpClientCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.TcpClientCredentialType.None" />
        <element api="F:System.ServiceModel.TcpClientCredentialType.Windows" />
        <element api="F:System.ServiceModel.TcpClientCredentialType.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f51abc00-f52d-05d6-be66-739184c5e456" />
    </api>
    <api id="F:System.ServiceModel.TcpClientCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </containers>
      <file name="a78dc4b3-84ab-9247-5716-616f6951c9ee" />
    </api>
    <api id="F:System.ServiceModel.TcpClientCredentialType.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </containers>
      <file name="16fd2614-df6b-0a8c-cf3c-944673f194db" />
    </api>
    <api id="F:System.ServiceModel.TcpClientCredentialType.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </containers>
      <file name="19f4ef45-6d08-1492-6814-f3808e8d4a6e" />
    </api>
    <api id="T:System.ServiceModel.TcpTransportSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.TcpTransportSecurity" />
      <apidata name="TcpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.TcpTransportSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8b2d2a0f-3447-2547-297f-17f85babd16f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.TcpTransportSecurity">
      <topicdata name="TcpTransportSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.TcpTransportSecurity" />
      <apidata name="TcpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.TcpTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.TcpTransportSecurity.#ctor" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel" />
        <element api="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.SslProtocols" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" />
      </containers>
      <file name="2d4ac393-055a-89d3-a92a-3c93ef13e3ff" />
    </api>
    <api id="Methods.T:System.ServiceModel.TcpTransportSecurity">
      <topicdata name="TcpTransportSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.TcpTransportSecurity" />
      <apidata name="TcpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.TcpTransportSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" />
      </containers>
      <file name="ba2f8bef-7daa-9f94-de6d-10b2cd119dad" />
    </api>
    <api id="Properties.T:System.ServiceModel.TcpTransportSecurity">
      <topicdata name="TcpTransportSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.TcpTransportSecurity" />
      <apidata name="TcpTransportSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.TcpTransportSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel" />
        <element api="P:System.ServiceModel.TcpTransportSecurity.SslProtocols" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" />
      </containers>
      <file name="9b6c87a4-79e5-8d5e-bdaf-fc7ce1459550" />
    </api>
    <api id="M:System.ServiceModel.TcpTransportSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <file name="023b63c9-39ef-ad71-2f51-8f8c695c9f13" />
    </api>
    <api id="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType">
      <topicdata group="api" />
      <apidata name="ClientCredentialType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredentialType" />
      <setter name="set_ClientCredentialType" />
      <returns>
        <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TcpClientCredentialType" ref="false" />
            <enumValue>
              <field name="Windows" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ed89d5af-79de-0e38-9c56-38ae6eeb1418" />
    </api>
    <api id="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy">
      <topicdata group="api" />
      <apidata name="ExtendedProtectionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedProtectionPolicy" />
      <setter name="set_ExtendedProtectionPolicy" />
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <file name="837749fa-bbcf-558e-345b-4515edcc9c01" />
    </api>
    <api id="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
            <enumValue>
              <field name="EncryptAndSign" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f4dfd6aa-aef8-d215-19c2-7d1ed1ef3306" />
    </api>
    <api id="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <topicdata group="api" />
      <apidata name="ShouldSerializeExtendedProtectionPolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1cf74310-295f-8144-e7f8-906330341f9e" />
    </api>
    <api id="P:System.ServiceModel.TcpTransportSecurity.SslProtocols">
      <topicdata group="api" />
      <apidata name="SslProtocols" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SslProtocols" />
      <setter name="set_SslProtocols" />
      <returns>
        <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TcpTransportSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="Ssl3" />
              <field name="Tls" />
              <field name="Tls11" />
              <field name="Tls12" />
              <field name="Default" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4355a468-0c37-48a8-72a7-f0eb1dbea12d" />
    </api>
    <api id="T:System.ServiceModel.TransactionFlowAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.TransactionFlowAttribute" />
      <apidata name="TransactionFlowAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d412dd60-30d9-3812-902c-a1aa2e5bd11d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.TransactionFlowAttribute">
      <topicdata name="TransactionFlowAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.TransactionFlowAttribute" />
      <apidata name="TransactionFlowAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
        <element api="P:System.ServiceModel.TransactionFlowAttribute.Transactions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" />
      </containers>
      <file name="52c79347-d282-360b-1520-9b905c6ff535" />
    </api>
    <api id="Methods.T:System.ServiceModel.TransactionFlowAttribute">
      <topicdata name="TransactionFlowAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.TransactionFlowAttribute" />
      <apidata name="TransactionFlowAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
        <element api="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" />
      </containers>
      <file name="0edb35fc-4d8c-00f6-db47-fdd05a025051" />
    </api>
    <api id="Properties.T:System.ServiceModel.TransactionFlowAttribute">
      <topicdata name="TransactionFlowAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.TransactionFlowAttribute" />
      <apidata name="TransactionFlowAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.TransactionFlowAttribute.Transactions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" />
      </containers>
      <file name="e42f78fb-6911-6931-ca74-a1bc7284b47a" />
    </api>
    <api id="M:System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transactions">
          <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="bde6d24c-f2c2-681e-e77a-0ca7b61d625e" />
    </api>
    <api id="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IOperationBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="ac572385-33dd-84c4-8363-a4fe9f1945f3" />
    </api>
    <api id="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <topicdata group="api" eiiName="IOperationBehavior.ApplyClientBehavior" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="faa18db7-4b06-9aad-de85-0da53b2e0921" />
    </api>
    <api id="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <topicdata group="api" eiiName="IOperationBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="dispatch">
          <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="1f238507-dc07-1a3f-8511-cd18b20fc766" />
    </api>
    <api id="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <topicdata group="api" eiiName="IOperationBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <type api="T:System.ServiceModel.Description.IOperationBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="ec1061e6-fcb1-1ad6-de4b-e8dd09061a29" />
    </api>
    <api id="P:System.ServiceModel.TransactionFlowAttribute.Transactions">
      <topicdata group="api" />
      <apidata name="Transactions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Transactions" />
      <returns>
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
      </containers>
      <file name="d3ab0158-e2f7-3d57-0a0d-74764c5eb76d" />
    </api>
    <api id="T:System.ServiceModel.TransactionFlowOption">
      <topicdata group="api" />
      <apidata name="TransactionFlowOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.TransactionFlowOption.NotAllowed" />
        <element api="F:System.ServiceModel.TransactionFlowOption.Allowed" />
        <element api="F:System.ServiceModel.TransactionFlowOption.Mandatory" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="b35cab89-f5e3-1c4c-923a-a298aae0f7c2" />
    </api>
    <api id="F:System.ServiceModel.TransactionFlowOption.Allowed">
      <topicdata group="api" notopic="" />
      <apidata name="Allowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </containers>
      <file name="3ca30294-16f2-44e0-7bfb-a75f31e3ff4d" />
    </api>
    <api id="F:System.ServiceModel.TransactionFlowOption.Mandatory">
      <topicdata group="api" notopic="" />
      <apidata name="Mandatory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </containers>
      <file name="ac026d4d-a6ed-fb5a-b42c-1dad0af8b76f" />
    </api>
    <api id="F:System.ServiceModel.TransactionFlowOption.NotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="NotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
      </containers>
      <file name="28bbf9a2-fcf1-9b87-90b1-d815037ed861" />
    </api>
    <api id="T:System.ServiceModel.TransactionProtocol">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.TransactionProtocol" />
      <apidata name="TransactionProtocol" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2ffba703-34c1-632d-3721-97d37b5812ce" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.TransactionProtocol">
      <topicdata name="TransactionProtocol" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.TransactionProtocol" />
      <apidata name="TransactionProtocol" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.TransactionProtocol.#ctor" />
        <element api="P:System.ServiceModel.TransactionProtocol.Default" />
        <element api="P:System.ServiceModel.TransactionProtocol.OleTransactions" />
        <element api="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11" />
        <element api="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" />
      </containers>
      <file name="fe642f58-714e-335f-da27-aaff6026fb98" />
    </api>
    <api id="Methods.T:System.ServiceModel.TransactionProtocol">
      <topicdata name="TransactionProtocol" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.TransactionProtocol" />
      <apidata name="TransactionProtocol" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" />
      </containers>
      <file name="ebbf25d0-18ba-354f-8b3b-bccd7a3d4524" />
    </api>
    <api id="Properties.T:System.ServiceModel.TransactionProtocol">
      <topicdata name="TransactionProtocol" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.TransactionProtocol" />
      <apidata name="TransactionProtocol" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.TransactionProtocol.Default" />
        <element api="P:System.ServiceModel.TransactionProtocol.OleTransactions" />
        <element api="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11" />
        <element api="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" />
      </containers>
      <file name="d275cbdd-6674-d2df-d0cd-61d094143de4" />
    </api>
    <api id="M:System.ServiceModel.TransactionProtocol.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </containers>
      <file name="d1b81f32-5298-bdff-ee25-f0fb26b357bd" />
    </api>
    <api id="P:System.ServiceModel.TransactionProtocol.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </containers>
      <file name="16630feb-26d7-fa69-3a1f-5334840086e3" />
    </api>
    <api id="P:System.ServiceModel.TransactionProtocol.OleTransactions">
      <topicdata group="api" />
      <apidata name="OleTransactions" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OleTransactions" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </containers>
      <file name="55781fc5-25f2-03c1-7ca6-71ef59293e62" />
    </api>
    <api id="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11">
      <topicdata group="api" />
      <apidata name="WSAtomicTransaction11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSAtomicTransaction11" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </containers>
      <file name="cb749b70-5c57-1bb6-358e-825469d5f280" />
    </api>
    <api id="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004">
      <topicdata group="api" />
      <apidata name="WSAtomicTransactionOctober2004" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSAtomicTransactionOctober2004" />
      <returns>
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransactionProtocol" ref="true" />
      </containers>
      <file name="64ed7149-4fe7-deba-cc2d-f2d925753514" />
    </api>
    <api id="T:System.ServiceModel.TransferMode">
      <topicdata group="api" />
      <apidata name="TransferMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.TransferMode.Buffered" />
        <element api="F:System.ServiceModel.TransferMode.Streamed" />
        <element api="F:System.ServiceModel.TransferMode.StreamedRequest" />
        <element api="F:System.ServiceModel.TransferMode.StreamedResponse" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6b8a4f72-33cd-2994-2449-e6f1d889c3e2" />
    </api>
    <api id="F:System.ServiceModel.TransferMode.Buffered">
      <topicdata group="api" notopic="" />
      <apidata name="Buffered" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </containers>
      <file name="df8e3c6e-6704-4aa0-39bf-6fc4bbc8f1b0" />
    </api>
    <api id="F:System.ServiceModel.TransferMode.Streamed">
      <topicdata group="api" notopic="" />
      <apidata name="Streamed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </containers>
      <file name="253f5aad-22bf-b0e3-9175-00c97ad9c3c3" />
    </api>
    <api id="F:System.ServiceModel.TransferMode.StreamedRequest">
      <topicdata group="api" notopic="" />
      <apidata name="StreamedRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </containers>
      <file name="7d16aaa6-bbc6-7358-39e2-4a7938c2fb76" />
    </api>
    <api id="F:System.ServiceModel.TransferMode.StreamedResponse">
      <topicdata group="api" notopic="" />
      <apidata name="StreamedResponse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </containers>
      <file name="0c0c5b34-9841-7e01-5539-630065fbd340" />
    </api>
    <api id="T:System.ServiceModel.UdpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.UdpBinding" />
      <apidata name="UdpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.UdpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="5d40f733-b085-e98d-db7f-e87f696f3f0c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.UdpBinding">
      <topicdata name="UdpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.UdpBinding" />
      <apidata name="UdpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.UdpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.UdpBinding.#ctor">
          <element api="M:System.ServiceModel.UdpBinding.#ctor" />
          <element api="M:System.ServiceModel.UdpBinding.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.UdpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.UdpBinding.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.UdpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxPendingMessagesTotalSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxRetransmitCount" />
        <element api="P:System.ServiceModel.UdpBinding.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.UdpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.UdpBinding.Scheme" />
        <element api="M:System.ServiceModel.UdpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.UdpBinding.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.UdpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.UdpBinding.TextEncoding" />
        <element api="P:System.ServiceModel.UdpBinding.TimeToLive" />
        <element api="Overload:System.ServiceModel.UdpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" />
      </containers>
      <file name="7b4a1806-d027-7cd7-b93f-f41f1d073069" />
    </api>
    <api id="Methods.T:System.ServiceModel.UdpBinding">
      <topicdata name="UdpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.UdpBinding" />
      <apidata name="UdpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.UdpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.UdpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.UdpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.UdpBinding.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.UdpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.UdpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" />
      </containers>
      <file name="8a955e7b-5317-3636-db0f-8b65626b3761" />
    </api>
    <api id="Properties.T:System.ServiceModel.UdpBinding">
      <topicdata name="UdpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.UdpBinding" />
      <apidata name="UdpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.UdpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.UdpBinding.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.UdpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxPendingMessagesTotalSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.UdpBinding.MaxRetransmitCount" />
        <element api="P:System.ServiceModel.UdpBinding.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.UdpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.UdpBinding.Scheme" />
        <element api="P:System.ServiceModel.UdpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.UdpBinding.TextEncoding" />
        <element api="P:System.ServiceModel.UdpBinding.TimeToLive" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" />
      </containers>
      <file name="858c56d7-a0e8-7fd5-44d7-b16c2f5e19b8" />
    </api>
    <api id="Overload:System.ServiceModel.UdpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.UdpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.UdpBinding.#ctor" />
        <element api="M:System.ServiceModel.UdpBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="d510fc3f-dee1-996c-0dd8-48c7375b42ef" />
    </api>
    <api id="M:System.ServiceModel.UdpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.UdpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="b1e35be1-9077-c9f1-e552-6ff371d490e0" />
    </api>
    <api id="M:System.ServiceModel.UdpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.UdpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="783cd57c-258e-3b38-d110-0d3df04d9200" />
    </api>
    <api id="M:System.ServiceModel.UdpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="d04b9125-64b2-6f1d-6806-e9278603d820" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.DuplicateMessageHistoryLength">
      <topicdata group="api" />
      <apidata name="DuplicateMessageHistoryLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DuplicateMessageHistoryLength" />
      <setter name="set_DuplicateMessageHistoryLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f3648ba1-5585-8988-325b-8d05bb7ddd79" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="98e009ae-e556-258c-89c4-adff4a50d1e8" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.MaxPendingMessagesTotalSize">
      <topicdata group="api" />
      <apidata name="MaxPendingMessagesTotalSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxPendingMessagesTotalSize" />
      <setter name="set_MaxPendingMessagesTotalSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b077109e-afb9-9ae2-a458-9274af064cbc" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43ade6c6-aa4c-fdf7-25b7-0f19c5a9d8a2" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.MaxRetransmitCount">
      <topicdata group="api" />
      <apidata name="MaxRetransmitCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxRetransmitCount" />
      <setter name="set_MaxRetransmitCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e7941310-e26a-f7c3-7bf9-f26c3db9b5da" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.MulticastInterfaceId">
      <topicdata group="api" />
      <apidata name="MulticastInterfaceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastInterfaceId" />
      <setter name="set_MulticastInterfaceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="e783fde0-e74a-22b1-9cec-3fc8272c3857" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="9c4ed109-7568-204d-ac1a-395fac2b98c8" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="8f5f9f16-0169-3fef-fb54-bed3a9ed9996" />
    </api>
    <api id="M:System.ServiceModel.UdpBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="73490481-82cd-e42b-216a-9a1be4b55d2a" />
    </api>
    <api id="M:System.ServiceModel.UdpBinding.ShouldSerializeTextEncoding">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTextEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0415bc8d-5130-a3b5-3672-a1bf86f62acf" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="5a7ae2fb-0d76-270a-4bff-10430408cfbb" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.TextEncoding">
      <topicdata group="api" />
      <apidata name="TextEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextEncoding" />
      <setter name="set_TextEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <file name="1a73adb7-1ab1-91a1-7196-69f6908d6e5a" />
    </api>
    <api id="P:System.ServiceModel.UdpBinding.TimeToLive">
      <topicdata group="api" />
      <apidata name="TimeToLive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeToLive" />
      <setter name="set_TimeToLive" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Channels" module="System.ServiceModel.Channels" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UdpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f6736cb9-b21c-bd6e-7460-835bb331cecf" />
    </api>
    <api id="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="eba72d01-7a26-627e-fc5a-876761f25d4f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="0851b2cb-836b-f5d7-16b3-8a15decb7d2b" />
    </api>
    <api id="Methods.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="512f628d-3849-f0f8-b1d0-5fbf68b38edc" />
    </api>
    <api id="Properties.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="4a361bd3-a2cc-abda-4fc2-50f6699fb3b9" />
    </api>
    <api id="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </containers>
      <file name="9f028020-8899-2e57-a031-5cd8f24313a8" />
    </api>
    <api id="T:System.ServiceModel.UpnEndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.UpnEndpointIdentity" />
      <apidata name="UpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="43c81903-10bf-b20b-ef6f-4b6ba211868d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.UpnEndpointIdentity">
      <topicdata name="UpnEndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.UpnEndpointIdentity" />
      <apidata name="UpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.UpnEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
        <element api="Overload:System.ServiceModel.UpnEndpointIdentity.#ctor">
          <element api="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" />
      </containers>
      <file name="36e51397-24f1-d109-928e-50e3ca7d6d67" />
    </api>
    <api id="Methods.T:System.ServiceModel.UpnEndpointIdentity">
      <topicdata name="UpnEndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.UpnEndpointIdentity" />
      <apidata name="UpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.UpnEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" />
      </containers>
      <file name="744b3dd1-fee4-02b7-28c9-a37bb955470e" />
    </api>
    <api id="Properties.T:System.ServiceModel.UpnEndpointIdentity">
      <topicdata name="UpnEndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.UpnEndpointIdentity" />
      <apidata name="UpnEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" />
      </containers>
      <file name="d1073bb4-82a5-8ebb-932e-5ba5ed4bd95b" />
    </api>
    <api id="Overload:System.ServiceModel.UpnEndpointIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.UpnEndpointIdentity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" ref="true" />
      </containers>
      <file name="8a49a82c-3801-7b75-3712-83e94c4573e0" />
    </api>
    <api id="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.UpnEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" ref="true" />
      </containers>
      <file name="8ba7bfc8-2fe7-6861-b5c8-3fe974d5b12f" />
    </api>
    <api id="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.UpnEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="upnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UpnEndpointIdentity" ref="true" />
      </containers>
      <file name="a61c72c1-843b-fc64-8b2c-398fcd517e68" />
    </api>
    <api id="T:System.ServiceModel.UriSchemeKeyedCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.UriSchemeKeyedCollection" />
      <apidata name="UriSchemeKeyedCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="619eed5c-1017-073f-5139-e5c24713ee58" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.UriSchemeKeyedCollection">
      <topicdata name="UriSchemeKeyedCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.UriSchemeKeyedCollection" />
      <apidata name="UriSchemeKeyedCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Contains">
          <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
          <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)" />
        </element>
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Item">
          <element api="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)" />
          <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        </element>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Remove">
          <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
          <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)" />
        </element>
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems" />
        <element api="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" />
      </containers>
      <file name="dd8c0b48-b10c-d459-ba93-33fca949dd2c" />
    </api>
    <api id="Methods.T:System.ServiceModel.UriSchemeKeyedCollection">
      <topicdata name="UriSchemeKeyedCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.UriSchemeKeyedCollection" />
      <apidata name="UriSchemeKeyedCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Contains">
          <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
          <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)" />
        </element>
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Remove">
          <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
          <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)" />
        </element>
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems" />
        <element api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)" />
        <element api="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" />
      </containers>
      <file name="5f3b39d4-93fe-eb8c-0ac0-433ab89a7209" />
    </api>
    <api id="Properties.T:System.ServiceModel.UriSchemeKeyedCollection">
      <topicdata name="UriSchemeKeyedCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.UriSchemeKeyedCollection" />
      <apidata name="UriSchemeKeyedCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="Overload:System.ServiceModel.UriSchemeKeyedCollection.Item">
          <element api="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)" />
          <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        </element>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" />
      </containers>
      <file name="8f48c65a-b2c0-4e73-c5d0-f189064a5149" />
    </api>
    <api id="M:System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="addresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
      </containers>
      <file name="e7a3452e-35e9-8128-bcf1-8c30ea210aeb" />
    </api>
    <api id="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetKeyForItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)">
          <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
      </containers>
      <file name="8fee3cfa-1f96-e0dc-670e-877c5d4d7540" />
    </api>
    <api id="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)">
          <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
      </containers>
      <file name="c129d75d-7151-ba56-d9bd-02439037e705" />
    </api>
    <api id="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)">
          <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
      </containers>
      <file name="7d7e7711-c044-18d8-1bf5-e04770636cc5" />
    </api>
    <api id="T:System.ServiceModel.WebHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WebHttpBinding" />
      <apidata name="WebHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a5f1ff04-dd20-6b51-47c0-5acdb3fa4863" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WebHttpBinding">
      <topicdata name="WebHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WebHttpBinding" />
      <apidata name="WebHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WebHttpBinding.#ctor">
          <element api="M:System.ServiceModel.WebHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WebHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)" />
        </element>
        <element api="P:System.ServiceModel.WebHttpBinding.AllowCookies" />
        <element api="Overload:System.ServiceModel.WebHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.WebHttpBinding.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WebHttpBinding.ContentTypeMapper" />
        <element api="M:System.ServiceModel.WebHttpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled" />
        <element api="P:System.ServiceModel.WebHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WebHttpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.ProxyAddress" />
        <element api="P:System.ServiceModel.WebHttpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.WebHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.WebHttpBinding.Security" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding" />
        <element api="P:System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WebHttpBinding.TransferMode" />
        <element api="P:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.WebHttpBinding.WriteEncoding" />
        <element api="Overload:System.ServiceModel.WebHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WebHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WebHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" />
      </containers>
      <file name="efb8b273-7c2d-7741-abab-4b62d6e30a9b" />
    </api>
    <api id="Methods.T:System.ServiceModel.WebHttpBinding">
      <topicdata name="WebHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WebHttpBinding" />
      <apidata name="WebHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WebHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WebHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding" />
        <element api="Overload:System.ServiceModel.WebHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WebHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WebHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" />
      </containers>
      <file name="adfc91c1-beb3-e9cb-861f-cdd355d0d16a" />
    </api>
    <api id="Properties.T:System.ServiceModel.WebHttpBinding">
      <topicdata name="WebHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WebHttpBinding" />
      <apidata name="WebHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WebHttpBinding.AllowCookies" />
        <element api="P:System.ServiceModel.WebHttpBinding.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WebHttpBinding.ContentTypeMapper" />
        <element api="P:System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled" />
        <element api="P:System.ServiceModel.WebHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WebHttpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WebHttpBinding.ProxyAddress" />
        <element api="P:System.ServiceModel.WebHttpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.WebHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.WebHttpBinding.Security" />
        <element api="P:System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WebHttpBinding.TransferMode" />
        <element api="P:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.WebHttpBinding.WriteEncoding" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" />
      </containers>
      <file name="2bcfa8ff-cf66-9fe5-803f-1404f5404af9" />
    </api>
    <api id="Overload:System.ServiceModel.WebHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WebHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WebHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WebHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="94bae851-f1e2-9295-c695-301c3ffb2c51" />
    </api>
    <api id="Overload:System.ServiceModel.WebHttpBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WebHttpBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="a7817483-b029-ab97-e1c2-6c8883cc3e0a" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WebHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="21bfdaf3-ddfc-e337-10fd-6665d8492510" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WebHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="d66f46fe-fae7-9d84-5e25-66d2c040c13e" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WebHttpBinding.#ctor" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="e21681e2-ced3-b2dc-29f5-8ccb7b582e64" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.AllowCookies">
      <topicdata group="api" />
      <apidata name="AllowCookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowCookies" />
      <setter name="set_AllowCookies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="78ce1110-810a-026f-88e0-93f0b82c9ca9" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WebHttpBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="07cd49be-aff0-4370-3270-d6a3a0039c43" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.BypassProxyOnLocal">
      <topicdata group="api" />
      <apidata name="BypassProxyOnLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassProxyOnLocal" />
      <setter name="set_BypassProxyOnLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e9c0819a-1188-08ac-5218-84145876a5d4" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.ContentTypeMapper">
      <topicdata group="api" />
      <apidata name="ContentTypeMapper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentTypeMapper" />
      <setter name="set_ContentTypeMapper" />
      <returns>
        <type api="T:System.ServiceModel.Channels.WebContentTypeMapper" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="37ccd37c-8c63-7dad-fb74-4a01cc1bb487" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="60f84925-ad49-8ed8-c61d-b7c7b127bdfb" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled">
      <topicdata group="api" />
      <apidata name="CrossDomainScriptAccessEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CrossDomainScriptAccessEnabled" />
      <setter name="set_CrossDomainScriptAccessEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="9bd8b55e-fd89-b602-d283-271630a5ec22" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="b1d7737b-599e-440f-6254-aadb3244cc98" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f7122154-d99e-2a5a-7d63-79277af6e085" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ddb13714-eba9-cf48-a7b0-17c6fafa590a" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.MaxBufferSize">
      <topicdata group="api" />
      <apidata name="MaxBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferSize" />
      <setter name="set_MaxBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c19cb8f1-b12c-4785-1077-489b3e3bcde7" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a16e4fb3-7895-2a67-c63b-88681c1e69ea" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.ProxyAddress">
      <topicdata group="api" />
      <apidata name="ProxyAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyAddress" />
      <setter name="set_ProxyAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="16e1226b-ecaf-9d28-bb2c-b2f20a99e69e" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="4b512950-6394-1163-c612-075db4712212" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="668a6f48-9413-401a-e6ca-a987e940960c" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="1e4c089a-ad00-d0f3-ba60-d66be8ee18c3" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="86191cd8-5053-ce81-ecef-ec1d0acfd4a1" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4b0dddf7-48c3-1529-cb68-99001488491d" />
    </api>
    <api id="M:System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding">
      <topicdata group="api" />
      <apidata name="ShouldSerializeWriteEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b67e1e06-2b15-7d6f-ddec-351f7d5d0323" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="3e333247-945b-c9e6-3b6e-a84b6616ffab" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.TransferMode">
      <topicdata group="api" />
      <apidata name="TransferMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferMode" />
      <setter name="set_TransferMode" />
      <returns>
        <type api="T:System.ServiceModel.TransferMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransferMode" ref="false" />
            <enumValue>
              <field name="Buffered" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="999f916c-e222-8b3f-786b-bbb11738a52b" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy">
      <topicdata group="api" />
      <apidata name="UseDefaultWebProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultWebProxy" />
      <setter name="set_UseDefaultWebProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e9a6e8a-c474-2f70-76e2-ff9f33f5cf4b" />
    </api>
    <api id="P:System.ServiceModel.WebHttpBinding.WriteEncoding">
      <topicdata group="api" />
      <apidata name="WriteEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteEncoding" />
      <setter name="set_WriteEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpBinding" ref="true" />
      </containers>
      <file name="b01b05e9-1481-30a9-5afe-6e9b1e1fd48f" />
    </api>
    <api id="T:System.ServiceModel.WebHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WebHttpSecurity" />
      <apidata name="WebHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="d558a002-495c-5ff0-a83d-dd25972be8da" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WebHttpSecurity">
      <topicdata name="WebHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WebHttpSecurity" />
      <apidata name="WebHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WebHttpSecurity.#ctor" />
        <element api="P:System.ServiceModel.WebHttpSecurity.Mode" />
        <element api="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.WebHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" />
      </containers>
      <file name="25e6c922-64de-c8d6-a11e-b3eedb6dd33f" />
    </api>
    <api id="Methods.T:System.ServiceModel.WebHttpSecurity">
      <topicdata name="WebHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WebHttpSecurity" />
      <apidata name="WebHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" />
      </containers>
      <file name="d9ab5717-452b-2df8-aaea-c412f6a61d6b" />
    </api>
    <api id="Properties.T:System.ServiceModel.WebHttpSecurity">
      <topicdata name="WebHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WebHttpSecurity" />
      <apidata name="WebHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WebHttpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WebHttpSecurity.Mode" />
        <element api="P:System.ServiceModel.WebHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" />
      </containers>
      <file name="7f852cc7-80d8-51b4-cbb2-faaa9d982c1a" />
    </api>
    <api id="M:System.ServiceModel.WebHttpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </containers>
      <file name="75085efb-c131-3050-6dab-d8114003befd" />
    </api>
    <api id="P:System.ServiceModel.WebHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </containers>
      <file name="2c79d8d2-7abc-b2d6-a0dc-36696692950c" />
    </api>
    <api id="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeMode">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="9315ca98-cc2e-bd78-f5f6-bdfc1e3dfb80" />
    </api>
    <api id="M:System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5f07a192-7d94-4064-a919-c692458558ef" />
    </api>
    <api id="P:System.ServiceModel.WebHttpSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurity" ref="true" />
      </containers>
      <file name="d96039d4-5668-d7f5-619a-aa5a10669ed4" />
    </api>
    <api id="T:System.ServiceModel.WebHttpSecurityMode">
      <topicdata group="api" />
      <apidata name="WebHttpSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.WebHttpSecurityMode.None" />
        <element api="F:System.ServiceModel.WebHttpSecurityMode.Transport" />
        <element api="F:System.ServiceModel.WebHttpSecurityMode.TransportCredentialOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f52b7281-7546-32eb-5af8-2d422a1628b6" />
    </api>
    <api id="F:System.ServiceModel.WebHttpSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </containers>
      <file name="1e81edd2-c59b-75f4-e1cb-697c4a2e2564" />
    </api>
    <api id="F:System.ServiceModel.WebHttpSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </containers>
      <file name="6f800eb5-b1b7-d1dd-d3e3-f04db15bcae2" />
    </api>
    <api id="F:System.ServiceModel.WebHttpSecurityMode.TransportCredentialOnly">
      <topicdata group="api" notopic="" />
      <apidata name="TransportCredentialOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WebHttpSecurityMode" ref="false" />
      </containers>
      <file name="093fc5f4-d349-00e4-2c3f-f7870a985023" />
    </api>
    <api id="T:System.ServiceModel.WorkflowServiceHost">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="24341d02-f13b-c302-d9e4-5d417fc59226" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.#ctor">
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
        </element>
        <element api="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" />
      </containers>
      <file name="0c2565d1-2ef9-de61-2016-d8f409cce49d" />
    </api>
    <api id="Methods.T:System.ServiceModel.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.WorkflowServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" />
      </containers>
      <file name="a5e09d3d-6318-20d2-8188-84b087c6fca1" />
    </api>
    <api id="Properties.T:System.ServiceModel.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" />
      </containers>
      <file name="aaf7a3c7-00f6-7610-3968-63a75925f0d5" />
    </api>
    <api id="Events.T:System.ServiceModel.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" />
      </containers>
      <file name="bb624d85-2fd0-b44a-77a2-2d7f0818dbc5" />
    </api>
    <api id="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint">
      <topicdata name="AddServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="dfab8b46-0eb6-d443-3803-24aa54784094" />
    </api>
    <api id="Overload:System.ServiceModel.WorkflowServiceHost.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WorkflowServiceHost" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
        <element api="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="584d489b-ec22-86e8-1c65-e39d7aa61ec2" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="9bb222a9-b0bb-9981-567c-5e44f0bc62d4" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleDefinition">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="f4bb13da-5072-6fef-921a-67fbcb9b6d30" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleDefinition">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="941b1a39-64d5-aa51-5095-90cf5bab8564" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="f2d97db0-6572-9078-8b01-db170fbd1bfa" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinitionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleDefinitionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="1632c739-1e78-75fd-aa3d-ea2bac966453" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinitionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleDefinitionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="f6f3f1fe-d6cf-b86d-a48e-e075ba798999" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowDefinitionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="29234583-4c86-5d02-0b45-72b666e9bab9" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="workflowType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddress" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="ae154450-5175-45b8-746f-8e0d2b36335f" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="27b71bea-db39-c64c-2643-aa8df31edbdd" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="582dcf5c-95f5-9173-280c-2ebf533a050d" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="ea830f89-cd2d-c80b-114c-d99c0075f7fa" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="3c9c75d1-0907-3735-62b9-aa2b941c3a8f" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="implementedContracts" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="444c5c54-767a-7ed6-9c4b-ddc1eb487cd3" />
    </api>
    <api id="M:System.ServiceModel.WorkflowServiceHost.OnClosing">
      <topicdata group="api" />
      <apidata name="OnClosing" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WorkflowServiceHost" ref="true" />
      </containers>
      <file name="d36351a3-e2c2-008a-fa49-3cefbec0eb30" />
    </api>
    <api id="T:System.ServiceModel.WS2007FederationHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WS2007FederationHttpBinding" />
      <apidata name="WS2007FederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c0a72ae2-3086-54db-a1de-ee4c80926c3d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WS2007FederationHttpBinding">
      <topicdata name="WS2007FederationHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WS2007FederationHttpBinding" />
      <apidata name="WS2007FederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
          <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)" />
          <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.GetTransport" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" />
      </containers>
      <file name="4cd22629-f0f7-3b95-baa6-173a08552540" />
    </api>
    <api id="Methods.T:System.ServiceModel.WS2007FederationHttpBinding">
      <topicdata name="WS2007FederationHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WS2007FederationHttpBinding" />
      <apidata name="WS2007FederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.GetTransport" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007FederationHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" />
      </containers>
      <file name="2dacb1b2-b9f4-d35a-5106-dd820b7a83c5" />
    </api>
    <api id="Properties.T:System.ServiceModel.WS2007FederationHttpBinding">
      <topicdata name="WS2007FederationHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WS2007FederationHttpBinding" />
      <apidata name="WS2007FederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" />
      </containers>
      <file name="ac1702f4-434d-4bd5-4679-d6993ee85fd0" />
    </api>
    <api id="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WS2007FederationHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)" />
        <element api="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="e62d4a61-2335-fd52-260a-3950167abf0c" />
    </api>
    <api id="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="cfec6181-4715-c9ae-168b-706d02b5ef11" />
    </api>
    <api id="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="d36bc185-2b2c-50ed-c25d-f8204867d43a" />
    </api>
    <api id="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="672f953d-17e4-13da-1b86-4bf338ccc1b2" />
    </api>
    <api id="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007FederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="5ace1905-1537-8377-7ecb-4762484d075c" />
    </api>
    <api id="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity">
      <topicdata group="api" />
      <apidata name="CreateMessageSecurity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity">
          <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.SecurityBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
      </containers>
      <file name="d1325392-092c-c351-24cc-b6e3aa2a443b" />
    </api>
    <api id="T:System.ServiceModel.WS2007HttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WS2007HttpBinding" />
      <apidata name="WS2007HttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="27abb7ad-f52f-e34d-794a-4eb911de847d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WS2007HttpBinding">
      <topicdata name="WS2007HttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WS2007HttpBinding" />
      <apidata name="WS2007HttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.#ctor">
          <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
          <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity" />
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" />
      </containers>
      <file name="5a7e3cb2-5cd9-9ba7-19bf-798784ed28c8" />
    </api>
    <api id="Methods.T:System.ServiceModel.WS2007HttpBinding">
      <topicdata name="WS2007HttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WS2007HttpBinding" />
      <apidata name="WS2007HttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity" />
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WS2007HttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" />
      </containers>
      <file name="5bc3ad03-eea7-228f-1a33-fd6e525bf0d0" />
    </api>
    <api id="Properties.T:System.ServiceModel.WS2007HttpBinding">
      <topicdata name="WS2007HttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WS2007HttpBinding" />
      <apidata name="WS2007HttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" />
      </containers>
      <file name="d67005af-3a3a-07b8-8ef3-e4e79d6549fc" />
    </api>
    <api id="Overload:System.ServiceModel.WS2007HttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WS2007HttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
        <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="5dca29ec-ffbb-48fe-ca7a-0f7ffd976ea2" />
    </api>
    <api id="M:System.ServiceModel.WS2007HttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="d1a8293e-49bc-e2c8-3970-44fdb59ca1e3" />
    </api>
    <api id="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="ce08cb52-ec7c-563c-9444-8534d0123c74" />
    </api>
    <api id="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="0d3130fe-1d1f-1e69-545f-7a05f43502e5" />
    </api>
    <api id="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WS2007HttpBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="b3f13c0d-fe8e-5fbd-22cd-0449f93df664" />
    </api>
    <api id="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity">
      <topicdata group="api" />
      <apidata name="CreateMessageSecurity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
          <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.SecurityBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
      </containers>
      <file name="4e9c53ea-eb4e-3255-0a53-fc4e7f011c9c" />
    </api>
    <api id="T:System.ServiceModel.WSDualHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSDualHttpBinding" />
      <apidata name="WSDualHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a345e17e-300f-4f2d-749f-d6c31edbe492" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSDualHttpBinding">
      <topicdata name="WSDualHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSDualHttpBinding" />
      <apidata name="WSDualHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.#ctor">
          <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
        </element>
        <element api="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" />
      </containers>
      <file name="29be8c8b-3908-b1c4-532a-7873c530fc86" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSDualHttpBinding">
      <topicdata name="WSDualHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSDualHttpBinding" />
      <apidata name="WSDualHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSDualHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" />
      </containers>
      <file name="5db93f14-8e2c-93fd-b1f0-f391d4b26bf0" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSDualHttpBinding">
      <topicdata name="WSDualHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSDualHttpBinding" />
      <apidata name="WSDualHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
        <element api="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" />
      </containers>
      <file name="9f7964b8-8655-d1c3-83a3-c175028199c0" />
    </api>
    <api id="Overload:System.ServiceModel.WSDualHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSDualHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="24098841-c70e-826e-e57f-03900b9afe61" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="dee6b761-365e-2881-dd0c-5010905c7c79" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="f04f0dcb-bab7-c436-6398-7162bbacb03a" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="75e81847-daea-d16a-2394-67d9b8d294af" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
      <topicdata group="api" />
      <apidata name="BypassProxyOnLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassProxyOnLocal" />
      <setter name="set_BypassProxyOnLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1ec029d8-28c9-2356-9063-21673c5efed7" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
      <topicdata group="api" />
      <apidata name="ClientBaseAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientBaseAddress" />
      <setter name="set_ClientBaseAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="989704c6-7b1b-718c-2f7e-fdbb350ede8a" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="a11b980d-8d57-0221-e32b-4120d4705ee4" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="0fc103f8-1ea0-5d8e-ccf7-420566721162" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fb1e283b-86e3-8dab-2853-4bc4a7402157" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="34350292-f3a2-9a80-bb16-11252c150bc8" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="51866e1b-6f0a-e5a9-531f-e91aa3bc6aad" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
            <enumValue>
              <field name="Text" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="293ec753-3cb9-3b43-6a48-c4f49423bddf" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
      <topicdata group="api" />
      <apidata name="ProxyAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyAddress" />
      <setter name="set_ProxyAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="b8de6776-cba5-3dd6-6372-7911b36b970d" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="fe11f434-d2b4-2dbf-4530-dfe6771196a8" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
      <topicdata group="api" />
      <apidata name="ReliableSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReliableSession" />
      <setter name="set_ReliableSession" />
      <returns>
        <type api="T:System.ServiceModel.ReliableSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="341aa34c-fc3a-13ce-d32e-12d79835c66d" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="54aa210d-631c-72c9-ab10-d7acdb4a2ab1" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="c9e768ca-d07b-95f2-b814-3aa451136b92" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b3a7258f-5814-e05c-6c76-99ac64d0630d" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReliableSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cda3a980-1a9c-be5e-f868-2ad30aa6b9c5" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="af01be4f-22ed-3766-5519-8a62f70d2861" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTextEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d17a2fa7-9df0-4f2d-ed73-6cf5729364e3" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="321e1cd8-aefc-9b69-a4f6-948be87ad515" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
      <topicdata group="api" />
      <apidata name="TextEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextEncoding" />
      <setter name="set_TextEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <file name="4619eb7a-86fc-25c0-8e00-4225694424cf" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
      <topicdata group="api" />
      <apidata name="TransactionFlow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionFlow" />
      <setter name="set_TransactionFlow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="45f2b9f6-af4a-d8aa-bdab-4c1bf006f6c8" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
      <topicdata group="api" />
      <apidata name="UseDefaultWebProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultWebProxy" />
      <setter name="set_UseDefaultWebProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fdbbf5be-27b0-6be9-0194-08d9f6fe5216" />
    </api>
    <api id="T:System.ServiceModel.WSDualHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSDualHttpSecurity" />
      <apidata name="WSDualHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="78f013fa-ab4f-a51f-fa62-7039b849b08d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSDualHttpSecurity">
      <topicdata name="WSDualHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSDualHttpSecurity" />
      <apidata name="WSDualHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSDualHttpSecurity.#ctor" />
        <element api="P:System.ServiceModel.WSDualHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSDualHttpSecurity.Mode" />
        <element api="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" />
      </containers>
      <file name="dac9105a-09dd-03db-d158-4953df227f2a" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSDualHttpSecurity">
      <topicdata name="WSDualHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSDualHttpSecurity" />
      <apidata name="WSDualHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" />
      </containers>
      <file name="689d5e47-fcb7-df32-93b5-0753c2493a7a" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSDualHttpSecurity">
      <topicdata name="WSDualHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSDualHttpSecurity" />
      <apidata name="WSDualHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSDualHttpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSDualHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSDualHttpSecurity.Mode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" />
      </containers>
      <file name="9df125ed-878f-b471-8f25-8440e810d6b7" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </containers>
      <file name="d0916996-34f6-f3f9-8d90-f036a46c6fb1" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.MessageSecurityOverHttp" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </containers>
      <file name="c37c4e56-ce4a-6ccf-ed05-799b311b777c" />
    </api>
    <api id="P:System.ServiceModel.WSDualHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </containers>
      <file name="b2d75dc7-7971-10b8-4004-70b457c363d7" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMessage">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4ff8a443-5688-61be-8948-9a3c21cf2442" />
    </api>
    <api id="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMode">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e576fed2-6b3b-bab6-53d7-d0f3814dc594" />
    </api>
    <api id="T:System.ServiceModel.WSDualHttpSecurityMode">
      <topicdata group="api" />
      <apidata name="WSDualHttpSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.WSDualHttpSecurityMode.None" />
        <element api="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a449ba70-24aa-2dec-5e45-08bbb9a60d40" />
    </api>
    <api id="F:System.ServiceModel.WSDualHttpSecurityMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
      </containers>
      <file name="f8303b6f-e6fe-6eac-f542-8f27e4db895a" />
    </api>
    <api id="F:System.ServiceModel.WSDualHttpSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSDualHttpSecurityMode" ref="false" />
      </containers>
      <file name="ddcc1f88-5a45-e42d-f0cb-35dc359641bc" />
    </api>
    <api id="T:System.ServiceModel.WSFederationHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSFederationHttpBinding" />
      <apidata name="WSFederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.WS2007FederationHttpBinding" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6da0f9cd-df19-07e1-c923-4ac74bc86c39" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSFederationHttpBinding">
      <topicdata name="WSFederationHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSFederationHttpBinding" />
      <apidata name="WSFederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor">
          <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)" />
          <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.GetTransport" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" />
      </containers>
      <file name="6cf3c813-4dc6-ccee-1d57-71cbe0d95043" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSFederationHttpBinding">
      <topicdata name="WSFederationHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSFederationHttpBinding" />
      <apidata name="WSFederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.GetTransport" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSFederationHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" />
      </containers>
      <file name="1d470a5f-600b-0c4a-2ef3-b531ac3ecb5e" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSFederationHttpBinding">
      <topicdata name="WSFederationHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSFederationHttpBinding" />
      <apidata name="WSFederationHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion" />
        <element api="P:System.ServiceModel.WSFederationHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" />
      </containers>
      <file name="fbd9619b-c2e1-36eb-9531-d048606c567e" />
    </api>
    <api id="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSFederationHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)" />
        <element api="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="c46b8f67-1717-4f29-22b6-9bd2cc2a5a88" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="41f6b53e-2856-6f92-6904-89a797af9da5" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="6477b5be-b82e-da70-c2a2-566f8064b9c6" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="2dc0a58f-fd96-fd62-eb96-d8092b6bfa06" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSFederationHttpBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="0b15922a-dd6e-b7a3-e978-6d3a7ee7da40" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="3600bc19-310f-3a4a-ed21-5489e3f9bf11" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity">
      <topicdata group="api" />
      <apidata name="CreateMessageSecurity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.SecurityBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="11cb5194-eb85-b4d3-32c8-504f7f9a809c" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.GetTransport">
      <topicdata group="api" />
      <apidata name="GetTransport" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.TransportBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="813db261-dccf-adb1-cf93-0f87f5506324" />
    </api>
    <api id="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt">
      <topicdata group="api" />
      <apidata name="PrivacyNoticeAt" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrivacyNoticeAt" />
      <setter name="set_PrivacyNoticeAt" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="495716ff-1215-1db4-6899-20952513af56" />
    </api>
    <api id="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion">
      <topicdata group="api" />
      <apidata name="PrivacyNoticeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrivacyNoticeVersion" />
      <setter name="set_PrivacyNoticeVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a2a1f05d-e38a-9f40-6daf-0a5c3a2cc421" />
    </api>
    <api id="P:System.ServiceModel.WSFederationHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <file name="3dc6c597-1d6c-e455-7762-57b65778586b" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a7a460d2-c26e-b81a-4436-c27eb514529a" />
    </api>
    <api id="T:System.ServiceModel.WSFederationHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSFederationHttpSecurity" />
      <apidata name="WSFederationHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="86c56b0c-af01-99af-fb8d-5f3517e124de" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSFederationHttpSecurity">
      <topicdata name="WSFederationHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSFederationHttpSecurity" />
      <apidata name="WSFederationHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSFederationHttpSecurity.#ctor" />
        <element api="P:System.ServiceModel.WSFederationHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSFederationHttpSecurity.Mode" />
        <element api="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" />
      </containers>
      <file name="729d63fa-b68a-b95d-9be1-a2fb0b8762d7" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSFederationHttpSecurity">
      <topicdata name="WSFederationHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSFederationHttpSecurity" />
      <apidata name="WSFederationHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" />
      </containers>
      <file name="50690a34-364c-a69f-2e0c-261b4f884603" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSFederationHttpSecurity">
      <topicdata name="WSFederationHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSFederationHttpSecurity" />
      <apidata name="WSFederationHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSFederationHttpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSFederationHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSFederationHttpSecurity.Mode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" />
      </containers>
      <file name="6d6ea76d-dd5d-71c1-15a2-63526e8c092d" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </containers>
      <file name="4e54544d-d34b-a10e-73dd-b70b11012ede" />
    </api>
    <api id="P:System.ServiceModel.WSFederationHttpSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.FederatedMessageSecurityOverHttp" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </containers>
      <file name="8960867e-6da6-7d02-160e-d4cd6ac81df2" />
    </api>
    <api id="P:System.ServiceModel.WSFederationHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </containers>
      <file name="8655b37a-5859-f097-d78c-ea820bf2890a" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMessage">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="531755e6-dd47-9da4-a3df-f29954c63ae7" />
    </api>
    <api id="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMode">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="17aefe0c-4edb-4b5d-687d-52f191a92696" />
    </api>
    <api id="T:System.ServiceModel.WSFederationHttpSecurityMode">
      <topicdata group="api" />
      <apidata name="WSFederationHttpSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.WSFederationHttpSecurityMode.None" />
        <element api="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />
        <element api="F:System.ServiceModel.WSFederationHttpSecurityMode.TransportWithMessageCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="4fbc2d8a-8ae1-d158-a554-ec2c1d01ea09" />
    </api>
    <api id="F:System.ServiceModel.WSFederationHttpSecurityMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </containers>
      <file name="b34290c4-f55b-8e4f-cf01-9f57f028b354" />
    </api>
    <api id="F:System.ServiceModel.WSFederationHttpSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </containers>
      <file name="e67336e4-4a49-9283-6d88-1f16236c07cd" />
    </api>
    <api id="F:System.ServiceModel.WSFederationHttpSecurityMode.TransportWithMessageCredential">
      <topicdata group="api" notopic="" />
      <apidata name="TransportWithMessageCredential" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSFederationHttpSecurityMode" ref="false" />
      </containers>
      <file name="af35abae-3930-8108-dc1e-55aa22da9661" />
    </api>
    <api id="T:System.ServiceModel.WSHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpBinding" />
      <apidata name="WSHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
          <type api="T:System.ServiceModel.WS2007HttpBinding" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f387fcf7-32e3-6249-df8b-d44a9fe4797e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSHttpBinding">
      <topicdata name="WSHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSHttpBinding" />
      <apidata name="WSHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSHttpBinding.#ctor">
          <element api="M:System.ServiceModel.WSHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
          <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="Overload:System.ServiceModel.WSHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WSHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" />
      </containers>
      <file name="a21109f8-23f5-67b2-209b-29cdba955108" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSHttpBinding">
      <topicdata name="WSHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSHttpBinding" />
      <apidata name="WSHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WSHttpBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" />
      </containers>
      <file name="1078c8d7-cccc-c582-00f5-059ca26c73fb" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSHttpBinding">
      <topicdata name="WSHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSHttpBinding" />
      <apidata name="WSHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" />
      </containers>
      <file name="c863f208-ef76-5e04-edbc-2f35b6e37923" />
    </api>
    <api id="Overload:System.ServiceModel.WSHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WSHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
        <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="96b020ad-810d-b67b-bb2c-ef7b7a02d7a3" />
    </api>
    <api id="Overload:System.ServiceModel.WSHttpBinding.BuildChannelFactory">
      <topicdata name="BuildChannelFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpBinding" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="90bccdd4-c15b-4d5a-4dc9-3e13b191abf3" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="6d77f808-c6de-7f2f-4fce-72bf182ba955" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="6e227d55-f9f2-5603-7194-501ba868461b" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="7ce849d9-ca15-55fb-ae9c-8e97da3ffe1a" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="d0f5986a-05c8-f31d-4557-30b65b19258d" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBinding.AllowCookies">
      <topicdata group="api" />
      <apidata name="AllowCookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowCookies" />
      <setter name="set_AllowCookies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dbb27c7f-893a-6f18-e8c9-eced96bf0293" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.WSHttpBinding.BuildChannelFactory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="parameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="8ac5571c-1100-944e-0b35-ab2301a810b5" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="b2a8b7fb-cf12-a2d2-7f98-65e17dcea08c" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
      <topicdata group="api" />
      <apidata name="CreateMessageSecurity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.SecurityBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="835da648-5678-fed8-e8f7-ba926df6ffdb" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.GetTransport">
      <topicdata group="api" />
      <apidata name="GetTransport" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.TransportBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="92541d03-276e-0caf-04b1-92d4963f2fd6" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Security" />
      <setter name="set_Security" />
      <returns>
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <file name="6e3390e9-ee16-526f-51e8-31e3c2834a8b" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSecurity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="278ee6fe-0cc9-0a85-4b7e-656ff1d6682a" />
    </api>
    <api id="T:System.ServiceModel.WSHttpBindingBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpBindingBase" />
      <apidata name="WSHttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.WSFederationHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="74b2b6e5-c3a2-bcff-2518-db8263f9fbce" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSHttpBindingBase">
      <topicdata name="WSHttpBindingBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSHttpBindingBase" />
      <apidata name="WSHttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.#ctor">
          <element api="M:System.ServiceModel.WSHttpBindingBase.#ctor" />
          <element api="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.GetTransport" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" />
      </containers>
      <file name="9d2048f4-130c-f63b-90fe-1c7562246359" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSHttpBindingBase">
      <topicdata name="WSHttpBindingBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSHttpBindingBase" />
      <apidata name="WSHttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.GetTransport" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpBindingBase.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" />
      </containers>
      <file name="a936b15a-b32f-3a2e-e001-304828a4506f" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSHttpBindingBase">
      <topicdata name="WSHttpBindingBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSHttpBindingBase" />
      <apidata name="WSHttpBindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" />
      </containers>
      <file name="5a782e99-ec15-e76f-b3de-d081261f00eb" />
    </api>
    <api id="Overload:System.ServiceModel.WSHttpBindingBase.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpBindingBase" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WSHttpBindingBase.#ctor" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="c7839740-5652-8063-fcbe-ab5b2ce146f2" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.WSHttpBindingBase.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="16d3e477-a808-8eac-f97b-f7d170706dd8" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.WSHttpBindingBase.#ctor" />
      <parameters>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="aa944eb2-bbf3-58f3-e5a7-bc06c5dea6bc" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal">
      <topicdata group="api" />
      <apidata name="BypassProxyOnLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassProxyOnLocal" />
      <setter name="set_BypassProxyOnLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9856b421-3b39-a7b7-d9a5-5cf61e12cf0e" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="14eca2c8-9c0c-5e16-980c-67349275f75c" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
      <topicdata group="api" />
      <apidata name="CreateMessageSecurity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.SecurityBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="dc6a03d4-8d5d-cacb-3909-0083106ce2db" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="175551a9-65eb-769b-c9e8-b3962c199205" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
      <topicdata group="api" />
      <apidata name="GetTransport" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.TransportBindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="69dd19d5-b092-a3fa-1d98-98b0db4859d6" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode">
      <topicdata group="api" />
      <apidata name="HostNameComparisonMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostNameComparisonMode" />
      <setter name="set_HostNameComparisonMode" />
      <returns>
        <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.HostNameComparisonMode" ref="false" />
            <enumValue>
              <field name="StrongWildcard" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e17050d5-6e06-9d20-4e74-3b1c0204934c" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e872e99b-ad78-3a67-8a33-4ad6e47354e6" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
      <file name="48ec1c6f-e697-69eb-453f-90d54433a063" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding">
      <topicdata group="api" />
      <apidata name="MessageEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageEncoding" />
      <setter name="set_MessageEncoding" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
            <enumValue>
              <field name="Text" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="634c3fc3-66ac-277a-bf01-5d14456be6ab" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress">
      <topicdata group="api" />
      <apidata name="ProxyAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyAddress" />
      <setter name="set_ProxyAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.UriTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4a55520f-db92-f9a6-3533-54d926d166e8" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas">
      <topicdata group="api" />
      <apidata name="ReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReaderQuotas" />
      <setter name="set_ReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="13fdb2ec-a4cb-2a72-d2f8-3512143a15a7" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.ReliableSession">
      <topicdata group="api" />
      <apidata name="ReliableSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReliableSession" />
      <setter name="set_ReliableSession" />
      <returns>
        <type api="T:System.ServiceModel.OptionalReliableSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="b58c79be-7bcb-766b-b85b-07e95a0d42ce" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="429cc0a1-a1d7-bfa0-39e1-9f2c7e69ec1e" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReaderQuotas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="79573643-8488-a0de-5374-3d5c60147ea5" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReliableSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fc92929d-59f4-9614-ed7f-b0b5911469d8" />
    </api>
    <api id="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTextEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5ee1319a-e4bf-5081-fa8e-bcac579ce3db" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <topicdata group="api" eiiName="IBindingRuntimePreferences.ReceiveSynchronously" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
          <type api="T:System.ServiceModel.Channels.IBindingRuntimePreferences" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="1ea6623d-2159-0cc4-2c5f-b4992fb259b2" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.TextEncoding">
      <topicdata group="api" />
      <apidata name="TextEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextEncoding" />
      <setter name="set_TextEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <file name="fe78b1b5-88f1-74e2-aa5d-7b5e975e465c" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow">
      <topicdata group="api" />
      <apidata name="TransactionFlow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionFlow" />
      <setter name="set_TransactionFlow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c3ae6490-54de-f9c9-4a71-78a9bee072d9" />
    </api>
    <api id="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy">
      <topicdata group="api" />
      <apidata name="UseDefaultWebProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultWebProxy" />
      <setter name="set_UseDefaultWebProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="610e3c79-f591-83c3-00cc-2561a43c9781" />
    </api>
    <api id="T:System.ServiceModel.WSHttpContextBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpContextBinding" />
      <apidata name="WSHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
          <type api="T:System.ServiceModel.WSHttpBindingBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="decb2ba4-a8d9-e9a4-b369-87bd3b4af2b1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSHttpContextBinding">
      <topicdata name="WSHttpContextBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSHttpContextBinding" />
      <apidata name="WSHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.#ctor">
          <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
          <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)" />
          <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)" />
          <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress" />
        <element api="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled" />
        <element api="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel" />
        <element api="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements" />
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" />
      </containers>
      <file name="50ff5c2c-7fe7-5f15-1ba8-58c67414baca" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSHttpContextBinding">
      <topicdata name="WSHttpContextBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSHttpContextBinding" />
      <apidata name="WSHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
        <element api="M:System.ServiceModel.WSHttpBinding.GetTransport" />
        <element api="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
        <element api="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
        <element api="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements" />
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.BuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.WSHttpContextBinding.CanBuildChannelListener">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
        <element api="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" />
      </containers>
      <file name="3052a8c8-7a41-40ea-13ac-72a2bd634da9" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSHttpContextBinding">
      <topicdata name="WSHttpContextBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSHttpContextBinding" />
      <apidata name="WSHttpContextBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
        <element api="P:System.ServiceModel.WSHttpBinding.Security" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
        <element api="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
        <element api="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress" />
        <element api="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled" />
        <element api="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" />
      </containers>
      <file name="d4218cd7-233d-c2d2-c564-66c45ef0c6bd" />
    </api>
    <api id="Overload:System.ServiceModel.WSHttpContextBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpContextBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
        <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)" />
        <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)" />
        <element api="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="e73f6797-5726-a26f-b6ef-7fcad054b6d1" />
    </api>
    <api id="M:System.ServiceModel.WSHttpContextBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="759dbd0a-e63f-b3f8-aa9d-27b794d50b55" />
    </api>
    <api id="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="dcb343b4-6b79-20a0-1fb6-8b32810aff3b" />
    </api>
    <api id="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.SecurityMode" ref="false" />
        </parameter>
        <parameter name="reliableSessionEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="258954a9-fb58-979f-fb88-469a50cb7ada" />
    </api>
    <api id="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <parameters>
        <parameter name="configName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="69ff7bbf-c641-bb55-0f8c-e80896e6fdbe" />
    </api>
    <api id="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress">
      <topicdata group="api" />
      <apidata name="ClientCallbackAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCallbackAddress" />
      <setter name="set_ClientCallbackAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="526a2735-b981-fd25-c3f4-6f73416ae421" />
    </api>
    <api id="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled">
      <topicdata group="api" />
      <apidata name="ContextManagementEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextManagementEnabled" />
      <setter name="set_ContextManagementEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8cbedf7c-18be-9c1c-8f16-49bbb0494811" />
    </api>
    <api id="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel">
      <topicdata group="api" />
      <apidata name="ContextProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextProtectionLevel" />
      <setter name="set_ContextProtectionLevel" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
            <enumValue>
              <field name="Sign" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ac61e2c8-3320-1599-dac5-754d0fac5c6a" />
    </api>
    <api id="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
          <type api="T:System.ServiceModel.WSHttpBinding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpContextBinding" ref="true" />
      </containers>
      <file name="00f0680e-c8d4-0272-e714-8fc5fa95f06d" />
    </api>
    <api id="T:System.ServiceModel.WSHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.WSHttpSecurity" />
      <apidata name="WSHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a4c797a8-d48b-5442-8f17-4edfe1ecca01" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.WSHttpSecurity">
      <topicdata name="WSHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.WSHttpSecurity" />
      <apidata name="WSHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSHttpSecurity.#ctor" />
        <element api="P:System.ServiceModel.WSHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSHttpSecurity.Mode" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport" />
        <element api="P:System.ServiceModel.WSHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" />
      </containers>
      <file name="dcfe9da3-edfc-e7c6-215f-f140c07250db" />
    </api>
    <api id="Methods.T:System.ServiceModel.WSHttpSecurity">
      <topicdata name="WSHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.WSHttpSecurity" />
      <apidata name="WSHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpSecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMode" />
        <element api="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" />
      </containers>
      <file name="11e7b480-98b1-947d-b1ba-52d2feb7aaed" />
    </api>
    <api id="Properties.T:System.ServiceModel.WSHttpSecurity">
      <topicdata name="WSHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.WSHttpSecurity" />
      <apidata name="WSHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.WSHttpSecurity.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.WSHttpSecurity.Message" />
        <element api="P:System.ServiceModel.WSHttpSecurity.Mode" />
        <element api="P:System.ServiceModel.WSHttpSecurity.Transport" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" />
      </containers>
      <file name="5130f1a6-bff9-e712-938e-db86d22c113b" />
    </api>
    <api id="M:System.ServiceModel.WSHttpSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <file name="8e97a127-3d51-4d8b-afc7-3ae5e8eabdf5" />
    </api>
    <api id="P:System.ServiceModel.WSHttpSecurity.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.NonDualMessageSecurityOverHttp" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <file name="0599280f-2b2c-2c89-6f69-26a2f0c51f2f" />
    </api>
    <api id="P:System.ServiceModel.WSHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.SecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <file name="b13ad0f1-fb56-cb96-59a0-07acea1b395c" />
    </api>
    <api id="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3bf30744-279f-2e1e-c849-e34fa968d644" />
    </api>
    <api id="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMode">
      <topicdata group="api" />
      <apidata name="ShouldSerializeMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="71dd7068-842f-4a12-a3f8-681a76ab43fd" />
    </api>
    <api id="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTransport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="44a31258-3e64-4922-66ba-9f1e04c079a6" />
    </api>
    <api id="P:System.ServiceModel.WSHttpSecurity.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.ServiceModel.HttpTransportSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSHttpSecurity" ref="true" />
      </containers>
      <file name="73631da7-2974-cb52-ec95-fb0474976a41" />
    </api>
    <api id="T:System.ServiceModel.WSMessageEncoding">
      <topicdata group="api" />
      <apidata name="WSMessageEncoding" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.WSMessageEncoding.Text" />
        <element api="F:System.ServiceModel.WSMessageEncoding.Mtom" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ea2392b9-2910-fce7-29d4-81dda793be05" />
    </api>
    <api id="F:System.ServiceModel.WSMessageEncoding.Mtom">
      <topicdata group="api" notopic="" />
      <apidata name="Mtom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </containers>
      <file name="3af2237c-c3b1-1e3a-f3a7-48b5abf1997a" />
    </api>
    <api id="F:System.ServiceModel.WSMessageEncoding.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.WSMessageEncoding" ref="false" />
      </containers>
      <file name="9fddf042-ded9-9656-281c-dba8f40b040b" />
    </api>
    <api id="T:System.ServiceModel.X509CertificateEndpointIdentity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.X509CertificateEndpointIdentity" />
      <apidata name="X509CertificateEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="faffd7ac-a657-5305-3d89-531024cb2d8f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.X509CertificateEndpointIdentity">
      <topicdata name="X509CertificateEndpointIdentity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      <apidata name="X509CertificateEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="Overload:System.ServiceModel.X509CertificateEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
        <element api="Overload:System.ServiceModel.X509CertificateEndpointIdentity.#ctor">
          <element api="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
        </element>
        <element api="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      </containers>
      <file name="1df79f85-2e6d-31f9-2bb4-2328d7444289" />
    </api>
    <api id="Methods.T:System.ServiceModel.X509CertificateEndpointIdentity">
      <topicdata name="X509CertificateEndpointIdentity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      <apidata name="X509CertificateEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
        <element api="Overload:System.ServiceModel.X509CertificateEndpointIdentity.Initialize">
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
        </element>
        <element api="M:System.ServiceModel.EndpointIdentity.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      </containers>
      <file name="b1b54273-57e6-4d49-98bc-51918f53d688" />
    </api>
    <api id="Properties.T:System.ServiceModel.X509CertificateEndpointIdentity">
      <topicdata name="X509CertificateEndpointIdentity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      <apidata name="X509CertificateEndpointIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
        <element api="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" />
      </containers>
      <file name="99a6a392-7780-f296-ade0-cf249b0bd9ec" />
    </api>
    <api id="Overload:System.ServiceModel.X509CertificateEndpointIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.X509CertificateEndpointIdentity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" ref="true" />
      </containers>
      <file name="a86bdba3-a765-a0b8-8d9f-b2ad42075757" />
    </api>
    <api id="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.X509CertificateEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" ref="true" />
      </containers>
      <file name="a61d40d2-1a2e-d927-c0ff-23afdecde9ab" />
    </api>
    <api id="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.X509CertificateEndpointIdentity.#ctor" />
      <parameters>
        <parameter name="primaryCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="supportingCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" ref="true" />
      </containers>
      <file name="e2d7ef2a-5d61-6ab7-1e85-de49567ec14a" />
    </api>
    <api id="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates">
      <topicdata group="api" />
      <apidata name="Certificates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificates" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.X509CertificateEndpointIdentity" ref="true" />
      </containers>
      <file name="f8d2e44c-258e-7d79-002d-088ed693ec78" />
    </api>
    <api id="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="39b9e809-4742-2f86-19e6-07ecdafc5a61" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.Style" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.Use" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="f4ff96cf-b5dd-754d-968a-55147fdee05b" />
    </api>
    <api id="Methods.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="ec6158e5-448d-1211-6616-f0b08f2fb41e" />
    </api>
    <api id="Properties.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.Style" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.Use" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="c23ca850-cdd6-7e09-1154-6529e17a8aa4" />
    </api>
    <api id="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="8fe9bb8e-edc3-ff36-d7c7-ec6e6e7877f6" />
    </api>
    <api id="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <topicdata group="api" />
      <apidata name="Style" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Style" />
      <setter name="set_Style" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="760789ae-5abf-6090-9640-2fae1d8b4325" />
    </api>
    <api id="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <topicdata group="api" />
      <apidata name="SupportFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SupportFaults" />
      <setter name="set_SupportFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="8dcb855c-deae-50a1-d687-a214dad6be4e" />
    </api>
    <api id="P:System.ServiceModel.XmlSerializerFormatAttribute.Use">
      <topicdata group="api" />
      <apidata name="Use" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Use" />
      <setter name="set_Use" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatUse" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="6d26a6d2-8b2f-1bc6-c772-753dd15372d7" />
    </api>
    <api id="T:System.ServiceModel.XPathMessageQuery">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.XPathMessageQuery" />
      <apidata name="XPathMessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.XPathMessageQuery.#ctor" contentProperty="P:System.ServiceModel.XPathMessageQuery.Expression" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Expression</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7e340887-ca2c-e08a-cdb0-889b9c89245e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.XPathMessageQuery">
      <topicdata name="XPathMessageQuery" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.XPathMessageQuery" />
      <apidata name="XPathMessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.XPathMessageQuery.#ctor" contentProperty="P:System.ServiceModel.XPathMessageQuery.Expression" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.XPathMessageQuery.#ctor">
          <element api="M:System.ServiceModel.XPathMessageQuery.#ctor" />
          <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String)" />
          <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
          <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
        </element>
        <element api="M:System.ServiceModel.XPathMessageQuery.CreateMessageQueryCollection" />
        <element api="Overload:System.ServiceModel.XPathMessageQuery.Evaluate">
          <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="P:System.ServiceModel.XPathMessageQuery.Expression" />
        <element api="P:System.ServiceModel.XPathMessageQuery.Namespaces" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" />
      </containers>
      <file name="85160427-5687-0009-152a-6892346a67c5" />
    </api>
    <api id="Methods.T:System.ServiceModel.XPathMessageQuery">
      <topicdata name="XPathMessageQuery" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.XPathMessageQuery" />
      <apidata name="XPathMessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.XPathMessageQuery.#ctor" contentProperty="P:System.ServiceModel.XPathMessageQuery.Expression" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.XPathMessageQuery.CreateMessageQueryCollection" />
        <element api="Overload:System.ServiceModel.XPathMessageQuery.Evaluate">
          <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" />
      </containers>
      <file name="f11ea33e-dc3f-8c28-95bb-e0ef2c79b2c5" />
    </api>
    <api id="Properties.T:System.ServiceModel.XPathMessageQuery">
      <topicdata name="XPathMessageQuery" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.XPathMessageQuery" />
      <apidata name="XPathMessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.XPathMessageQuery.#ctor" contentProperty="P:System.ServiceModel.XPathMessageQuery.Expression" />
      <elements>
        <element api="P:System.ServiceModel.XPathMessageQuery.Expression" />
        <element api="P:System.ServiceModel.XPathMessageQuery.Namespaces" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" />
      </containers>
      <file name="aa7f9318-7c72-8eb4-e36e-ad8ceb1f7854" />
    </api>
    <api id="Overload:System.ServiceModel.XPathMessageQuery.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.XPathMessageQuery" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.XPathMessageQuery.#ctor" />
        <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String)" />
        <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="05d1baf6-a953-5e8c-6b0d-73c21407c777" />
    </api>
    <api id="Overload:System.ServiceModel.XPathMessageQuery.Evaluate">
      <topicdata name="Evaluate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.XPathMessageQuery" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="df2b8b81-ba67-09cb-fd0f-73170ea585df" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.XPathMessageQuery.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="03aa06f3-62c1-1d62-1e69-741f7cd199ee" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.XPathMessageQuery.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="166bfa01-fccd-2760-8b4c-fae1b377c460" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.XPathMessageQuery.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="60d80108-1248-4297-419a-686b9847a08f" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.XPathMessageQuery.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="c5b42b14-7123-e36d-4ec4-2410c02ee422" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.CreateMessageQueryCollection">
      <topicdata group="api" />
      <apidata name="CreateMessageQueryCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="201cad02-e905-2026-45d0-cc3db802cd0e" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.XPathMessageQuery.Evaluate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="d9ce9c2f-8bd4-517c-f848-a5443240b1c5" />
    </api>
    <api id="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.XPathMessageQuery.Evaluate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <file name="56ada5b8-e2e5-86b8-a3b0-e894e4216337" />
    </api>
    <api id="P:System.ServiceModel.XPathMessageQuery.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
      <file name="3b44804b-c67d-ae19-171f-56e0281d00a9" />
    </api>
    <api id="P:System.ServiceModel.XPathMessageQuery.Namespaces">
      <topicdata group="api" />
      <apidata name="Namespaces" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespaces" />
      <setter name="set_Namespaces" />
      <returns>
        <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="71afb7c3-8978-d169-3646-e7995e3b94f7" />
    </api>
  </apis>
</reflection>