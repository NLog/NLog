<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.DirectoryServices">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.DirectoryServices">
      <topicdata group="api" />
      <apidata name="System.DirectoryServices" group="namespace" />
      <elements>
        <element api="T:System.DirectoryServices.ActiveDirectoryRights" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" />
        <element api="T:System.DirectoryServices.PropertyAccess" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurity" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
        <element api="T:System.DirectoryServices.ListChildrenAccessRule" />
        <element api="T:System.DirectoryServices.CreateChildAccessRule" />
        <element api="T:System.DirectoryServices.DeleteChildAccessRule" />
        <element api="T:System.DirectoryServices.PropertyAccessRule" />
        <element api="T:System.DirectoryServices.PropertySetAccessRule" />
        <element api="T:System.DirectoryServices.ExtendedRightAccessRule" />
        <element api="T:System.DirectoryServices.DeleteTreeAccessRule" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
        <element api="T:System.DirectoryServices.AuthenticationTypes" />
        <element api="T:System.DirectoryServices.DereferenceAlias" />
        <element api="T:System.DirectoryServices.DSDescriptionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryEntries" />
        <element api="T:System.DirectoryServices.DirectoryEntry" />
        <element api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
        <element api="T:System.DirectoryServices.DirectorySearcher" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermission" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
        <element api="T:System.DirectoryServices.DirectorySynchronization" />
        <element api="T:System.DirectoryServices.DirectorySynchronizationOptions" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListView" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
        <element api="T:System.DirectoryServices.ExtendedDN" />
        <element api="T:System.DirectoryServices.PasswordEncodingMethod" />
        <element api="T:System.DirectoryServices.PropertyCollection" />
        <element api="T:System.DirectoryServices.PropertyValueCollection" />
        <element api="T:System.DirectoryServices.ReferralChasingOption" />
        <element api="T:System.DirectoryServices.ResultPropertyCollection" />
        <element api="T:System.DirectoryServices.ResultPropertyValueCollection" />
        <element api="T:System.DirectoryServices.SchemaNameCollection" />
        <element api="T:System.DirectoryServices.SearchResult" />
        <element api="T:System.DirectoryServices.SearchResultCollection" />
        <element api="T:System.DirectoryServices.SearchScope" />
        <element api="T:System.DirectoryServices.SecurityMasks" />
        <element api="T:System.DirectoryServices.SortDirection" />
        <element api="T:System.DirectoryServices.SortOption" />
        <element api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </elements>
      <file name="42d3775d-f933-fe45-cb80-3afc212623d3" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="6ac27c30-0ec1-02bd-d012-29d4ef9cf8ed" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </containers>
      <file name="ac335850-60b2-5321-4438-0e1ace019efe" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </containers>
      <file name="3412578b-aee0-cf2c-a906-2cae069e2619" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </containers>
      <file name="b146f3e6-0343-7b79-be21-330f811060d0" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="d6cc839f-a4a3-303c-c83b-6792aeef67f6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="b63dfd11-f8d6-3c0a-273f-f6a9bd6bc4d6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="b912e1ba-1d55-616c-470d-0b5d7e779284" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="d4c5bedd-e441-04da-30ae-82f6a79dbf10" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="148a75fb-da43-ce29-43fc-dfaf83e51659" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="dcc51e61-880d-2938-9c72-8e5888a618e4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="2b70c865-7b75-2894-565e-747600c0bd09" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveDirectoryRights" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="6f678c6c-5f0d-0c3e-0b78-9a5e9cc18ff0" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InheritanceType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="b53cd0d6-cb30-dfe4-9ab7-662f8c4c7173" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="3bf880b7-ce4d-72e6-3794-f07a4d57ef21" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </containers>
      <file name="8abf7fca-9cf7-00c1-69e7-c969dcd5378e" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </containers>
      <file name="37cd7902-e517-474b-1e8a-fe314cca31d2" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </containers>
      <file name="9e18b85d-7843-3983-55d6-047318cd59f4" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="3998a02e-3275-fb42-fa01-bd47ffe3be58" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="7dbe8ee3-b042-3754-e7cc-99e9b51a9a67" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="35d62d11-ce5a-57c7-ed6b-2b5701761823" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="d6b98579-d973-ebe8-3ada-6cb7c6c0925e" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="8bb0bc88-fbdf-c18f-5836-248a16ad8274" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="b7481807-d61f-239f-2b4d-8c4280f49b78" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="1cd96017-83c1-094b-a062-8307dab68e3f" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveDirectoryRights" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="d8060af5-6479-030a-d7e2-905613214810" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InheritanceType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="bca5cf5e-5f80-867b-b9d2-06f46b352954" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Self" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListObject" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ac4f0759-ad6f-35b7-f2b9-6a80b5eec4ee" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="a9130579-c98a-8cc8-fb2f-8f0f9c2d7c7f" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild">
      <topicdata group="api" notopic="" />
      <apidata name="CreateChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="89225d40-cd98-9f6c-0b39-7cc23c99719c" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="7ef8bccc-70a5-b4c7-9cb3-fdf8f1170822" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="efdc9292-537e-c984-fe39-151edb08913d" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteTree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="2df65469-9b0e-8a96-f364-50c3751850e1" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight">
      <topicdata group="api" notopic="" />
      <apidata name="ExtendedRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="a2406d50-5d5d-9eea-ede2-3426a3844ec7" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll">
      <topicdata group="api" notopic="" />
      <apidata name="GenericAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>983551</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="7e8ea48f-ddc1-287e-35df-0d00cb3191c8" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute">
      <topicdata group="api" notopic="" />
      <apidata name="GenericExecute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131076</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="0e6312d2-01c9-1803-b9cb-5d269fc3e3f9" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead">
      <topicdata group="api" notopic="" />
      <apidata name="GenericRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131220</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="9b6357b6-cd00-6ae2-5971-aa6c967c5609" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite">
      <topicdata group="api" notopic="" />
      <apidata name="GenericWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131112</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="6352dead-facf-c267-2109-e49551417334" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren">
      <topicdata group="api" notopic="" />
      <apidata name="ListChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="a635e55e-13aa-86f0-4989-6188e0758013" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListObject">
      <topicdata group="api" notopic="" />
      <apidata name="ListObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="a7f6d6b1-4c52-63c0-1a81-37088afabb9d" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl">
      <topicdata group="api" notopic="" />
      <apidata name="ReadControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="f4a1a238-45da-d092-34f2-1b7f2daebfcd" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty">
      <topicdata group="api" notopic="" />
      <apidata name="ReadProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="d71c4cff-5004-9cc2-7ab9-d891eec2e19e" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Self">
      <topicdata group="api" notopic="" />
      <apidata name="Self" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="fef1ad4d-2af5-30f6-1b56-9afa4a2a9e37" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize">
      <topicdata group="api" notopic="" />
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="2391253f-03b9-1cee-41d5-7bea040fb4c4" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl">
      <topicdata group="api" notopic="" />
      <apidata name="WriteDacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="0cf4b6ad-5d85-9364-bb82-03db56578846" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner">
      <topicdata group="api" notopic="" />
      <apidata name="WriteOwner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="3e8d19f6-8ebb-be18-40da-9d4e6f77c850" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty">
      <topicdata group="api" notopic="" />
      <apidata name="WriteProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="b41e84b3-f331-a091-406e-4d249592da1d" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="cfbad2e7-7439-cf45-431d-aff76f3e1b95" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="87d06776-1bb0-a2e2-7878-9c48fb70cd0c" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="9fafc4cb-6228-2267-278a-8d909553af97" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="afdd45e3-d53a-6bf7-ac09-4c73867fb092" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
      <topicdata name="AccessRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="319c2858-932d-bfcc-3604-bd96949f20e1" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
      <topicdata name="AddAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="7abe0776-20da-631e-673d-a8074ac24cdd" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
      <topicdata name="AddAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="71f802a9-84f0-9930-ba53-862367e3b93f" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
      <topicdata name="AuditRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="68557e3a-89ce-274d-c611-ceac3fa6b1b7" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
      <topicdata name="RemoveAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="d671e348-63c4-b8c2-6bf2-e6e79a5a2e71" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
      <topicdata name="RemoveAccessRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="1e689f6f-050c-b881-2a4a-c11212924b3d" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
      <topicdata name="RemoveAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="f6c8fcc8-e7be-9f25-dc9d-f255ce5f401f" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
      <topicdata name="RemoveAuditRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="014a8485-0ff4-96e5-47de-2c2a820ae25b" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
      <topicdata name="ResetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="04947e94-6c90-1d2f-0e56-c4a52667f4c2" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
      <topicdata name="SetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="ae142d9f-c621-3d28-a84d-3373f06c4bc3" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
      <topicdata name="SetAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="cc1623b6-bdb0-c0f8-908d-b7babbdb4425" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="b35eb68b-7254-9ee9-55ef-7b12518a4d61" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType">
      <topicdata group="api" />
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRightType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="fa46e287-e8ff-4243-eccc-a972638ce32d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="a0eb44f9-93bd-96db-b12b-b2e763ae09cd" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="fbcf681a-f686-764b-586a-bba30e62fff2" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType">
      <topicdata group="api" />
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="d6473e30-fc50-112b-9913-9828bcd7dbd2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="2c92f1d6-b86f-d9d4-6a9e-0a2128b24e15" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="99dab502-dd77-d9b2-9e53-3f83a32abb5f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="ff91aa02-1509-4546-69cb-81b3aaf624bd" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="69d15065-2dfc-cd68-b9c0-475a5f31336c" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType">
      <topicdata group="api" />
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AuditRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="bb8cb6eb-59c8-1758-2937-25b67a1d986c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="4f9c2547-0a88-6966-e42f-a1a9a4acff4d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="a40f2836-a4e9-053e-bb3e-3638f880438d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAccessRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="3392eb4c-eef8-57fd-dd10-d9110cf4b9de" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAuditRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="3de9779d-87c0-f617-9753-59b2c9395029" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="RemoveAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="1e1a392a-216d-0be6-513c-db6972d53090" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="8834b526-c2eb-4c1c-5af1-30cb4b442ef4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="02ffbbdb-d29c-ad1f-e939-0a71db315250" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="RemoveAudit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="1da137e3-d8a1-b576-7918-ab5782463dc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="a7161310-d5dc-5fe4-3603-ede895c9a893" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="d4d55280-a699-05ec-fb4b-2d5541aca1df" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="6e767359-7027-a0d8-271b-3725302dac38" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="790292ad-994c-43a4-051b-252e083f6776" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="63131178-bb0c-6438-ad73-9057d53414be" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurityInheritance">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySecurityInheritance" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="770eb821-7b92-bc9a-b459-40e0da14cf79" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="ffd2aa6d-a712-da65-bd4e-2c933c6ab84d" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children">
      <topicdata group="api" notopic="" />
      <apidata name="Children" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="1bf9777c-879d-1903-c301-f2b421dd8d83" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents">
      <topicdata group="api" notopic="" />
      <apidata name="Descendents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="fd853266-0dad-701f-fd92-31701829be12" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="80d258b7-38f7-72ae-5c4b-f193c20b3c9b" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren">
      <topicdata group="api" notopic="" />
      <apidata name="SelfAndChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="73539990-1e6a-1166-871f-06b68eecee40" />
    </api>
    <api id="T:System.DirectoryServices.AuthenticationTypes">
      <topicdata group="api" />
      <apidata name="AuthenticationTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.AuthenticationTypes.None" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Secure" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Encryption" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Anonymous" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.FastBind" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Signing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Sealing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Delegation" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ServerBind" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fc270675-6947-9ef7-3ba9-1bf49471e783" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <topicdata group="api" notopic="" />
      <apidata name="Anonymous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="7b843aec-0308-d9c0-8a7d-f0b5b743094c" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <topicdata group="api" notopic="" />
      <apidata name="Delegation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="fd401b7f-f03b-2544-e1f3-48dbb973563c" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Encryption">
      <topicdata group="api" notopic="" />
      <apidata name="Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="1102e93c-c942-9483-0c7d-ad770d177888" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <topicdata group="api" notopic="" />
      <apidata name="FastBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="986e6db8-64ea-bcd5-e378-20f723731f1e" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="c3c4a22a-1949-5e2f-7744-0020d0137ba2" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <topicdata group="api" notopic="" />
      <apidata name="ReadonlyServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="90808c90-8f7c-1299-f5ba-da14c1b6586c" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <topicdata group="api" notopic="" />
      <apidata name="Sealing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="2b25f3fb-1d03-b2f6-987b-bd3947ec8b0d" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <topicdata group="api" notopic="" />
      <apidata name="Secure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="9e530247-b0e8-234d-b0b8-916b3e63182a" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <topicdata group="api" notopic="" />
      <apidata name="SecureSocketsLayer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="47e54d56-5536-85b9-7670-a51de3494382" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <topicdata group="api" notopic="" />
      <apidata name="ServerBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="b760db1f-83da-c0da-64ea-03beca0eb9de" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <topicdata group="api" notopic="" />
      <apidata name="Signing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="af97cb28-334a-dae7-d3f2-ff34a844326f" />
    </api>
    <api id="T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="95cd965d-f91e-6f1c-6fc8-05137e06e400" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" />
      </containers>
      <file name="7069f8a5-71c7-e6db-adb3-32f553c64c74" />
    </api>
    <api id="Methods.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" />
      </containers>
      <file name="3c61c002-105f-7730-00f4-bba13f18e71f" />
    </api>
    <api id="Properties.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" />
      </containers>
      <file name="60967b32-b64f-de5e-6068-bef8d9e595e8" />
    </api>
    <api id="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="e9a841e7-8fa7-b354-a4f4-a003721e2524" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="0f1e8768-f864-9750-40b5-c8418df950cb" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="59cbd5ca-857f-4cd8-2f3a-10a6891cfdd4" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="efff7dc3-ee63-c1dd-6575-b16d1846068f" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="c2d03749-8eb3-434b-20b9-8b29e3cb7a98" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="6c10671f-07df-316e-78e8-8383ab846ac4" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="11d478b8-f8ed-64ec-09fc-0a6c0b07417c" />
    </api>
    <api id="T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="d3be9d4b-91ad-ff13-cc51-4a31975e3370" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" />
      </containers>
      <file name="9f64d6a8-6b53-ed19-ede3-3518af6509fc" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" />
      </containers>
      <file name="7eb6fc3a-faf5-a184-0496-3115cbd5b151" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" />
      </containers>
      <file name="b2af02a9-48ca-33a7-de93-d618740a5f84" />
    </api>
    <api id="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="a36294ba-324c-cc59-e67c-ac0bea737e0b" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="fd19a590-d5e6-3b35-6ed2-e14422ab2f17" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="9cb60c8a-4247-579c-8c09-d6f74ba76fb9" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="67514f9f-611b-f77b-f34f-48e3a47ff69c" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="0c092661-1007-42fb-7282-71abb67647a5" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="f10ccc89-9357-f3fe-2099-003443f40577" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="0ead1e11-954a-1089-22c4-fe30273fc44a" />
    </api>
    <api id="T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="a460414e-781c-c48f-0dc5-8c70705e66c5" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" />
      </containers>
      <file name="81cc93c1-034d-56b4-2883-7530d507ffa5" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" />
      </containers>
      <file name="c7e8bb57-c821-8063-762b-34bdd9dcd62e" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" />
      </containers>
      <file name="b0f637c4-4848-4a4b-7dbc-fe84a6a6a949" />
    </api>
    <api id="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="286c15f7-9cb2-bb58-bb42-5b7d758b2d3c" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="654c65e9-cdae-fd2c-4d9e-a853b6b3c0a5" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="5c4d4c90-26bd-967f-6c99-cb851b7ca634" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="08bce8c8-c733-bde2-67e2-3145abab2cbc" />
    </api>
    <api id="T:System.DirectoryServices.DereferenceAlias">
      <topicdata group="api" />
      <apidata name="DereferenceAlias" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.DereferenceAlias.Never" />
        <element api="F:System.DirectoryServices.DereferenceAlias.InSearching" />
        <element api="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject" />
        <element api="F:System.DirectoryServices.DereferenceAlias.Always" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="9719c023-a0e4-3845-0daf-cc308ed5f857" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="b502bd2f-1cce-e93c-ad23-527b316e826c" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject">
      <topicdata group="api" notopic="" />
      <apidata name="FindingBaseObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="0cb022fa-c327-f856-c609-e6f3e11cc880" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.InSearching">
      <topicdata group="api" notopic="" />
      <apidata name="InSearching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="e330bb92-2c00-3c8b-19e7-f211a79ca355" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="b7e5bfda-aea9-3096-fa52-490e83160d91" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntries">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="fd6b89b5-7f95-24e9-2693-3458d94c5545" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" />
      </containers>
      <file name="e57c6a5e-0792-ee09-3766-c7bffe7ef58c" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" />
      </containers>
      <file name="df1cbe52-cc7a-b30b-859d-2a8605631c2e" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" />
      </containers>
      <file name="658fd5c4-c76b-15cf-7641-c975361b7f49" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntries.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="2950e9db-f323-5009-4c7b-459609aacb1e" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="8edcb982-70aa-1482-c820-6b8aa0b7f03f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="ea524cfc-176f-0a2d-eecb-a6fe9e004b05" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="5b8f16f0-76a2-d8cd-948b-8f9619da5d75" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="1d2b1938-ed98-1f2a-8fe7-ebc715d101f9" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entry">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="38b034e6-c95f-74be-bc20-9176fdc177c6" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <topicdata group="api" />
      <apidata name="SchemaFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaFilter" />
      <returns>
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="29468439-ffa1-ac1f-12aa-9c63538685fd" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntry">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectoryEntryDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="369371bf-f3e5-c48d-f58d-b180e7511bbc" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
      <file name="a01a2992-ff5e-1395-fb0f-af7222cdf07e" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
      <file name="82788066-78df-31ec-1639-5fcc2110d310" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
      <file name="76bf0b4e-dbe4-2558-6c7c-ca2dcbcd2d2d" />
    </api>
    <api id="Events.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
      <file name="f5a4cf9b-47c2-6790-0bd6-aefd02ae4782" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="c03c4ba8-dc1b-1db4-da73-3ddc07107ba5" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="3866dbf0-1ffb-5feb-b044-386ba78e45c4" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="b72f96d8-cc84-3f56-6103-f54039ccf10d" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
      <topicdata name="MoveTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="bf0d15fb-3c56-604c-2c50-2c69300f7c29" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata name="RefreshCache" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="0645bd90-c127-bff5-4573-4558ff74f23e" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="c267ebf1-b191-37ee-d133-1a8a2750f457" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="adsObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="ecac45ba-7fcc-0984-6709-a2ab88e1fe74" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="0dcd0b6c-f07d-0142-65b6-7eb680470071" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="342e05b1-73b1-3c98-d1db-4874fab417f2" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="bac56fbe-3639-dd84-c798-26c979a7d895" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationType" />
      <setter name="set_AuthenticationType" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
            <enumValue>
              <field name="Secure" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAuthenticationType</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0ca5386a-2adb-502d-ad90-dbb440b9a8bc" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSChildren</value>
          </argument>
        </attribute>
      </attributes>
      <file name="386d38b5-d348-d8bf-2540-3e9db786a1b5" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="b7b08b3a-e43d-6537-bf4b-f77d6108da9b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <topicdata group="api" />
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="ba0ae1db-792b-dbc0-e359-f7601acf254e" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="868f11c8-6cbf-9c8e-1c8a-7c9e12bdc1e6" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="42da6aa5-2f55-ae53-5f71-0ca33da641dc" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <topicdata group="api" />
      <apidata name="DeleteTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="ae757214-2016-66d5-26d3-04ac6098e2f6" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectoryEntry.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="21357447-3799-e9d3-a796-1dd83adc5af7" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="a1779597-2e53-1b65-96e4-6237c4908df3" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Guid">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Guid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSGuid</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5294bc7d-d9b3-32f0-350a-ad10ab368b3b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="3368b2da-fc76-2a58-c820-4a18ba08cd5b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)">
      <topicdata group="api" />
      <apidata name="InvokeGet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c49962fa-3ec2-0228-9455-ebfbd86886e0" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvokeSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2f1612a4-c34d-4e65-8ef9-2a4848bc5b1e" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="72db3b71-93d4-7a54-bc64-7322d944d5e3" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="0dd36dcd-7bb6-0573-3712-f4cc903b1eac" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="601be6a2-bdb8-663e-b8c4-b316c9b74a98" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <topicdata group="api" />
      <apidata name="NativeGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NativeGuid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeGuid</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e25eb9d4-2f30-cb22-c303-bd1394e7ab75" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <topicdata group="api" />
      <apidata name="NativeObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NativeObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeObject</value>
          </argument>
        </attribute>
      </attributes>
      <file name="85893899-df83-c5f1-b38d-a7230ae19ff3" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity">
      <topicdata group="api" />
      <apidata name="ObjectSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ObjectSecurity" />
      <setter name="set_ObjectSecurity" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSObjectSecurity</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3808dbf6-bb52-8228-f07a-9507858db799" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Options" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOptions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="58b4744b-7711-2b72-a74a-5706518ac489" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSParent</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2ae60d82-c37c-8077-24fb-191e6a555234" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata set="true" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPassword</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9ac2bbd0-17fa-ad8d-3129-a3e49541b27a" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPath</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d9573698-985b-7ca3-939e-0e0a098a5a10" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSProperties</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6dc0ffc9-06a0-8626-4c45-174b4a1356b3" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="a0a3fb5c-69e2-0a2f-14db-220d9664f686" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="5885946b-459b-9af8-93f2-2a00525de666" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <topicdata group="api" />
      <apidata name="Rename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="bf23e398-e9ee-dabb-c58d-9de0f0b3d585" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <topicdata group="api" />
      <apidata name="SchemaClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaClassName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0effebcd-e023-9c11-6cb9-7be9b306ad11" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <topicdata group="api" />
      <apidata name="SchemaEntry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaEntry" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaEntry</value>
          </argument>
        </attribute>
      </attributes>
      <file name="88c98977-fc2b-0e79-f826-f22397055bb3" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <topicdata group="api" />
      <apidata name="UsePropertyCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UsePropertyCache" />
      <setter name="set_UsePropertyCache" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsePropertyCache</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fdf4c82b-918a-5d46-8c93-5acf194948e6" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Username">
      <topicdata group="api" />
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsername</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3391336b-a9ab-26c2-c3c3-35f1ec3f8802" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6481842b-81ec-1761-2a0c-2ab16183f211" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </containers>
      <file name="666d5bc1-79e4-81e2-0df4-93d8398246c4" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </containers>
      <file name="16a8334f-fe5a-6e51-c347-4288f2ad850e" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </containers>
      <file name="707e1eb8-d545-5993-fb9d-2bbadf0eadea" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName">
      <topicdata group="api" />
      <apidata name="GetCurrentServerName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="1b1552f2-eea0-4816-2b6a-8cc40c532d8a" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="f87fb8e2-3067-7107-5442-518fd3200e27" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageSize" />
      <setter name="set_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="7838f560-e707-3d17-f98a-97ad7dc58bcc" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding">
      <topicdata group="api" />
      <apidata name="PasswordEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordEncoding" />
      <setter name="set_PasswordEncoding" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="482d5f0d-0500-b3f1-583b-b25b205a1a43" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort">
      <topicdata group="api" />
      <apidata name="PasswordPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordPort" />
      <setter name="set_PasswordPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="0a36a1c8-507f-cc24-2b77-f5eddd67401d" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral">
      <topicdata group="api" />
      <apidata name="Referral" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Referral" />
      <setter name="set_Referral" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="e7a1d9aa-ef42-ea98-7e61-124a7746b655" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityMasks" />
      <setter name="set_SecurityMasks" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="fea758d3-dcb6-a996-f9fc-7395760e060f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)">
      <topicdata group="api" />
      <apidata name="SetUserNameQueryQuota" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="accountName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="e346c2aa-dc45-8ec8-88f4-87f91b7a6649" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySearcher">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectorySearcherDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="001c4803-7a62-30a5-0dfe-32a839c2329c" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
        </element>
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
      <file name="2aaa46a6-00c2-4712-6636-64f9101a7ac8" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
      <file name="83593283-0300-f587-2c0f-62c885f178a6" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
      <file name="3486da93-a80d-353c-1bc2-e055c08c5016" />
    </api>
    <api id="Events.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
      <file name="22b242dc-6bdd-ae6d-ca79-24b931e4e911" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="cc75da5b-464c-5a26-89e8-44d372105b84" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="8399cdee-0544-8e31-a295-14e2cf8583ee" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="d2cda677-8f76-0226-74a9-1dc29477b59d" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="7611b6ad-cc20-faff-56bb-77076cbed6d2" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="3ee0cd40-c7ba-8d9f-aa63-2746b5094a80" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="dd5963f2-3b02-db39-9a1e-9310bb1aec09" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="7f043b1f-c7ea-713b-cbb3-2527d212e140" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="5c013e3f-c4db-8759-a946-a6f167240e54" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="51c206ba-bc8d-8b15-9479-d0785ce3816f" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="ec26b93f-23aa-671f-2878-66eb5eb2c989" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Asynchronous">
      <topicdata group="api" />
      <apidata name="Asynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Asynchronous" />
      <setter name="set_Asynchronous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAsynchronous</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="62e2dc9f-d758-e6bc-827b-2c60a64e0eb3" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery">
      <topicdata group="api" />
      <apidata name="AttributeScopeQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeScopeQuery" />
      <setter name="set_AttributeScopeQuery" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAttributeQuery</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6f7aa803-e331-d6f7-2052-7d25597923c5" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <topicdata group="api" />
      <apidata name="CacheResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheResults" />
      <setter name="set_CacheResults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSCacheResults</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ff66b6d9-fc3d-b386-c04b-ff78b08e6be9" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <topicdata group="api" />
      <apidata name="ClientTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientTimeout" />
      <setter name="set_ClientTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSClientTimeout</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d1924375-c69f-8a0c-727b-26e5b053c7bc" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DerefAlias">
      <topicdata group="api" />
      <apidata name="DerefAlias" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DerefAlias" />
      <setter name="set_DerefAlias" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDerefAlias</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="de50dce6-8341-128d-e19c-e2d7d2cb042b" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization">
      <topicdata group="api" />
      <apidata name="DirectorySynchronization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DirectorySynchronization" />
      <setter name="set_DirectorySynchronization" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2eb17029-490b-a1f3-bb9a-2753376cf2e6" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectorySearcher.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="9d89b2db-5dcf-552e-7de1-5a1b370a306a" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedDN" />
      <setter name="set_ExtendedDN" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSExtendedDn</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="11e48771-cd84-81a4-5e45-21cff58c9819" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>(objectClass=*)</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSFilter</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ddb07d9e-7a31-db58-157d-d5c21c6b3871" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="1baa6d91-bde5-2c4f-3853-9b1a840b5f7e" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="04ff0535-c673-068b-5da6-905e7997faf8" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageSize" />
      <setter name="set_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPageSize</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c3b6b01a-aed8-23f1-7598-49e732e06849" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <topicdata group="api" />
      <apidata name="PropertiesToLoad" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertiesToLoad" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertiesToLoad</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="14801271-56b7-64ae-9bcc-256640c35f9b" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <topicdata group="api" />
      <apidata name="PropertyNamesOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyNamesOnly" />
      <setter name="set_PropertyNamesOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertyNamesOnly</value>
          </argument>
        </attribute>
      </attributes>
      <file name="477a41a6-415e-bdee-dff8-8645597daebe" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <topicdata group="api" />
      <apidata name="ReferralChasing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReferralChasing" />
      <setter name="set_ReferralChasing" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
            <enumValue>
              <field name="External" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSReferralChasing</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3b145485-3ec5-d874-861b-aab00f6a9651" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <topicdata group="api" />
      <apidata name="SearchRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SearchRoot" />
      <setter name="set_SearchRoot" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchRoot</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
      <file name="8a688b1f-b599-fc19-f786-e1ced437f4f1" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SearchScope" />
      <setter name="set_SearchScope" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SearchScope" ref="false" />
            <enumValue>
              <field name="Subtree" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchScope</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="62ee1362-b147-cdf2-9501-3eb9f094170d" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityMasks" />
      <setter name="set_SecurityMasks" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSecurityMasks</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="06e6f2d8-c26c-dc1a-c5f9-f5d34696feb1" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerPageTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerPageTimeLimit" />
      <setter name="set_ServerPageTimeLimit" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerPageTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b8f5b025-13fb-f18b-1092-6f577aaad501" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerTimeLimit" />
      <setter name="set_ServerTimeLimit" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1456d966-5657-97ea-df57-dbf50affb1bf" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <topicdata group="api" />
      <apidata name="SizeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SizeLimit" />
      <setter name="set_SizeLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSizeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="33f9ef39-a9fb-1f85-7776-e5ddc0e44882" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSort</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4e78b6e0-fe53-3454-7e4c-7f0905729bc6" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Tombstone">
      <topicdata group="api" />
      <apidata name="Tombstone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tombstone" />
      <setter name="set_Tombstone" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTombstone</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8e9a1397-5506-cb8c-25de-2e80657f5702" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.VirtualListView">
      <topicdata group="api" />
      <apidata name="VirtualListView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualListView" />
      <setter name="set_VirtualListView" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSVirtualListView</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9e6633ac-8108-e91a-283c-2f95d9bf5353" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.COMException" ref="true" />
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="9fe66839-e32d-b983-97c8-5b87e8404925" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
      <file name="d0f3ee5b-3886-b21c-182c-8243ea511f07" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
      <file name="14dd3b70-b7b0-6a5d-18da-0458767e404b" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
      <file name="8a0f287a-24a7-1540-52c6-469ecc8c8b9e" />
    </api>
    <api id="Events.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
      <file name="2e302719-c662-b199-1919-4e5329de3e3b" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="919d4ddf-e8c5-9e38-2a03-00330d3fbba3" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="ceeda229-6fa2-629b-e0c3-c56e87c59994" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="bd03f290-8b1b-357e-d886-e1d157bc5ee7" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="e80a5bf2-ee64-f910-3595-b531179d1a72" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="e2c947f2-1ede-36ab-ad72-8b93aac2f1c3" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError">
      <topicdata group="api" />
      <apidata name="ExtendedError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedError" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="bb4ed8e2-7471-f5ec-e72a-a03c56f6ddcd" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage">
      <topicdata group="api" />
      <apidata name="ExtendedErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="39d2b371-b18e-864d-882e-26866710c734" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="30104b2b-1dc8-2058-7d12-dbba34ceddf4" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="68fa4fe5-fdfb-e842-45a9-84aab102df15" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" />
      </containers>
      <file name="2c628daa-5c77-f3b6-06fd-b5ea4c3ee971" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" />
      </containers>
      <file name="4d653eda-bfc9-c4aa-2c0e-bb5578bfde92" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" />
      </containers>
      <file name="8e2d1850-c6ec-6efb-b8f2-894b734db819" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="d88d8eee-213e-e4b9-1e80-9b6859470f05" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="c645c4cf-09c5-9b15-0d1c-53acdb1c81d6" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="fad1f29a-3ed1-fa4d-0c0b-13d0dbc901d2" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="2aeee8fa-2034-0a9c-c02c-3fb550753f55" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="289c4f32-b8a7-0426-40db-c3a34f346646" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionEntries" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="51819dd7-3f92-46d0-ebdf-91e0bc725d69" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAccess">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="09ed2638-9a9f-ceab-d42a-7317ba948c82" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="a116d9d8-cca2-bfae-5b55-b04a0d2e336d" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="86807b26-7d08-134c-7c3c-b312e754f4f8" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="cb1db58f-03ac-3fda-786a-464fd1a961cd" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0a6d6fc6-eef6-d349-9250-fa972540dfe0" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      </containers>
      <file name="c0e993f8-23e3-065c-d96a-f336e0da68e3" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      </containers>
      <file name="d84b7c07-ee76-2f0b-5d21-5bcf449a0b74" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      </containers>
      <file name="c7d1e36c-bfb2-f189-7978-6affd18998ea" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="4160fcb8-d384-0abd-5d7c-e903d054e8d4" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="2ed16d2b-b413-f189-7410-12f5ec5cc7a5" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="09106077-8dfb-0344-dc1e-833de6548fff" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PermissionAccess" />
      <setter name="set_PermissionAccess" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="ea098c5d-6a55-6c55-0677-47fc6ff7af70" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="58e8fac0-7d03-f556-8a36-d6d334bec4db" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      </containers>
      <file name="1c4fc76c-d168-82b0-a199-dbc4b2908c3b" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      </containers>
      <file name="035ff64e-a64f-b0c1-07e3-c2b686cb512e" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      </containers>
      <file name="717781f4-d9c9-4b3a-8b5c-8edb324e175b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="54f27ea8-1b2c-b901-5fcf-a9fd7d4648a7" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="e06707a4-2366-7796-6032-230d41ff6fdd" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionAccess" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="346cd5fd-6986-4d12-d739-c0727366ae0e" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="934526b7-12a6-5fe6-ebec-da9acbba48c5" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      </containers>
      <file name="5c4228a7-d577-b16a-3bd7-32c749217df5" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      </containers>
      <file name="7f538a10-6352-27bb-cecb-99d9c3ca9848" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      </containers>
      <file name="e793fcb0-b7f9-1186-bd9b-60ea2649ae63" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="cacece95-c6ee-7871-06df-abe7f0f13445" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="1885e3d8-dfec-168b-ffdc-8c4cc33cdf99" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="6ba580cd-88fe-61ba-bade-2e9cc23541f4" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="c04bb3ef-1d49-6e7d-0a8a-3764f68a633e" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="1b63eb17-3dd1-b8c6-5e03-f41bf2118361" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="2eaa0742-9c2f-0ba1-93eb-a95c38025c93" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="12b8ae1c-fd3e-afd6-62c8-58ae84df5932" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="71607984-3e95-d3d4-2411-e6b778071f28" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="18b9cbed-4786-926e-3490-19636f6cf6c2" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="5292b697-9948-acf5-1628-9d8416c4bc4f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="9d85225d-2988-53e4-d05c-9e788a2e6d7b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="a4b39b05-6e1a-e821-0848-f26f376049e6" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="81f254af-9eb4-c5e5-b3f9-beea0e425b2a" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="f9e2e0a4-619a-fc7e-cebc-136e5f824ae9" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronization">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="64efc97e-3faa-c0c2-4e84-c5094b7a778d" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" />
      </containers>
      <file name="76a2c0c5-d842-f107-210d-741091e0082d" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" />
      </containers>
      <file name="fe4c63d8-c528-7d8e-eb11-470c5f72cdb1" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" />
      </containers>
      <file name="067c709f-2258-5e7d-6b96-4bb97738db71" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="2f3095a8-4adc-df2f-0cf0-8c2d181d605f" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata name="ResetDirectorySynchronizationCookie" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="6132ca75-e665-20e4-9be9-d27092551d4d" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="a70d5505-e1b8-0f2c-4f47-020242200a4c" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="4c1268d4-c443-e581-7f4e-ed46d44e1119" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="d8d2d4fb-305c-bf87-44e3-6370c06d7bb1" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="8dcf7a64-b2f7-974c-d2d9-37750e00cb10" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="28d9989d-03c9-bb00-ecfa-244e17708b8f" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="4b36add7-e5f5-38ff-612b-455997a97d5f" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="GetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="5a5d834a-c61f-dbda-877e-af84eb342ca6" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySynchronization.Option">
      <topicdata group="api" />
      <apidata name="Option" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Option" />
      <setter name="set_Option" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronizationFlag</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4cc964e1-df49-5f7b-e901-5ce49145549c" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="1f669590-0224-8d51-263e-00f1e07f8035" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="82a3c714-00b7-9e5e-5f3f-ab214f646ccf" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronizationOptions">
      <topicdata group="api" />
      <apidata name="DirectorySynchronizationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.None" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b7a6fcc3-1e82-675f-7026-ef50ab330ac1" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues">
      <topicdata group="api" notopic="" />
      <apidata name="IncrementalValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2147483648</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="e84bf6c0-d509-02ec-7691-4c2818e0d0fd" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="4e8a3c7b-d04b-a6db-9075-a2fb97a0578e" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="ObjectSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="ea568e7d-0a2e-cce8-c37d-b62425e1528b" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst">
      <topicdata group="api" notopic="" />
      <apidata name="ParentsFirst" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="9ad3d07e-d8b7-3f57-9992-777dff7dbfba" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly">
      <topicdata group="api" notopic="" />
      <apidata name="PublicDataOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>8192</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="a95c9939-4c63-2481-5e7d-051d1fb2e280" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="025a92a6-99f5-a832-78a7-6cef3999848f" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" />
      </containers>
      <file name="91de286d-da7c-eac3-51fb-62ac42685e1c" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" />
      </containers>
      <file name="f68a1024-a428-9e6d-2122-575e29e107a1" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" />
      </containers>
      <file name="5d1686e6-2d17-0499-15d6-39d0cc564fbe" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="387dd4d4-b109-77bc-2c55-54d647b5b599" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="f42f078f-0c81-ca54-2621-1ced6c0b9dcd" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="b99392fb-3c9a-ff09-100a-c1b6f2b2b7ad" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="c7eb64c7-155d-ef1d-64ee-07ab855b9a42" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="31e80622-f5df-52cc-8cab-d49dd8c6409a" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="874a1189-5c1c-b21d-0a8b-145aa4f7c483" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="ddd2fcb6-196a-b6f2-96cd-a41a519139df" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount">
      <topicdata group="api" />
      <apidata name="AfterCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AfterCount" />
      <setter name="set_AfterCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAfterCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c82965a-0859-c217-9176-7aee1d40675d" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal">
      <topicdata group="api" />
      <apidata name="ApproximateTotal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApproximateTotal" />
      <setter name="set_ApproximateTotal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSApproximateTotal</value>
          </argument>
        </attribute>
      </attributes>
      <file name="97f9d606-73e2-e8e7-d9d9-4ea791bdd858" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount">
      <topicdata group="api" />
      <apidata name="BeforeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BeforeCount" />
      <setter name="set_BeforeCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSBeforeCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bc350609-3cb9-418a-2d6f-0f9238bb21e7" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext">
      <topicdata group="api" />
      <apidata name="DirectoryVirtualListViewContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DirectoryVirtualListViewContext" />
      <setter name="set_DirectoryVirtualListViewContext" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectoryVirtualListViewContext</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c00bddae-fedb-1e35-4b1b-8a9bfe3455a1" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Offset">
      <topicdata group="api" />
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Offset" />
      <setter name="set_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOffset</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e8c4b1d0-4cb3-f45a-9b56-54b1b6df7389" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTarget</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3f0ad587-c808-fd28-4c40-05e87435f867" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage">
      <topicdata group="api" />
      <apidata name="TargetPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetPercentage" />
      <setter name="set_TargetPercentage" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTargetPercentage</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0011c794-4e67-fc35-dff0-263fde44b6c2" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="ff3844c7-f0e0-cd4c-191a-3f5166a1b04a" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata name="DirectoryVirtualListViewContext" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      </containers>
      <file name="7e10c885-b85e-4a94-b9fd-0277c2a8b795" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata name="DirectoryVirtualListViewContext" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      </containers>
      <file name="9b28f19d-926b-69bc-9c72-7fd2c752f265" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
      <file name="7f09aef6-9c88-2d7c-52be-5d0e45318527" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
      <file name="5a60cad4-b7ab-482f-f59f-8710cd04e2fd" />
    </api>
    <api id="T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6e0ce9e7-a904-93f2-36a1-30f630881302" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" />
      </containers>
      <file name="8df6953e-cba8-8179-add0-b6e716693514" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" />
      </containers>
      <file name="da48b6ba-b0d8-9447-2e36-17fbb44bfa66" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" />
      </containers>
      <file name="1333f27a-374c-775a-98fd-0e665c90f43f" />
    </api>
    <api id="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
      <file name="f24447df-7ab8-2566-736b-056eca26dee4" />
    </api>
    <api id="P:System.DirectoryServices.DSDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
      <file name="54f6ddae-d31f-6f30-99c6-697374688bde" />
    </api>
    <api id="T:System.DirectoryServices.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ExtendedDN.None" />
        <element api="F:System.DirectoryServices.ExtendedDN.HexString" />
        <element api="F:System.DirectoryServices.ExtendedDN.Standard" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="d6e272bd-c68b-f855-b746-1f450caed245" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.HexString">
      <topicdata group="api" notopic="" />
      <apidata name="HexString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="8a46dd46-b199-594f-29cf-4619086a9453" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="33c1ec74-874f-7f58-a42d-d27387116791" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.Standard">
      <topicdata group="api" notopic="" />
      <apidata name="Standard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="77125e50-f56f-6175-7a60-7df0b2250b61" />
    </api>
    <api id="T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="8d674c7a-7815-68e1-6a1e-148b6f6feb8e" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" />
      </containers>
      <file name="56f18eb2-65fe-b64f-67fd-ee983c83257c" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" />
      </containers>
      <file name="fb462cf3-5ddf-ad96-c7b9-4f938528e60f" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" />
      </containers>
      <file name="607a5968-dc91-5fa8-3855-97b0b0b47a30" />
    </api>
    <api id="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="7f0e4174-185c-c92b-0f53-b2d6711123dc" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="ce7a6b04-136a-a81f-afe3-b5f75a4bdfb8" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="75d879d8-d8fb-2cb6-a14d-d1ffc179b974" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="c7705853-caa3-c132-995e-c81e35b5efe6" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="4b1148f8-c5a9-98a8-b278-df977bdf4b22" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="be514deb-741b-3632-a074-ae4ef5270736" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="5f90f572-c920-3c64-cd76-04bd385cae95" />
    </api>
    <api id="T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="a025521e-e0ad-068e-4ce0-75da59af4763" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" />
      </containers>
      <file name="0d2e24c1-ff03-14b0-28c0-d742baa25fef" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" />
      </containers>
      <file name="e24b56b0-2e38-65a6-139a-ffb26a82e7a1" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" />
      </containers>
      <file name="cb825885-fa54-090a-5507-d38ca386a04f" />
    </api>
    <api id="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="cdf644ff-3928-a46d-6fb1-237ac17a07af" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="ec8454d5-90f5-2fd0-9bb5-dd5f3755ee1b" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="5bddbdc7-3b08-ed53-0f2c-ca9fe006f44c" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="ac64dd3e-e568-1002-a76b-0a05bc7bb12e" />
    </api>
    <api id="T:System.DirectoryServices.PasswordEncodingMethod">
      <topicdata group="api" />
      <apidata name="PasswordEncodingMethod" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl" />
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="20aa0336-5c58-e7df-7dd0-b029a864f04c" />
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingClear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
      <file name="e7b5c9fa-592a-4afd-576d-ffadba67270d" />
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingSsl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
      <file name="01ae99c5-931b-88dc-4551-e5c8f81df37c" />
    </api>
    <api id="T:System.DirectoryServices.PropertyAccess">
      <topicdata group="api" />
      <apidata name="PropertyAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.PropertyAccess.Read" />
        <element api="F:System.DirectoryServices.PropertyAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="719583b8-f911-4a7c-67c1-d2440acea436" />
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
      <file name="f1bd8cf7-3470-b93b-5356-06806fa0943f" />
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
      <file name="c2a5988c-f6c9-d14e-9cfe-c07f74e60933" />
    </api>
    <api id="T:System.DirectoryServices.PropertyAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="be31fe1f-03af-1d0a-47c0-d8256cffc300" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" />
      </containers>
      <file name="7a9ca215-a688-3409-c51f-22f9a4594327" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" />
      </containers>
      <file name="fc76fdad-1b4f-f4e9-f35b-3eedd9dd742c" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" />
      </containers>
      <file name="c7289ae4-e9ef-511b-47fa-824fba895331" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="611d6763-8caf-4eb3-a1c9-dce7c0a22ff2" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="f2af5ea2-0195-9fa3-9dc3-d756579ff462" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="c049262a-fb20-7627-9801-8cbc65c20633" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="f6623ee7-34b7-f087-0887-8ebe623a44d4" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="0e117968-bac0-aa02-335d-f1aa444457b4" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="39a18605-43b6-14ff-cd8d-b4cf642f2207" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="0ab8bcab-8207-2aa3-b602-76cc88fae41f" />
    </api>
    <api id="T:System.DirectoryServices.PropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="917e23ee-d075-1a6c-339f-079e14a434a7" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" />
      </containers>
      <file name="6b2ad13f-dc6d-b998-fe1a-921310a58178" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" />
      </containers>
      <file name="1d784b4b-6a37-4c53-68e3-a8df28abbe21" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" />
      </containers>
      <file name="e4178d16-47d7-340b-c713-883ef4562781" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="3ed0b210-81ae-850a-facf-c3af89a88a92" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="0c7a9544-775a-cf82-c847-abc4c5de6c06" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="0f589981-bb0e-f25b-3a46-57d0c9d2f274" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="2393a3ad-ee49-4dd2-ea40-998bb0b03300" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="e9eb22aa-dfe5-c65a-3371-4511ac076a8d" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="0047b3e9-f2a3-c3e1-4613-8b5669c0b018" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="5e770280-4e57-7b39-ce67-f6a785a3d26f" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="6f04727e-9a24-1b15-4e78-34a664689354" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="c0635083-c3f7-8b1c-e0e1-3400f29739f0" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <topicdata group="api" eiiName="IDictionary.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="460e9904-deb9-3ae4-b985-0fcae2b8819a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
      <topicdata group="api" eiiName="IDictionary.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="ad79a103-c7a8-9703-d63c-908bb014eb07" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="204a4b5d-b532-2a23-9c44-80a325a8447e" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
      <topicdata group="api" eiiName="IDictionary.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="5cde0d8d-4a1a-de1c-b7b3-834f66f60c2c" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
      <topicdata group="api" eiiName="IDictionary.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="222e46b7-dfcf-9a22-23fd-3f307f1e960d" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IDictionary.Item" />
      <setter name="set_System.Collections.IDictionary.Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="179307a9-27ba-b813-1977-3cfddfd07d68" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
      <topicdata group="api" eiiName="IDictionary.Keys" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="c21cce2b-435b-8cf9-3757-45327cfa0d8a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="e2160372-8c0f-01a1-1774-a35474ae2c60" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="f5c17fc1-21d1-bab0-915e-c99634e0cdfb" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="4bcc8030-b034-9a32-8c2d-88e090eb516c" />
    </api>
    <api id="T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="4d977a9f-c615-a515-afa7-045e30d77e92" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" />
      </containers>
      <file name="cffd9314-a9bc-af27-f1e6-d2bad7b60a83" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" />
      </containers>
      <file name="f886b15f-c6e3-fea7-e101-5de3d2ee69d9" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" />
      </containers>
      <file name="0dd361c8-3a8f-3007-4f21-3e28e5b9f164" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="88cd1ffa-1558-4c08-08aa-69171e0d5c9c" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="f0e12811-c1cf-80e2-ca8f-d0a83e5d361e" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="a76a52e6-a1a7-978c-f3d5-0f02256b87b8" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="584b0b5c-7de7-1dea-e197-14bd11a1ce00" />
    </api>
    <api id="T:System.DirectoryServices.PropertyValueCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="27ea7a4e-038c-5336-0c9d-44a06b74f837" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" />
      </containers>
      <file name="c2fd5a98-93e8-e190-d1e8-c8076f5a532e" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" />
      </containers>
      <file name="1544c9b8-bbca-d4e1-7f96-bb01d94fc485" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" />
      </containers>
      <file name="d194754f-adbb-b62c-937e-ae991e7c3a62" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="27e3f2f5-d123-51f9-7321-0b318508960f" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="8c5c49ed-6c5a-3454-813d-b5246a8c5d7c" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="23b19f1f-420f-a148-3229-2c51627d75ff" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="e0a3f071-2c08-53ed-b03e-21d5706f9f63" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="b796d631-59e1-1235-3beb-ccd7c5bc5896" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="055fba59-0847-3c7c-f984-1af2a73267f4" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="bfcc931e-c249-bd2a-16dc-76629af598b3" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="decfa6db-2b94-e22f-fd3c-a95972a10960" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="db3b08fc-4f33-bda3-c92b-b8db15d18692" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="19d99857-0be8-c40d-6de6-a44e7c7a1346" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="84bd6a62-09f8-9a7d-59c7-b09f9c1b0fe2" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="a4999c0d-9abe-cbf9-6208-07909790e52d" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="1e915924-591c-b3b0-9179-2e18b2ed029a" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f0663abd-8cae-d77a-f523-9ce756827d22" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="dcdcd2a6-24b1-5073-df19-5121b32d5e2d" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="ba49f784-7a88-91fe-011a-458c42a51fa6" />
    </api>
    <api id="T:System.DirectoryServices.ReferralChasingOption">
      <topicdata group="api" />
      <apidata name="ReferralChasingOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ReferralChasingOption.None" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.Subordinate" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.External" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.All" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="fb830868-4665-225d-b72d-cb482eacf892" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>96</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="a8ee40d8-c6dc-cac5-761a-69ca771fcded" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.External">
      <topicdata group="api" notopic="" />
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="83c42043-2f97-d9c4-9b7a-8ac3a41e7147" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="e8e94ad7-d2f3-0109-aaf3-9370122ea237" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <topicdata group="api" notopic="" />
      <apidata name="Subordinate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="7709f549-94ef-648a-f114-e0ec01f30e18" />
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="1a01c40a-5a4d-faea-68d0-4add0e7e5e4d" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" />
      </containers>
      <file name="fd812498-bd47-b534-562c-1c729781d7a6" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" />
      </containers>
      <file name="0d7be2cf-a50e-a609-aac9-367a647ee24c" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" />
      </containers>
      <file name="f69f8c1f-0f6f-5383-6a6f-3f5ed20851c8" />
    </api>
    <api id="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="29a59c2c-6162-1269-c474-d29dbe921318" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="512e3f3c-a9fc-688b-af14-ce6737c75b7b" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="b12c07a6-bdd8-3b75-a073-e7da33499cdc" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="47374197-e7b4-7fde-a147-66fb9cd84c46" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="c04d8eaf-1088-0f88-bdb6-2adc895b6161" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="e2bef3d0-4f3e-c254-3b48-0f010261adef" />
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="0c98d5a4-f7fb-3b99-1fc0-63ed26e1e5cd" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" />
      </containers>
      <file name="2c6b2f85-30f2-5a6d-ea81-eaa52fc6ec07" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" />
      </containers>
      <file name="a5d38215-a983-8a43-e6ad-4e838fbb5ffb" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" />
      </containers>
      <file name="63a095b9-b52b-2127-95be-5784a195fdf5" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="d9689276-8615-0202-2c30-0785e0b666cb" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="65376590-001c-e66f-7a94-a95b3d330994" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="44d2aea3-56a7-77fc-b89b-67c9bc6db954" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="704ab6da-6ffb-5261-8480-4b1feaeb825a" />
    </api>
    <api id="T:System.DirectoryServices.SchemaNameCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="72b50379-52a8-9142-5958-7db4e7a1e6de" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" />
      </containers>
      <file name="c2284a3e-728d-9cfd-f12d-d6eb84659169" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" />
      </containers>
      <file name="001da2ae-a158-8207-2e28-1aef4e613a54" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" />
      </containers>
      <file name="63c8837a-0044-9d58-da82-b9cc7940cad3" />
    </api>
    <api id="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="398a5b69-da1f-bcac-fb01-cb8189ead4e4" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="6d9c9785-f6e9-e89b-7ab8-30721c800de0" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="249b58eb-95f1-fc3e-3ef7-8e8d30036c17" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="f0572769-41f6-1ce3-2f60-092ec3e887b3" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="c853b5b2-f9d4-aba9-7c69-44f77021e5a9" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="8d4fcdcb-6700-c1a6-3106-66d6c1be40c8" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="80ac77c1-2809-64f9-fb91-aaec4ad42a72" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="9003c1f9-51eb-6e8d-90ab-08f358f3e6a1" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="6ec2afdf-8b26-7fd2-2c32-18264b43682f" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="08dd69eb-2b9d-9343-8130-7aeeb85b46a1" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="1d39c834-0f6b-8888-8ff4-1428b0970fd9" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="f08711aa-9b79-fbc3-06c9-9ecdb11e9465" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="a78d7764-2892-da23-bb7b-20ee18d240dc" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="1ae7c176-7071-92e0-87b3-301067e5cc77" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="da566dda-4555-6064-a6c5-9554faffd4a7" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="243c3d50-5b1f-5bf8-9d22-a1ff91e03487" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="c5f846ea-330a-47ee-506f-47a8fb42b904" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="ea9f34a0-1a60-1767-aa55-8e085c12ef83" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="e70cb840-7d9b-54d5-13f3-7aceff5e693b" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="051e39b0-e91d-0573-9c7f-4cab33584c5f" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="df51e9f7-252f-aec3-6a6a-fff7c5c1a33b" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="ac5110af-20b4-65f0-7678-e80e8c74643f" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="614523fe-7d55-9c2e-94bd-0601e6cead66" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="27544ad9-bb63-d87b-21bf-6849b3920b3a" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="bcc41ba7-7276-7e27-dc78-0424dbe57201" />
    </api>
    <api id="T:System.DirectoryServices.SearchResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="3b9f93d5-6a7e-4cf3-7277-d52ff72059ce" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" />
      </containers>
      <file name="94f7d929-18c1-9440-9adb-244ecc8dffc2" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" />
      </containers>
      <file name="3853ee1d-c517-b024-d1f7-26c1c28405fd" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" />
      </containers>
      <file name="4b656c70-25a9-ea2f-da57-a53b5c3e5fa8" />
    </api>
    <api id="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <file name="a9d61d8b-52a0-3f5d-ae83-fcd6bb7508a4" />
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <file name="5a371f33-2939-5ce4-b405-520ed83b4934" />
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <file name="2127a849-5286-0361-d8a7-dea8606fcbe3" />
    </api>
    <api id="T:System.DirectoryServices.SearchResultCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f2b35e4e-192e-d709-1cb5-7dc668718bc5" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
      <file name="1dd74162-17c0-a33c-8931-d7345d4dfc3e" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
      <file name="ec852c89-8d28-c1f1-a8e9-cfc12cc8093f" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
      <file name="9c6a6bc3-0d39-7f7c-81af-332eff3d9553" />
    </api>
    <api id="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="a50864cc-8928-c498-dc2f-93b9063d2bfc" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="31892c8a-b89d-b2d7-3bf2-a4841b0f9e01" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="results">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.SearchResult" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="6a63af76-5aa7-8502-18fc-f2c9a73b5910" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="c57652ff-d923-66ab-ec04-759fd46085a0" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="82225a8a-7fa2-c35f-e5c3-1c062950bb23" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="df78d153-ea6a-910f-7e1d-a5ab97eff8e0" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="2ae95b97-c5f2-1395-d6b1-41b6e56c70f9" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="9abbc596-0140-2888-87a7-223d2b86c1b7" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="3fb6e833-b580-b36d-c174-8518e36092c6" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="9fad9c8e-5f7a-9497-904b-060b15548ed4" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="11237050-020f-5771-f5b4-f54b4c2a079f" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <topicdata group="api" />
      <apidata name="PropertiesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertiesLoaded" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="52344edf-e132-a70c-823c-309b27da7682" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="0476a41a-e63a-89b3-4399-42d9095cf4d6" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="1b3d4506-e9ff-e0ec-775f-f31c00e8d611" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="545fcdd0-da71-08a6-e35c-72a62b5cfd71" />
    </api>
    <api id="T:System.DirectoryServices.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SearchScope.Base" />
        <element api="F:System.DirectoryServices.SearchScope.OneLevel" />
        <element api="F:System.DirectoryServices.SearchScope.Subtree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="6ffd4d62-1707-2ed0-cffc-ac61cacf8a87" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Base">
      <topicdata group="api" notopic="" />
      <apidata name="Base" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="39869cd8-b372-0497-40d2-020fb5a70c40" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.OneLevel">
      <topicdata group="api" notopic="" />
      <apidata name="OneLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="50322270-3bb8-1a9b-3343-1490893adcd8" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Subtree">
      <topicdata group="api" notopic="" />
      <apidata name="Subtree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="58d98f67-bd99-380b-c2c2-8c7c023bf72d" />
    </api>
    <api id="T:System.DirectoryServices.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SecurityMasks.None" />
        <element api="F:System.DirectoryServices.SecurityMasks.Owner" />
        <element api="F:System.DirectoryServices.SecurityMasks.Group" />
        <element api="F:System.DirectoryServices.SecurityMasks.Dacl" />
        <element api="F:System.DirectoryServices.SecurityMasks.Sacl" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="89f09b92-531a-3b4b-4a63-56ca8487721b" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Dacl">
      <topicdata group="api" notopic="" />
      <apidata name="Dacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="7a36f79a-cab1-4ec6-5449-10753cc2f877" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Group">
      <topicdata group="api" notopic="" />
      <apidata name="Group" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="978b4bea-4747-2bb0-0c98-4c4da983beb5" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="69793035-deda-d380-d592-0c25691a9af8" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Owner">
      <topicdata group="api" notopic="" />
      <apidata name="Owner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="4312c80a-44cd-6b6e-bdd7-81f83c2d0608" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Sacl">
      <topicdata group="api" notopic="" />
      <apidata name="Sacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="b74a64dc-ce5b-d723-5190-0ff06929b2d7" />
    </api>
    <api id="T:System.DirectoryServices.SortDirection">
      <topicdata group="api" />
      <apidata name="SortDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SortDirection.Ascending" />
        <element api="F:System.DirectoryServices.SortDirection.Descending" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="eb5aacd7-f3ad-6700-4d4b-62c886148118" />
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Ascending">
      <topicdata group="api" notopic="" />
      <apidata name="Ascending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
      <file name="ae989bb6-7e45-21ee-90ac-98232d7251a2" />
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Descending">
      <topicdata group="api" notopic="" />
      <apidata name="Descending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
      <file name="ae5b2859-b877-242d-d35b-78564ef5d79b" />
    </api>
    <api id="T:System.DirectoryServices.SortOption">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="605b0e04-35ce-fca1-7aa9-5da2ed8f1aa7" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.SortOption.#ctor">
          <element api="M:System.DirectoryServices.SortOption.#ctor" />
          <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
        </element>
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" />
      </containers>
      <file name="21499bfe-fcbf-cc33-3cf0-b2fcfc79d926" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" />
      </containers>
      <file name="46790fa2-b0ac-01e2-0187-b6308e267fc2" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" />
      </containers>
      <file name="696e7df9-1b36-4050-80cc-97d583503b17" />
    </api>
    <api id="Overload:System.DirectoryServices.SortOption.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SortOption" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.SortOption.#ctor" />
        <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="aa59c0e9-3f60-917e-a058-98d1523f5488" />
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="450c3bae-68d1-f4d7-ba14-a37ec0d63071" />
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.SortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="8815f3d5-45e6-ddf9-aec2-0d4d197087de" />
    </api>
    <api id="P:System.DirectoryServices.SortOption.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SortDirection" ref="false" />
            <enumValue>
              <field name="Ascending" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortDirection</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a89384fa-d863-1fc1-072a-2f2d628b9297" />
    </api>
    <api id="P:System.DirectoryServices.SortOption.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a21b99d5-ad66-14df-d194-baedb41379e6" />
    </api>
  </apis>
</reflection>