<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Mapping">
      <topicdata group="api" />
      <apidata name="System.Data.Mapping" group="namespace" />
      <elements>
        <element api="T:System.Data.Mapping.EntityViewContainer" />
        <element api="T:System.Data.Mapping.EntityViewGenerationAttribute" />
        <element api="T:System.Data.Mapping.MappingItemCollection" />
        <element api="T:System.Data.Mapping.StorageMappingItemCollection" />
      </elements>
      <file name="571463c5-e930-78ee-b0c3-0b07f865fa24" />
    </api>
    <api id="T:System.Data.Mapping.EntityViewContainer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Mapping.EntityViewContainer" />
      <apidata name="EntityViewContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
      </containers>
      <file name="e978c9d6-f00b-6101-b15c-4cbad09f4266" />
    </api>
    <api id="AllMembers.T:System.Data.Mapping.EntityViewContainer">
      <topicdata name="EntityViewContainer" group="list" subgroup="members" typeTopicId="T:System.Data.Mapping.EntityViewContainer" />
      <apidata name="EntityViewContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.Mapping.EntityViewContainer.#ctor" />
        <element api="P:System.Data.Mapping.EntityViewContainer.EdmEntityContainerName" />
        <element api="M:System.Data.Mapping.EntityViewContainer.GetViewAt(System.Int32)" />
        <element api="P:System.Data.Mapping.EntityViewContainer.HashOverAllExtentViews" />
        <element api="P:System.Data.Mapping.EntityViewContainer.HashOverMappingClosure" />
        <element api="P:System.Data.Mapping.EntityViewContainer.StoreEntityContainerName" />
        <element api="P:System.Data.Mapping.EntityViewContainer.ViewCount" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" />
      </containers>
      <file name="49d25ff2-0c68-0ccf-3603-25b58e07daa4" />
    </api>
    <api id="Methods.T:System.Data.Mapping.EntityViewContainer">
      <topicdata name="EntityViewContainer" group="list" subgroup="Methods" typeTopicId="T:System.Data.Mapping.EntityViewContainer" />
      <apidata name="EntityViewContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.Mapping.EntityViewContainer.GetViewAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" />
      </containers>
      <file name="970e91ac-e9c8-9b28-f4f6-a3b2fb7e4aa5" />
    </api>
    <api id="Properties.T:System.Data.Mapping.EntityViewContainer">
      <topicdata name="EntityViewContainer" group="list" subgroup="Properties" typeTopicId="T:System.Data.Mapping.EntityViewContainer" />
      <apidata name="EntityViewContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Mapping.EntityViewContainer.EdmEntityContainerName" />
        <element api="P:System.Data.Mapping.EntityViewContainer.HashOverAllExtentViews" />
        <element api="P:System.Data.Mapping.EntityViewContainer.HashOverMappingClosure" />
        <element api="P:System.Data.Mapping.EntityViewContainer.StoreEntityContainerName" />
        <element api="P:System.Data.Mapping.EntityViewContainer.ViewCount" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" />
      </containers>
      <file name="687c12dc-40b8-7374-4ba3-cf4214e7543a" />
    </api>
    <api id="M:System.Data.Mapping.EntityViewContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="73bcce10-ba08-2e13-1d44-bd9d74426b89" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewContainer.EdmEntityContainerName">
      <topicdata group="api" />
      <apidata name="EdmEntityContainerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EdmEntityContainerName" />
      <setter name="set_EdmEntityContainerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="52f85652-6893-a6d3-7a07-a11d65b712a5" />
    </api>
    <api id="M:System.Data.Mapping.EntityViewContainer.GetViewAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetViewAt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="3ceb8593-9183-d09c-358b-d02c42b3cdb1" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewContainer.HashOverAllExtentViews">
      <topicdata group="api" />
      <apidata name="HashOverAllExtentViews" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HashOverAllExtentViews" />
      <setter name="set_HashOverAllExtentViews" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="aa629a07-ca86-f9e6-15f9-2e6148530b88" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewContainer.HashOverMappingClosure">
      <topicdata group="api" />
      <apidata name="HashOverMappingClosure" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HashOverMappingClosure" />
      <setter name="set_HashOverMappingClosure" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="1af82858-8b4a-4ed7-c874-e719b9b36a65" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewContainer.StoreEntityContainerName">
      <topicdata group="api" />
      <apidata name="StoreEntityContainerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StoreEntityContainerName" />
      <setter name="set_StoreEntityContainerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="a76e1825-b559-05e5-4cd6-be7c8f9ac3e9" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewContainer.ViewCount">
      <topicdata group="api" />
      <apidata name="ViewCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_ViewCount" />
      <setter name="set_ViewCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewContainer" ref="true" />
      </containers>
      <file name="4378113f-3b4d-933f-12c4-00ac0b09d835" />
    </api>
    <api id="T:System.Data.Mapping.EntityViewGenerationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Mapping.EntityViewGenerationAttribute" />
      <apidata name="EntityViewGenerationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="bb3e7f12-237e-204a-387e-df4c2dcc3e96" />
    </api>
    <api id="AllMembers.T:System.Data.Mapping.EntityViewGenerationAttribute">
      <topicdata name="EntityViewGenerationAttribute" group="list" subgroup="members" typeTopicId="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      <apidata name="EntityViewGenerationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Data.Mapping.EntityViewGenerationAttribute.#ctor(System.Type)" />
        <element api="P:System.Data.Mapping.EntityViewGenerationAttribute.ViewGenerationType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      </containers>
      <file name="df76a402-65ef-d93c-7cfe-0413502b332b" />
    </api>
    <api id="Methods.T:System.Data.Mapping.EntityViewGenerationAttribute">
      <topicdata name="EntityViewGenerationAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      <apidata name="EntityViewGenerationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      </containers>
      <file name="774205f0-9192-8448-bbe3-abd405b2f132" />
    </api>
    <api id="Properties.T:System.Data.Mapping.EntityViewGenerationAttribute">
      <topicdata name="EntityViewGenerationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      <apidata name="EntityViewGenerationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Mapping.EntityViewGenerationAttribute.ViewGenerationType" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewGenerationAttribute" />
      </containers>
      <file name="20b5078b-668a-ab2b-09a7-3c62b5159476" />
    </api>
    <api id="M:System.Data.Mapping.EntityViewGenerationAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="viewGenerationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewGenerationAttribute" ref="true" />
      </containers>
      <file name="8f374d56-8f46-f7f7-ccb1-ae47f83168d4" />
    </api>
    <api id="P:System.Data.Mapping.EntityViewGenerationAttribute.ViewGenerationType">
      <topicdata group="api" />
      <apidata name="ViewGenerationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ViewGenerationType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.EntityViewGenerationAttribute" ref="true" />
      </containers>
      <file name="23d7f8e5-0d2c-31b4-131d-f1d5992e3d6b" />
    </api>
    <api id="T:System.Data.Mapping.MappingItemCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Mapping.MappingItemCollection" />
      <apidata name="MappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Metadata.Edm.ItemCollection" ref="true" />
          <type api="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" ref="true">
            <specialization>
              <type api="T:System.Data.Metadata.Edm.GlobalItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.Data.Metadata.Edm.GlobalItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Mapping.StorageMappingItemCollection" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fa5b402f-7449-9d41-7d6d-327026e93a8d" />
    </api>
    <api id="AllMembers.T:System.Data.Mapping.MappingItemCollection">
      <topicdata name="MappingItemCollection" group="list" subgroup="members" typeTopicId="T:System.Data.Mapping.MappingItemCollection" />
      <apidata name="MappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetType">
          <element api="M:System.Object.GetType" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.Contains">
          <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
          <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
        </element>
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.Item">
          <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
          <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
        </element>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetFunctions">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetType">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
        <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.MappingItemCollection" />
      </containers>
      <file name="c5374ffe-2c71-882c-0734-7b5c6bddd05f" />
    </api>
    <api id="Methods.T:System.Data.Mapping.MappingItemCollection">
      <topicdata name="MappingItemCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.Mapping.MappingItemCollection" />
      <apidata name="MappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetType">
          <element api="M:System.Object.GetType" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.Contains">
          <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
          <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
        </element>
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetFunctions">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.GetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
        </element>
        <element api="Overload:System.Data.Mapping.MappingItemCollection.TryGetType">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.MappingItemCollection" />
      </containers>
      <file name="0faf6d77-3743-0f23-fcc7-9359ac073292" />
    </api>
    <api id="Properties.T:System.Data.Mapping.MappingItemCollection">
      <topicdata name="MappingItemCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.Mapping.MappingItemCollection" />
      <apidata name="MappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
        <element api="Overload:System.Data.Mapping.MappingItemCollection.Item">
          <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
          <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
        </element>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
        <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.MappingItemCollection" />
      </containers>
      <file name="f1cc4cf1-8fe6-fc71-3559-ab58a08c338a" />
    </api>
    <api id="T:System.Data.Mapping.StorageMappingItemCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Data.Mapping.StorageMappingItemCollection" />
      <apidata name="StorageMappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Mapping.MappingItemCollection" ref="true" />
          <type api="T:System.Data.Metadata.Edm.ItemCollection" ref="true" />
          <type api="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" ref="true">
            <specialization>
              <type api="T:System.Data.Metadata.Edm.GlobalItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.Data.Metadata.Edm.GlobalItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e0918d9a-0c6c-b99e-9069-0ae416501462" />
    </api>
    <api id="AllMembers.T:System.Data.Mapping.StorageMappingItemCollection">
      <topicdata name="StorageMappingItemCollection" group="list" subgroup="members" typeTopicId="T:System.Data.Mapping.StorageMappingItemCollection" />
      <apidata name="StorageMappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetType">
          <element api="M:System.Object.GetType" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.Contains">
          <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
          <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
        </element>
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.Item">
          <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
          <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
        </element>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.#ctor">
          <element api="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})" />
          <element api="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])" />
        </element>
        <element api="P:System.Data.Mapping.StorageMappingItemCollection.MappingVersion" />
        <element api="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetFunctions">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetType">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
        <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" />
      </containers>
      <file name="0674596d-2e0f-9c56-f19a-ce39f8faae71" />
    </api>
    <api id="Methods.T:System.Data.Mapping.StorageMappingItemCollection">
      <topicdata name="StorageMappingItemCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.Mapping.StorageMappingItemCollection" />
      <apidata name="StorageMappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetType">
          <element api="M:System.Object.GetType" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.Contains">
          <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
          <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
        </element>
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetFunctions">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.GetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetEntityContainer">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetItem">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
        </element>
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.TryGetType">
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
          <element api="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
        </element>
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
        <element api="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" />
      </containers>
      <file name="ddc7dc20-a887-5674-0d40-03b28bfe4bfe" />
    </api>
    <api id="Properties.T:System.Data.Mapping.StorageMappingItemCollection">
      <topicdata name="StorageMappingItemCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.Mapping.StorageMappingItemCollection" />
      <apidata name="StorageMappingItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
        <element api="Overload:System.Data.Mapping.StorageMappingItemCollection.Item">
          <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
          <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
        </element>
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.Mapping.StorageMappingItemCollection.MappingVersion" />
        <element api="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
        <element api="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" />
      </containers>
      <file name="5d688183-355f-9623-26ea-b4ed81b80c04" />
    </api>
    <api id="Overload:System.Data.Mapping.StorageMappingItemCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Data.Mapping.StorageMappingItemCollection" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})" />
        <element api="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" ref="true" />
      </containers>
      <file name="221617bc-1f09-88ab-50a4-2bcb503d4247" />
    </api>
    <api id="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Mapping.StorageMappingItemCollection.#ctor" />
      <parameters>
        <parameter name="edmCollection">
          <type api="T:System.Data.Metadata.Edm.EdmItemCollection" ref="true" />
        </parameter>
        <parameter name="storeCollection">
          <type api="T:System.Data.Metadata.Edm.StoreItemCollection" ref="true" />
        </parameter>
        <parameter name="xmlReaders">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XmlReader" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" ref="true" />
      </containers>
      <file name="486dc755-80d6-ef7d-a079-61bd00cb539f" />
    </api>
    <api id="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Mapping.StorageMappingItemCollection.#ctor" />
      <parameters>
        <parameter name="edmCollection">
          <type api="T:System.Data.Metadata.Edm.EdmItemCollection" ref="true" />
        </parameter>
        <parameter name="storeCollection">
          <type api="T:System.Data.Metadata.Edm.StoreItemCollection" ref="true" />
        </parameter>
        <parameter name="filePaths" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" ref="true" />
      </containers>
      <file name="1b16240b-0dcf-0c80-fa81-1fe813c0cfef" />
    </api>
    <api id="P:System.Data.Mapping.StorageMappingItemCollection.MappingVersion">
      <topicdata group="api" />
      <apidata name="MappingVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MappingVersion" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Data.Mapping" />
        <type api="T:System.Data.Mapping.StorageMappingItemCollection" ref="true" />
      </containers>
      <file name="db3303ed-b840-80c9-2d45-52429b54b15e" />
    </api>
  </apis>
</reflection>