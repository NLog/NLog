<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ComponentModel.Composition">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Composition.ReflectionModel">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Composition.ReflectionModel" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <element api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      </elements>
      <file name="b239cbfe-f559-32ea-a377-d2396e937ec2" />
    </api>
    <api id="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name="LazyMemberInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
      </containers>
      <file name="2a92c832-c561-0830-4e04-565d241ce373" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <topicdata name="LazyMemberInfo" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name="LazyMemberInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor">
          <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])" />
        </element>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode" />
        <element api="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </containers>
      <file name="e80e284b-414f-832a-7904-d839c4a5e8ed" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <topicdata name="LazyMemberInfo" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name="LazyMemberInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </containers>
      <file name="db2944aa-a3fd-1709-726c-a2cff3363155" />
    </api>
    <api id="Operators.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <topicdata name="LazyMemberInfo" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name="LazyMemberInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </containers>
      <file name="0f3ff0e1-a7a2-1707-f8db-73485b4ecbda" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
      <topicdata name="LazyMemberInfo" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name="LazyMemberInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </containers>
      <file name="5eddf4e1-f114-4f1f-c8b1-32e6f85ee100" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="b5db1a66-1da9-9644-7f5a-cfe8ae0d9e5f" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="4a2f40e4-fbfc-558a-34f1-05256bf1d8d2" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor" />
      <parameters>
        <parameter name="memberType">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="accessorsCreator">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Reflection.MemberInfo" ref="true" />
              </arrayOf>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="b2321956-c23a-2a62-de08-233d6ebd3860" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor" />
      <parameters>
        <parameter name="memberType">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="accessors" params="true">
          <arrayOf rank="1">
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="039a688e-dc32-bfe8-736d-e30f53296c01" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="56dda172-a3b0-e0e8-f820-9aff3c85a1da" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors">
      <topicdata group="api" />
      <apidata name="GetAccessors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="061b7989-8e80-19c2-bb5b-d332c546215c" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="03fe9a4f-1ee0-fe2b-5612-cfc40b8f8a80" />
    </api>
    <api id="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType">
      <topicdata group="api" />
      <apidata name="MemberType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberType" />
      <returns>
        <type api="T:System.Reflection.MemberTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="be84231a-309d-f731-1206-46d13741236b" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="6dcd4c00-3d58-3350-8fd1-4f9553f2e69c" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </containers>
      <file name="13129230-efb2-a575-6492-32b972ce46da" />
    </api>
    <api id="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      <apidata name="ReflectionModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="dd11106b-0eb8-7169-1467-8391ab6c3110" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
      <topicdata name="ReflectionModelServices" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      <apidata name="ReflectionModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition">
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      </containers>
      <file name="cb4eaede-43cd-7d48-3fd0-b71c7368eca1" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
      <topicdata name="ReflectionModelServices" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      <apidata name="ReflectionModelServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition">
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
          <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        </element>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      </containers>
      <file name="8c40a783-edbd-ed87-1e53-cd61331af61f" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition">
      <topicdata name="CreateImportDefinition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
        <element api="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="1c03f0cb-2c89-233f-d832-ea5d2360eb6e" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateExportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exportingMember">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="ececd052-fe8c-5453-e260-8063f134c131" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importingMember">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredTypeIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredMetadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
        <parameter name="isRecomposable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isPreRequisite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="isExportFactory">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="1204da42-3ba7-d4bb-3d86-57140e7383a1" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importingMember">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredTypeIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredMetadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
        <parameter name="isRecomposable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="isExportFactory">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="e502f30e-0ee9-b4da-4fa6-261c0ccfe82c" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importingMember">
          <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredTypeIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredMetadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
        <parameter name="isRecomposable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="22019947-2d83-40d7-2634-18f538d7ff90" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.ParameterInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredTypeIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredMetadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="isExportFactory">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="f4fe3c80-a5d1-8fac-93e3-dc1f8fbfaf95" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreateImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.ParameterInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredTypeIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredMetadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cardinality">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportCardinality" ref="false" />
        </parameter>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="87b10263-f9e7-ea46-ff13-58e9246e178f" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)">
      <topicdata group="api" />
      <apidata name="CreatePartDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partType">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="isDisposalRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="imports">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="exports">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="0620a54e-f0ae-cf6b-3f14-9d723b3a7abd" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExportFactoryProductImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="de29adda-6530-a515-9698-f5144b26b195" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExportingMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exportDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="ff6b334d-50d9-ad39-807a-c8cbbbd9327b" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetImportingMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="2abdbab1-27f4-8c29-9898-67488e7e0967" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetImportingParameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.ParameterInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="eb3d4603-9fa6-0080-a034-51bdbe5b91a7" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
      <topicdata group="api" />
      <apidata name="GetPartType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="0de9f198-73ea-5e2b-9c16-370a51779558" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
      <topicdata group="api" />
      <apidata name="IsDisposalRequired" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="863467f9-8335-d2a1-7c64-f25ce92bd06a" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="IsExportFactoryImportDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="c7d54bcc-247b-f96d-db67-1fe8eced9def" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="IsImportingParameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="fecde0d1-965a-a0ae-6b49-4ef4ad0171d6" />
    </api>
    <api id="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)">
      <topicdata group="api" />
      <apidata name="TryMakeGenericPartDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partDefinition">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
        </parameter>
        <parameter name="genericParameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="specialization" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.ReflectionModel" />
        <type api="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" ref="true" />
      </containers>
      <file name="1b329f9d-7232-ba4b-cef8-aa99d4eafa0e" />
    </api>
  </apis>
</reflection>