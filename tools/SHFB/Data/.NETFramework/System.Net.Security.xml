<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net.Security">
      <topicdata group="api" />
      <apidata name="System.Net.Security" group="namespace" />
      <elements>
        <element api="T:System.Net.Security.AuthenticatedStream" />
        <element api="T:System.Net.Security.AuthenticationLevel" />
        <element api="T:System.Net.Security.ProtectionLevel" />
        <element api="T:System.Net.Security.NegotiateStream" />
        <element api="T:System.Net.Security.SslPolicyErrors" />
        <element api="T:System.Net.Security.EncryptionPolicy" />
        <element api="T:System.Net.Security.RemoteCertificateValidationCallback" />
        <element api="T:System.Net.Security.LocalCertificateSelectionCallback" />
        <element api="T:System.Net.Security.SslStream" />
      </elements>
      <file name="52d1ee66-c2d8-f579-38ef-abd762831053" />
    </api>
    <api id="T:System.Net.Security.AuthenticatedStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Security.NegotiateStream" ref="true" />
          <type api="T:System.Net.Security.SslStream" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="bc26edfb-4739-9920-dae3-699478a25f28" />
    </api>
    <api id="AllMembers.T:System.Net.Security.AuthenticatedStream">
      <topicdata name="AuthenticatedStream" group="list" subgroup="members" typeTopicId="T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Stream.CanRead" />
        <element api="P:System.IO.Stream.CanSeek" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.CanWrite" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.Flush" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.IO.Stream.Length" />
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="P:System.IO.Stream.Position" />
        <element api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Stream.SetLength(System.Int64)" />
        <element api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsServer" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsSigned" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" />
      </containers>
      <file name="795d22cc-638d-ea5f-f1e0-af3ba6b6080b" />
    </api>
    <api id="Methods.T:System.Net.Security.AuthenticatedStream">
      <topicdata name="AuthenticatedStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.Flush" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Stream.SetLength(System.Int64)" />
        <element api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" />
      </containers>
      <file name="903ecec0-a457-4531-38b7-9e471896aa03" />
    </api>
    <api id="Properties.T:System.Net.Security.AuthenticatedStream">
      <topicdata name="AuthenticatedStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Stream.CanRead" />
        <element api="P:System.IO.Stream.CanSeek" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.CanWrite" />
        <element api="P:System.IO.Stream.Length" />
        <element api="P:System.IO.Stream.Position" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsServer" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsSigned" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" />
      </containers>
      <file name="aafd41b9-afcb-f5bc-1aa4-fbc761e90dd9" />
    </api>
    <api id="Overload:System.Net.Security.AuthenticatedStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.AuthenticatedStream" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="c4e796ee-77cc-3f67-aab7-e36bc2445b4b" />
    </api>
    <api id="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="b564a650-5bd8-210f-6bba-edb0840653ea" />
    </api>
    <api id="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.AuthenticatedStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="ce0e8ae2-b1d2-29b8-f965-bd2ff4bc2832" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <topicdata group="api" />
      <apidata name="InnerStream" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="c908e76f-46b6-02d7-5aca-40bebac84d3f" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="07643624-8af7-df19-edf6-17494adabab9" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="6e0b862e-f557-5e7c-7d7f-7bc0d1d42d19" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="d939e756-4dfc-be45-4f93-9e1a93d838c3" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="bc9df6ca-c1d4-41aa-82af-5be3e755fe20" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="d4f15b65-3c68-a9a5-04f0-70f027e589a9" />
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <topicdata group="api" />
      <apidata name="LeaveInnerStreamOpen" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LeaveInnerStreamOpen" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
      <file name="7d627d22-496c-8044-dbb7-150ec32f1c30" />
    </api>
    <api id="T:System.Net.Security.AuthenticationLevel">
      <topicdata group="api" />
      <apidata name="AuthenticationLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.AuthenticationLevel.None" />
        <element api="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />
        <element api="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="1a48a615-31d5-1b0c-0995-02d62ab9ced7" />
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthRequested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
      <file name="2ef28826-861b-1de5-bfc8-a88753e3439a" />
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
      <file name="46cac99f-c47f-33e4-cc5c-72e0bc1f2ce4" />
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
      <file name="b125bf3d-073f-e326-e15a-50d4ba28ebfb" />
    </api>
    <api id="T:System.Net.Security.EncryptionPolicy">
      <topicdata group="api" />
      <apidata name="EncryptionPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.EncryptionPolicy.RequireEncryption" />
        <element api="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption" />
        <element api="F:System.Net.Security.EncryptionPolicy.NoEncryption" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="fb235a0d-7b43-68ec-9bde-857bd74c8598" />
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="AllowNoEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
      <file name="fba2fb0f-6c3f-46c1-99ab-0d79201aa957" />
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="NoEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
      <file name="7fc1ac54-a90b-2e07-4046-09802e893b17" />
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="RequireEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
      <file name="ae932759-1ddf-e386-07aa-48ec187a4b9c" />
    </api>
    <api id="T:System.Net.Security.LocalCertificateSelectionCallback">
      <topicdata group="api" />
      <apidata name="LocalCertificateSelectionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="remoteCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="acceptableIssuers">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="fb59c736-fcb4-5889-3123-dc447c555b3e" />
    </api>
    <api id="T:System.Net.Security.NegotiateStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="23d3c8a3-2d27-5c61-95e0-01452d21c55d" />
    </api>
    <api id="AllMembers.T:System.Net.Security.NegotiateStream">
      <topicdata name="NegotiateStream" group="list" subgroup="members" typeTopicId="T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.NegotiateStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.NegotiateStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.NegotiateStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.NegotiateStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.NegotiateStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="Overload:System.Net.Security.NegotiateStream.#ctor">
          <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
          <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.Net.Security.NegotiateStream.CanRead" />
        <element api="P:System.Net.Security.NegotiateStream.CanSeek" />
        <element api="P:System.Net.Security.NegotiateStream.CanTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.CanWrite" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.Flush" />
        <element api="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
        <element api="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsEncrypted" />
        <element api="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsServer" />
        <element api="P:System.Net.Security.NegotiateStream.IsSigned" />
        <element api="P:System.Net.Security.NegotiateStream.Length" />
        <element api="P:System.Net.Security.NegotiateStream.Position" />
        <element api="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:System.Net.Security.NegotiateStream.ReadTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
        <element api="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" />
      </containers>
      <file name="59ec15e6-2c7f-25b8-10f3-20bd9344b21c" />
    </api>
    <api id="Methods.T:System.Net.Security.NegotiateStream">
      <topicdata name="NegotiateStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.NegotiateStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.NegotiateStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.NegotiateStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.NegotiateStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.NegotiateStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.Flush" />
        <element api="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" />
      </containers>
      <file name="ea343a32-47b4-2b30-106e-1452bbae1a48" />
    </api>
    <api id="Properties.T:System.Net.Security.NegotiateStream">
      <topicdata name="NegotiateStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.NegotiateStream.CanRead" />
        <element api="P:System.Net.Security.NegotiateStream.CanSeek" />
        <element api="P:System.Net.Security.NegotiateStream.CanTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.CanWrite" />
        <element api="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
        <element api="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsEncrypted" />
        <element api="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsServer" />
        <element api="P:System.Net.Security.NegotiateStream.IsSigned" />
        <element api="P:System.Net.Security.NegotiateStream.Length" />
        <element api="P:System.Net.Security.NegotiateStream.Position" />
        <element api="P:System.Net.Security.NegotiateStream.ReadTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
        <element api="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" />
      </containers>
      <file name="088c4d32-fbb7-6936-b18f-810d81370006" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="4b078c28-a792-ea03-4f50-15fc073cf3f3" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
        <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="e11366a0-fc71-0a10-ad2b-807a900580dd" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <topicdata name="AuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="260f88cb-da78-07db-802f-2a2fc8db9a18" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <topicdata name="AuthenticateAsClientAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="80b24428-7e39-f3ee-2fbf-1545453fe3cf" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <topicdata name="AuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="b7c1b2ef-ce7f-47bd-946a-31f11e2da413" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <topicdata name="AuthenticateAsServerAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="c6c83be6-b1f7-dd07-a23c-1b469f4ac286" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
      <topicdata name="BeginAuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="0c8ef879-cd21-9dac-7057-b0dad63ca21f" />
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
      <topicdata name="BeginAuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.NegotiateStream" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="7638e8cc-d7ec-5d63-4850-2595c902f668" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.NegotiateStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="bdfee745-e53c-c06c-de94-0852948f876d" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.NegotiateStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="ce134d48-7f70-3602-b2ba-209ae4e2a0bb" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="cd93a56c-4698-3577-1591-3d699b63d3a4" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="e818c206-3bce-6276-54f5-62c60462c022" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="cd9a817f-625a-bd5d-a96d-0e2c2c248164" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="2b959cdb-80e0-1c08-12d1-880ede3678fa" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="04f08222-0802-11a3-3265-6091f85fe9ed" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a8fb6113-29f0-81cc-ff10-4a4d3829d35e" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a41fc82f-292b-3e39-3e0b-69ccd14a7c85" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8ba1b419-ae8d-9d2c-5164-87f3d5d12ade" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="64a5ac3d-4f00-2eaa-ae93-59624f84209c" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="929042f3-bb31-4a54-1345-0d7414888bd3" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="eafa7a03-0fa5-7e2b-0f0c-4a592dea8a6f" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="88d159ea-3feb-1cab-8af9-ee965bea9e7a" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="99706002-5f4b-d288-9505-b8bc221528be" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="40d3c85b-9f02-eff7-e2fa-1a5d48f4b694" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5ec76287-3560-8035-791a-48c5bac3cd0f" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8d51d9a5-a6c3-1f9a-0e5a-dd564904f143" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0c65825a-380c-df42-3b07-1a10badbe5b6" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="03b04315-15eb-00a0-6d52-4735cae62b5c" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a5f38859-4e87-23af-ed48-bbbeda4874be" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="3db1d116-068c-77c7-a33a-0035dcd33a8f" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f06e517a-afd5-9768-598d-4cecd941b856" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a5b90b54-1aa8-6f2d-00a2-62a3da31b1c2" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="aea6a3a9-1ddc-4d75-ad1c-7273e6ff1b44" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9f20ffd4-502e-ce3e-0bd9-2227c12d4f91" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="11865788-2be9-d603-6abc-377ec0107938" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a3e56b3e-009e-5979-40d6-22966e86ff81" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6f1e5f65-c745-3e9a-8db3-23c974e308d9" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b55dea50-c5c7-38f0-613d-dca9dbf661a5" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="399ff9cd-f3d5-7719-0b4c-ac8a296bad03" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="94bf30ec-f6aa-1c07-cbaa-8fe1687744d7" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="b659f1da-768c-ff72-1f0e-7d444e0e6dc0" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanTimeout">
      <topicdata group="api" />
      <apidata name="CanTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="432863cc-ae70-a0a2-bfc4-ffcfc2ea0f72" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="d78652fe-8c6c-492e-e13b-237f29dd2d10" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.NegotiateStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="c0563f1c-1de9-66f2-2902-a9677aaa8051" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="fcb0f8d9-1842-11b7-0395-325c395379e8" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="56941d60-4b26-b03d-39d1-44a3543df848" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="f66093d5-cdd1-fc71-d554-37f0eb8fa024" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="09161876-23b8-4834-4523-3c3a51f58179" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="73bbacd1-fc1e-c13c-28f8-1e731c2132f6" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <topicdata group="api" />
      <apidata name="ImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="75304a21-5190-c0fe-8ac6-57f5f5bd85ce" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="85d01aee-13bf-2ba9-07f6-76fa567320a4" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="9afc7478-880e-0783-d374-ea10f3a093dc" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="d8f313a5-803a-23f0-e89f-15f4214f5b5a" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsServer">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="0acb0723-d1b3-5048-191e-5219a1be2da1" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="fce32f5c-58a4-ef57-183b-0e7afcc19b58" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="f171c8a9-c044-0859-c7ec-1585c0b7f9bc" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="d348a7f8-067a-e359-c281-3ed360764ef5" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="b5871e09-e9ba-975f-5e87-3eef684dfffd" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <topicdata group="api" />
      <apidata name="ReadTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.ReadTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ReadTimeout" />
      <setter name="set_ReadTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="766c356b-5f24-3922-982f-d368e202d281" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <topicdata group="api" />
      <apidata name="RemoteIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteIdentity" />
      <returns>
        <type api="T:System.Security.Principal.IIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="752f4c0f-d78f-c07d-d699-b37927f6445e" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="b9b8d1cc-a4b0-ab80-447e-0ffdbc93ba1d" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="1b108f70-691f-b177-3580-c01296605cad" />
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="bb3652c6-1f76-3e2a-6739-ca9640c51a20" />
    </api>
    <api id="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <topicdata group="api" />
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.WriteTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <file name="98aa0ca0-6abc-6b34-1534-3ca4bccab079" />
    </api>
    <api id="T:System.Net.Security.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.ProtectionLevel.None" />
        <element api="F:System.Net.Security.ProtectionLevel.Sign" />
        <element api="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="899fd0a8-e9cb-0196-937c-da3c226fcd30" />
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <topicdata group="api" notopic="" />
      <apidata name="EncryptAndSign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
      <file name="6dd769d5-03e9-6093-0ba1-048e54db11d4" />
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
      <file name="068d136b-3b3f-51a0-10d7-23ca44043379" />
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.Sign">
      <topicdata group="api" notopic="" />
      <apidata name="Sign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
      <file name="8232392d-8ccc-c9e8-0c5d-49825dd33153" />
    </api>
    <api id="T:System.Net.Security.RemoteCertificateValidationCallback">
      <topicdata group="api" />
      <apidata name="RemoteCertificateValidationCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="chain">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Chain" ref="true" />
        </parameter>
        <parameter name="sslPolicyErrors">
          <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="b3a0c706-1033-a543-01ca-23d09fcc121a" />
    </api>
    <api id="T:System.Net.Security.SslPolicyErrors">
      <topicdata group="api" />
      <apidata name="SslPolicyErrors" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.SslPolicyErrors.None" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0616abdc-aa8c-834a-b3d7-8538c540f624" />
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
      <file name="2073fdd8-41a6-fcbe-a555-fac818493839" />
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateChainErrors" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
      <file name="29dabc92-eaf8-60ed-b2e6-5d14b4e97fca" />
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateNameMismatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
      <file name="3bc0c901-0a4f-5e7c-f77f-28623da8670e" />
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateNotAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
      <file name="698bda5c-3d7b-9880-db63-bdbc9b7eee2d" />
    </api>
    <api id="T:System.Net.Security.SslStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <file name="4e259fec-aa5c-3d0d-3904-73144b06e248" />
    </api>
    <api id="AllMembers.T:System.Net.Security.SslStream">
      <topicdata name="SslStream" group="list" subgroup="members" typeTopicId="T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.SslStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.SslStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.SslStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.SslStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.SslStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="Overload:System.Net.Security.SslStream.#ctor">
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.Net.Security.SslStream.CanRead" />
        <element api="P:System.Net.Security.SslStream.CanSeek" />
        <element api="P:System.Net.Security.SslStream.CanTimeout" />
        <element api="P:System.Net.Security.SslStream.CanWrite" />
        <element api="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
        <element api="P:System.Net.Security.SslStream.CipherAlgorithm" />
        <element api="P:System.Net.Security.SslStream.CipherStrength" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.Flush" />
        <element api="P:System.Net.Security.SslStream.HashAlgorithm" />
        <element api="P:System.Net.Security.SslStream.HashStrength" />
        <element api="P:System.Net.Security.SslStream.IsAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsEncrypted" />
        <element api="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsServer" />
        <element api="P:System.Net.Security.SslStream.IsSigned" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeStrength" />
        <element api="P:System.Net.Security.SslStream.Length" />
        <element api="P:System.Net.Security.SslStream.LocalCertificate" />
        <element api="P:System.Net.Security.SslStream.Position" />
        <element api="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:System.Net.Security.SslStream.ReadTimeout" />
        <element api="P:System.Net.Security.SslStream.RemoteCertificate" />
        <element api="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
        <element api="P:System.Net.Security.SslStream.SslProtocol" />
        <element api="P:System.Net.Security.SslStream.TransportContext" />
        <element api="Overload:System.Net.Security.SslStream.Write">
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Net.Security.SslStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" />
      </containers>
      <file name="90e06e97-eda0-5c07-b5b0-41b5e0d169cb" />
    </api>
    <api id="Methods.T:System.Net.Security.SslStream">
      <topicdata name="SslStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.SslStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.SslStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.SslStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.SslStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.SslStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.Flush" />
        <element api="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
        <element api="Overload:System.Net.Security.SslStream.Write">
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" />
      </containers>
      <file name="8331dc28-e3ce-2ecd-904e-f45c2c2a0ee3" />
    </api>
    <api id="Properties.T:System.Net.Security.SslStream">
      <topicdata name="SslStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.SslStream.CanRead" />
        <element api="P:System.Net.Security.SslStream.CanSeek" />
        <element api="P:System.Net.Security.SslStream.CanTimeout" />
        <element api="P:System.Net.Security.SslStream.CanWrite" />
        <element api="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
        <element api="P:System.Net.Security.SslStream.CipherAlgorithm" />
        <element api="P:System.Net.Security.SslStream.CipherStrength" />
        <element api="P:System.Net.Security.SslStream.HashAlgorithm" />
        <element api="P:System.Net.Security.SslStream.HashStrength" />
        <element api="P:System.Net.Security.SslStream.IsAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsEncrypted" />
        <element api="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsServer" />
        <element api="P:System.Net.Security.SslStream.IsSigned" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeStrength" />
        <element api="P:System.Net.Security.SslStream.Length" />
        <element api="P:System.Net.Security.SslStream.LocalCertificate" />
        <element api="P:System.Net.Security.SslStream.Position" />
        <element api="P:System.Net.Security.SslStream.ReadTimeout" />
        <element api="P:System.Net.Security.SslStream.RemoteCertificate" />
        <element api="P:System.Net.Security.SslStream.SslProtocol" />
        <element api="P:System.Net.Security.SslStream.TransportContext" />
        <element api="P:System.Net.Security.SslStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" />
      </containers>
      <file name="90ad982c-d77d-7f6c-dff9-6044de5a08f6" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="6761f5ba-126a-fbba-8cc6-5a80ce9499fb" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="3ebaeb06-c55a-0a69-4c7e-6bea447c238a" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
      <topicdata name="AuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="bdc2f0ac-7f81-cc44-76a1-4ac8d7616886" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
      <topicdata name="AuthenticateAsClientAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="089a8a87-2c1c-74d1-c0f3-c92f21af3819" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
      <topicdata name="AuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="39c3b559-0982-481e-e233-3b1d49221a35" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
      <topicdata name="AuthenticateAsServerAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="fa92ba9a-48b3-604a-6cd7-7b4c3b4ab545" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
      <topicdata name="BeginAuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="9e78c9f9-2e59-3d83-8a77-2646ad237802" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
      <topicdata name="BeginAuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="3e77a303-8991-57d3-95c4-ea069fef8e51" />
    </api>
    <api id="Overload:System.Net.Security.SslStream.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Security.SslStream" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
        <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="eaf81398-ac91-43aa-78be-1e179e8415bb" />
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="5b4a3fe1-5ff5-8950-6c4b-f4c1d30ffe92" />
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="43ea7d4f-83ac-28b1-ad37-669ecc395b4d" />
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="8e887dd4-cc08-32e2-72d7-8c1b3c12b7cf" />
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
        <parameter name="userCertificateSelectionCallback">
          <type api="T:System.Net.Security.LocalCertificateSelectionCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="41bb431d-ac05-18fa-8dd2-c815bf03854f" />
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
        <parameter name="userCertificateSelectionCallback">
          <type api="T:System.Net.Security.LocalCertificateSelectionCallback" ref="true" />
        </parameter>
        <parameter name="encryptionPolicy">
          <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="31117a6a-7158-9065-8e3f-b6c3081aad32" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="4b433b8e-9656-e540-4fb2-8bba73ede10f" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="ada37c64-c730-6a8b-73aa-6d0b8c097d6e" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="7a3cf8ca-c82b-1ac3-b691-175a21cc880a" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b929e919-14cc-1df4-dec1-b77f6b4ee789" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="fd55ade7-b992-af53-3597-a3b91cf21183" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="2ceef9ac-167a-b5e9-047f-7841f9474d9d" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4253e69e-2002-454f-af40-69fec3441d51" />
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="bae3f363-8c2b-3384-6452-45e038395f64" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e1ffed64-7c97-e2de-bf6f-8c667d49a931" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8f52033d-2bfd-c16c-a9d4-9d14973a3789" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f039836e-7aa9-b138-e06c-bf9e55728f0f" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b1bd4a72-386b-318d-6b53-4105fabbe2ee" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f462612f-4c1f-1c2c-83e6-63a4d91a7d10" />
    </api>
    <api id="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="02cc7cc2-a72a-9b35-cb80-2073efacff5e" />
    </api>
    <api id="P:System.Net.Security.SslStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="d33f1094-4cc7-8388-60ef-eb8d406e2e7e" />
    </api>
    <api id="P:System.Net.Security.SslStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="c1e5aa47-1ccc-d621-df4c-018ea5c9aa90" />
    </api>
    <api id="P:System.Net.Security.SslStream.CanTimeout">
      <topicdata group="api" />
      <apidata name="CanTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="f337aeb4-7614-80b5-4b56-ff3d1b188120" />
    </api>
    <api id="P:System.Net.Security.SslStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="1dc87e92-0d7a-6e00-194f-31c18214f1de" />
    </api>
    <api id="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <topicdata group="api" />
      <apidata name="CheckCertRevocationStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CheckCertRevocationStatus" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="efbafa65-2b71-1528-b89d-e6970023a1a6" />
    </api>
    <api id="P:System.Net.Security.SslStream.CipherAlgorithm">
      <topicdata group="api" />
      <apidata name="CipherAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CipherAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.CipherAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="72ab487d-a365-1af4-8f63-f5870e30e1cb" />
    </api>
    <api id="P:System.Net.Security.SslStream.CipherStrength">
      <topicdata group="api" />
      <apidata name="CipherStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CipherStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="95cc2121-12a8-6c4a-ab49-6eff2842edf7" />
    </api>
    <api id="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.SslStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="24db0389-e20b-42d8-80d2-afce387d3a68" />
    </api>
    <api id="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="c04c5743-fb7c-1051-801c-a78ed42f019e" />
    </api>
    <api id="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="18971289-e4b3-341e-735d-2f6003ec4ca1" />
    </api>
    <api id="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="9de6ac8e-1ac8-dd88-9e7d-76251934e4a7" />
    </api>
    <api id="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="7a691322-98ec-f646-6c03-653a0bcbc363" />
    </api>
    <api id="M:System.Net.Security.SslStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="5c6fb07f-6e3b-9035-be42-7548c30ae1fa" />
    </api>
    <api id="P:System.Net.Security.SslStream.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HashAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.HashAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="9d6801ff-2c4c-221e-1363-417b5db4decd" />
    </api>
    <api id="P:System.Net.Security.SslStream.HashStrength">
      <topicdata group="api" />
      <apidata name="HashStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HashStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="d9a982b0-d695-487a-9e38-ccd76002c88a" />
    </api>
    <api id="P:System.Net.Security.SslStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="ca6e2123-a5be-6e29-bc80-30075a3c7234" />
    </api>
    <api id="P:System.Net.Security.SslStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="b018b894-c52a-d8a9-5815-0543e9bf1214" />
    </api>
    <api id="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="b63cc920-42a9-3bed-f543-d567439e93e3" />
    </api>
    <api id="P:System.Net.Security.SslStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsServer">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="8606e884-15e7-c47f-0a17-2745a04d5f20" />
    </api>
    <api id="P:System.Net.Security.SslStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="3c07a0b5-3257-807b-7011-9f8cac3b4095" />
    </api>
    <api id="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <topicdata group="api" />
      <apidata name="KeyExchangeAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyExchangeAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.ExchangeAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="b3504cd0-e416-ba99-c223-90aff0691599" />
    </api>
    <api id="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <topicdata group="api" />
      <apidata name="KeyExchangeStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyExchangeStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="7bd543ec-5c14-aa22-deb4-86eda6fd0fab" />
    </api>
    <api id="P:System.Net.Security.SslStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="a9628067-91b1-f740-dec3-83210622c6ef" />
    </api>
    <api id="P:System.Net.Security.SslStream.LocalCertificate">
      <topicdata group="api" />
      <apidata name="LocalCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocalCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="f7578695-d308-5c1e-c69e-b6d9720e0d1a" />
    </api>
    <api id="P:System.Net.Security.SslStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="78be3ef0-088b-f186-98ca-d910a9ce3ecf" />
    </api>
    <api id="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="edd7b6b4-31d1-b407-3c37-dfdcbece1068" />
    </api>
    <api id="P:System.Net.Security.SslStream.ReadTimeout">
      <topicdata group="api" />
      <apidata name="ReadTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.ReadTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ReadTimeout" />
      <setter name="set_ReadTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="74ec88bb-9b62-59d3-200d-bcd724a34461" />
    </api>
    <api id="P:System.Net.Security.SslStream.RemoteCertificate">
      <topicdata group="api" />
      <apidata name="RemoteCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="fdfe8766-0c88-ffec-1c30-0298dff7ee33" />
    </api>
    <api id="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="0c3249cf-7587-758f-946d-79cc82b83fb7" />
    </api>
    <api id="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="913c3868-ba90-d32d-5bc7-8241cb04df3d" />
    </api>
    <api id="P:System.Net.Security.SslStream.SslProtocol">
      <topicdata group="api" />
      <apidata name="SslProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SslProtocol" />
      <returns>
        <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="0f5c6fbc-2e5b-35ec-a219-c86db79e3e5b" />
    </api>
    <api id="P:System.Net.Security.SslStream.TransportContext">
      <topicdata group="api" />
      <apidata name="TransportContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportContext" />
      <returns>
        <type api="T:System.Net.TransportContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="a54f763a-d167-964e-ac30-fc8bddb85705" />
    </api>
    <api id="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="7171bb5a-ec6b-2147-e6b0-c53a46b02ba4" />
    </api>
    <api id="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="e1616bf5-3aa2-ec4d-bd44-f9bc5ba4f94f" />
    </api>
    <api id="P:System.Net.Security.SslStream.WriteTimeout">
      <topicdata group="api" />
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.WriteTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <file name="057538d3-9ddd-5ef9-a2a3-8844208c614a" />
    </api>
  </apis>
</reflection>